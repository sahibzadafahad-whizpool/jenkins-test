{"version":3,"sources":["webpack:///./node_modules/ng2-search-filter/ng2-search-filter.es5.js","webpack:///./src/app/classes/manageClass.service.ts","webpack:///./src/app/manage-fee-invoice/manage-fee-invoice.component.html","webpack:///./src/app/manage-fee-invoice/manage-fee-invoice.component.scss","webpack:///./src/app/manage-fee-invoice/manage-fee-invoice.component.ts","webpack:///./src/app/manage-fee-invoice/manage-fee-invoice.module.ts","webpack:///./src/app/manage-fee-invoice/manage-fee-invoice.routing.ts","webpack:///./src/app/manage-fee-invoice/search.pipe.ts"],"names":[],"mappings":"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","file":"manage-fee-invoice-manage-fee-invoice-module.js","sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\nvar Ng2SearchPipe = /** @class */ (function () {\n    function Ng2SearchPipe() {\n    }\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    Ng2SearchPipe.prototype.transform = function (items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    };\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    Ng2SearchPipe.filter = function (items, term) {\n        var /** @type {?} */ toCompare = term.toLowerCase();\n        return items.filter(function (item) {\n            for (var /** @type {?} */ property in item) {\n                if (item[property] === null) {\n                    continue;\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    return Ng2SearchPipe;\n}());\nNg2SearchPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filter',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = function () { return []; };\nvar Ng2SearchPipeModule = /** @class */ (function () {\n    function Ng2SearchPipeModule() {\n    }\n    return Ng2SearchPipeModule;\n}());\nNg2SearchPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            },] },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = function () { return []; };\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n//# sourceMappingURL=ng2-search-filter.es5.js.map\n","// ******************** Node APIs path  MainProject/Routes/route.js *********************** */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { GlobalService } from './../shared/services/global.service';\r\n\r\n@Injectable()\r\nexport class ClassDataService {\r\n  constructor(private http: Http, private _globalService: GlobalService) {}\r\n\r\n  public serverLink = this._globalService.constants.serverLink;\r\n  public headers = new Headers(this._globalService.constants.headers);\r\n\r\n   // *********************** Call  API for Updating Class Data *****************************\r\n\r\n  updateSubClass(classUpdateDetails, id) {\r\n    return this.http\r\n      .put(this.serverLink + 'update/subclass/' + id, classUpdateDetails, {\r\n        headers: this.headers\r\n      })\r\n      .map(response => response.json());\r\n  }\r\n  \r\n  // *********************** Call API for retreiewing sub Class Data ********************\r\n\r\n  getSubClasses() {\r\n    return this.http\r\n      .get(this.serverLink + 'get/subclasses', {\r\n        headers: this.headers\r\n      })\r\n      .map(response => response.json());\r\n  }\r\n  \r\n  // *********************** Call API for retreiewing Class Data ********************\r\n\r\n  getClassesF() {\r\n    return this.http\r\n      .get(this.serverLink + 'get/classes', {\r\n        headers: this.headers\r\n      })\r\n      .map(response => response.json());\r\n  }\r\n\r\n  // *********************** Call API for retreiewing single Class Data By ID********************\r\n\r\n  getSingleClassByIdF(id) {\r\n    return this.http\r\n      .get(this.serverLink + 'get/classById/' + id, {\r\n        headers: this.headers\r\n      })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // ********************* Call API to check whether class already added ******************* */\r\n\r\n  classExistCheckF(c_name) {\r\n    return this.http\r\n      .get(this.serverLink + 'get/classByName/' + c_name, {\r\n        headers: this.headers\r\n      })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // *********************** Call  API for Adding New Class Data *****************************\r\n\r\n  addClassF(classDetails) {\r\n    return this.http\r\n      .post(this.serverLink + 'add/class', classDetails, {\r\n        headers: this.headers\r\n      })\r\n      .map(response => response.json());\r\n  }\r\n\r\n  // *********************** Call  API for Adding New Sub Class Data *****************************  \r\n  addSubClass(classDetails) {\r\n    return this.http\r\n      .post(this.serverLink + 'add/subclass', classDetails, {\r\n        headers: this.headers\r\n      })\r\n      .map(response => response.json());\r\n  }\r\n\r\n  // *********************** Call  API for Updating Class Data *****************************\r\n\r\n  updateClassF(classUpdateDetails, id) {\r\n    return this.http\r\n      .put(this.serverLink + 'update/class/' + id, classUpdateDetails, {\r\n        headers: this.headers\r\n      })\r\n      .map(response => response.json());\r\n  }\r\n\r\n  // *********************** Call  API for Deleting Teachers Data *****************************\r\n\r\n  deleteClassF(deleteStatus, id) {\r\n    return this.http\r\n      .put(this.serverLink + 'delete/class/' + id, deleteStatus, {\r\n        headers: this.headers\r\n      })\r\n      .map(response => response.json());\r\n  } \r\n  \r\n  deleteSubClass(deleteStatus, id) {\r\n    return this.http\r\n      .put(this.serverLink + 'delete/subclass/' + id, deleteStatus, {\r\n        headers: this.headers\r\n      })\r\n      .map(response => response.json());\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 grid-margin stretch-card\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n            <h4 class=\\\"card-title\\\">Manage Student Payments</h4>\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-5 col-md-5\\\">\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-3\\\">\\r\\n            <button _ngcontent-c2=\\\"\\\" (click)=\\\" openNgModal(generateInvoiceModal, 'md')\\\" class=\\\"btn btn-success btn-block\\\">\\r\\n              Generate Fee Invoice\\r\\n              <i _ngcontent-c2=\\\"\\\" class=\\\"mdi mdi-plus\\\"></i></button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div style=\\\"text-align: center\\\">\\r\\n          <h5 style=\\\"color: red;\\\"> {{dbRespMsg}}</h5>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-12 vol-md-12\\\">\\r\\n            <hr>\\r\\n            <form style=\\\"margin-top:2em;\\\" class=\\\"form-group\\\" #listFeeDetails=\\\"ngForm\\\"\\r\\n              (ngSubmit)=onSubmitListStdFeeDetails(listFeeDetails)>\\r\\n\\r\\n\\r\\n              <div class=\\\"col-md-5 form-group\\\">\\r\\n                <label class=\\\"control-label\\\"> Select Class To List Students Fee Details *</label>\\r\\n                <span style=\\\"color:red; margin-left: 1em;\\\"\\r\\n                  *ngIf=\\\"!pickedCLass.valid && pickedCLass.touched\\\"><small>Class\\r\\n                    Required</small></span>\\r\\n                <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" #pickedCLass\\r\\n                  [(ngModel)]=\\\"classid\\\" name=\\\"classid\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\" disabled>Select Class</option>\\r\\n                  <option *ngFor=\\\"let item of classdataList\\\" [value]=\\\"item.class_id\\\">{{item.class_name}}</option>\\r\\n                </select>\\r\\n\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-5 col-md-push-1 form-group\\\">\\r\\n                <label class=\\\"control-label\\\"> Fee Month *</label>\\r\\n                <span style=\\\"color:red; margin-left: 1em;\\\"\\r\\n                  *ngIf=\\\"!pickeddLFeeMonth.valid && pickeddLFeeMonth.touched\\\"><small>Fee\\r\\n                    month\\r\\n                    Required</small></span>\\r\\n                <input type=\\\"month\\\" required class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"feeMonth\\\"\\r\\n                  [(ngModel)]=\\\"feeMonth\\\" #pickeddLFeeMonth=\\\"ngModel\\\">\\r\\n\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12 form-group\\\" style=\\\"text-align: center\\\">\\r\\n                <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" style=\\\"margin-top:1em\\\"\\r\\n                  [disabled]=\\\"!listFeeDetails.form.valid \\\" value=\\\"List Student Fee Details\\\">\\r\\n\\r\\n              </div>\\r\\n              <div style=\\\"text-align: center\\\" class=\\\"col-lg-12 col-md-12\\\">\\r\\n                    {{ datanotfounfMsg }}\\r\\n              </div>\\r\\n            </form>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-lg-12 col-md-12\\\"  *ngIf=\\\"showHeading\\\">\\r\\n\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n            <h3> {{selectedClass}} Students Fee Details </h3>\\r\\n            <div *ngIf=showFeeDetailsHeading>\\r\\n              <h3> Fee Month : {{ selectedMonth  | date: 'MMMM - '}} {{selectedMonthYear}} </h3>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <hr>\\r\\n          <div class=\\\"row\\\" style=\\\"margin-top: 1em; margin-bottom: 0em; padding-bottom: 1.5em; padding-top: 0em;\\\">\\r\\n            <div class=\\\"col-lg-4\\\">\\r\\n              <input class=\\\"form-control fm-control\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Roll Num / Student Name\\\">\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"table-responsive\\\" style=\\\"overflow-x: unset;\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n                  <th>S.No</th>\\r\\n                  <th>Roll Num</th>\\r\\n                  <th>Name </th>\\r\\n                  <th>Section </th>\\r\\n                  <th>Total </th>\\r\\n                  <th>Paid </th>\\r\\n                  <th>Due </th>\\r\\n                  <th>Due Date</th>\\r\\n                  <th>Fee Status</th>\\r\\n\\r\\n                  <th>Options</th>\\r\\n\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let item of StdFeeInvoiceData | filter:searchText let index = index\\\">\\r\\n\\r\\n                  <td>{{index + 1}}</td>\\r\\n                  <td>{{item.roll_num}}</td>\\r\\n                  <td>{{item.std_name}}</td>\\r\\n\\r\\n                  <td>{{item.section_name}}</td>\\r\\n                  <td style=\\\"color: brown\\\"><strong>{{item.total_fee}} </strong></td>\\r\\n                  <td> {{item.amount_paid}}</td>\\r\\n                  <td> {{item.amount_due}}</td>\\r\\n                  <td> {{item.duedate_timestamp * 1000 | date }}</td>\\r\\n                  <td><strong>\\r\\n                      <span\\r\\n                        [style.color]=\\\"item.fee_status == 'unpaid' ? 'red': (item.fee_status == 'paid' ? 'green' : 'brown')\\\">\\r\\n                        {{item.fee_status}}\\r\\n                      </span>\\r\\n\\r\\n\\r\\n                    </strong></td>\\r\\n\\r\\n\\r\\n                  <td>\\r\\n\\r\\n\\r\\n                    <div ngbDropdown class=\\\"d-inline-block\\\">\\r\\n                      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton1\\\" ngbDropdownToggle>\\r\\n                        Actions\\r\\n                      </button>\\r\\n                      <div ngbDropdownMenu aria-labelledby=\\\"dropdownMenuButton1\\\">\\r\\n\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\"\\r\\n                          (click)=\\\"onClickviewInvoice(feeInvoiceModal,index)\\\">View\\r\\n                          Invoice <i class=\\\"fa fa-address-card\\\" style=\\\"padding-left: 1em;\\\"></i></a>\\r\\n                        <div *ngIf=\\\"(item.fee_status != 'paid' && admin_level == 1 )\\\">\\r\\n                          <div class=\\\"dropdown-divider\\\"></div>\\r\\n                          <a style=\\\"cursor: pointer;\\\" class=\\\"dropdown-item\\\"\\r\\n                            (click)=\\\"onClickUpdateInvoice(updateInvoiceModal,index)\\\">Update\\r\\n                            <i class=\\\"fa fa-edit\\\" style=\\\"padding-left: 1em;\\\"></i></a>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"(item.fee_status != 'paid')\\\">\\r\\n                          <div class=\\\"dropdown-divider\\\"></div>\\r\\n                          <a style=\\\"cursor: pointer;\\\" class=\\\"dropdown-item\\\"\\r\\n                            (click)=\\\"onClickUpdateFeePayment(updateFeeStatusModal,index)\\\">Take\\r\\n                            Payement <i class=\\\"fa fa-money\\\" style=\\\"padding-left: .5em;\\\"></i></a>\\r\\n                        </div>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- *********************************** Modals **************************************** -->\\r\\n\\r\\n<!-- ******** Generate Fee Invoice  Modal ************ -->\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #generateInvoiceModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <h3>Generate Fee Invoice</h3>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n      <form class=\\\"form-group\\\" #addfeeInvoice=\\\"ngForm\\\" (ngSubmit)=\\\"onClickAddClassFeeInvoice(addfeeInvoice)\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <label class=\\\"control-label\\\"> Class *</label>\\r\\n      <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedCLassE.valid && pickedCLassE.touched\\\"><small>Class\\r\\n          Required</small></span>\\r\\n      <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" #pickedCLassE [(ngModel)]=\\\"class_id\\\"\\r\\n        (change)=getFeeStructDataByClassId(pickedCLassE.value); name=\\\"class_id\\\">\\r\\n        <option [ngValue]=\\\"undefined\\\" disabled>Select Class</option>\\r\\n        <option *ngFor=\\\"let item of classdataList\\\" [value]=\\\"item.class_id\\\">{{item.class_name}}</option>\\r\\n      </select>\\r\\n\\r\\n      <label class=\\\"control-label\\\"> Fee Invoice Title\\r\\n      </label>\\r\\n\\r\\n      <input type=\\\"text\\\" disabled class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"fee_title\\\"\\r\\n        [(ngModel)]=\\\"fee_title\\\">\\r\\n\\r\\n      <label class=\\\"control-label\\\"> Total Class Fee\\r\\n      </label>\\r\\n\\r\\n\\r\\n      <input type=\\\"text\\\" disabled class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"fee_amount\\\"\\r\\n        [(ngModel)]=\\\"fee_amount\\\">\\r\\n\\r\\n      <label class=\\\"control-label\\\">Fee Month *</label>\\r\\n      <input type=\\\"month\\\" required class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"fee_month\\\"\\r\\n        [(ngModel)]=\\\"fee_month\\\" #pickeddFeeMonth=\\\"ngModel\\\">\\r\\n      <p class=\\\"alert alert-danger\\\" *ngIf=\\\"!pickeddFeeMonth.valid && pickeddFeeMonth.touched\\\"\\r\\n        style=\\\"margin-top:1em; margin-left:0em;\\\">\\r\\n        Fee month is required!\\r\\n      </p>\\r\\n\\r\\n      <label class=\\\"control-label\\\">Fee Due Date * </label>\\r\\n      <input type=\\\"date\\\" required class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"duedate_timestamp\\\"\\r\\n        [(ngModel)]=\\\"duedate_timestamp\\\" #pickedDueDate=\\\"ngModel\\\">\\r\\n      <p class=\\\"alert alert-danger\\\" *ngIf=\\\"!pickedDueDate.valid && pickedDueDate.touched\\\"\\r\\n        style=\\\"margin-top:1em; margin-left:0em;\\\">\\r\\n        Due Date is required!\\r\\n      </p>\\r\\n\\r\\n      <label class=\\\"control-label\\\">Invoice Description </label>\\r\\n      <textarea rows=\\\"3\\\" cols=\\\"30\\\" class=\\\"form-control fm-control\\\" name=\\\"fee_desc\\\" [(ngModel)]=\\\"fee_desc\\\"> </textarea>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n      <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"!addfeeInvoice.form.valid\\\" value=\\\"Create fee Invoice\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- ******** Student Fee invoice Details  Modal ************ -->\\r\\n\\r\\n\\r\\n<ng-template #feeInvoiceModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <h3>Fee Invoice Details</h3>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\" id=\\\"print-section\\\">\\r\\n\\r\\n      <div class=\\\"col-lg-12 col-md-12\\\" style=\\\"text-align: center\\\">\\r\\n        <h3> Invoice For : {{name}}</h3>\\r\\n        <hr>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-lg-4 col-md-4\\\" style=\\\"margin-left: 1em; font-size:1rem;\\\">\\r\\n\\r\\n        <p><strong> Roll Num: </strong> {{rollnum}} </p>\\r\\n        <p><strong> Class :</strong> {{className}}</p>\\r\\n        <p><strong> Section :</strong> {{section}}</p>\\r\\n\\r\\n      </div>\\r\\n<div class=\\\"col-lg-3 col-md-3\\\"> </div>\\r\\n      <div class=\\\"col-lg-4 col-md-4\\\">\\r\\n        <p><strong> Creation Date : </strong> {{feeCreationDate * 1000 | date}} </p>\\r\\n        <p> <strong> Due Date : </strong> {{dueDate * 1000 | date}}</p>\\r\\n        <p> <strong> Fee Month : </strong> {{selectedMonth | date: 'MMMM - '}} {{selectedMonthYear}} </p>\\r\\n        <p> <strong> Description : </strong> {{feeDesc}} </p>\\r\\n        <p> <strong> Fee Status : </strong> {{feeStatus}}</p>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-lg-12 col-md-12 \\\" style=\\\"margin-top:1em;\\\">\\r\\n\\r\\n        <table class=\\\"table table-hover\\\">\\r\\n\\r\\n          <thead class=\\\"thead-light\\\">\\r\\n            <tr>\\r\\n              <th>Title</th>\\r\\n              <th>Amount</th>\\r\\n              <th>Description</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr>\\r\\n\\r\\n              <td>{{feeTitle}}</td>\\r\\n              <td>{{feeAmount}}</td>\\r\\n               <td> {{ feeDesc == '' ? '-' : feeDesc}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n\\r\\n              <td>Extra Charges</td>\\r\\n              <td>{{extraChargesDesc}}</td>\\r\\n              <td>{{extraChargesAmount}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n\\r\\n              <td>Discounts</td>\\r\\n              <td> - </td>\\r\\n              <td>{{discountAmount}}</td>\\r\\n            </tr>\\r\\n\\r\\n            <tr>\\r\\n              <td>\\r\\n\\r\\n              </td>\\r\\n              <td>\\r\\n\\r\\n              </td>\\r\\n              <td>\\r\\n                <h4>Total Amount = {{totalAmount}}</h4>\\r\\n                <h3>Paid Amount = {{amountPaid}}</h3>\\r\\n                <h3>Due Amount = {{dueAmount}}</h3>\\r\\n\\r\\n              </td>\\r\\n            </tr>\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<!-- ******** Update invoice Modal ************ -->\\r\\n\\r\\n<ng-template #updateInvoiceModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <h3>Update Invoice Details</h3>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n      <form class=\\\"form-group\\\" #updatefeeInvoice=\\\"ngForm\\\" (ngSubmit)=\\\"updateStdFeeInvoice(updatefeeInvoice)\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n\\r\\n      <input type=\\\"hidden\\\" class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"invoice_id\\\"\\r\\n        [(ngModel)]=\\\"invoice_id\\\">\\r\\n      <label class=\\\"control-label\\\"> Student Name\\r\\n      </label>\\r\\n\\r\\n      <input type=\\\"text\\\" disabled class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"uStudent_name\\\"\\r\\n        [(ngModel)]=\\\"uStudent_name\\\">\\r\\n\\r\\n      <label class=\\\"control-label\\\"> Fee Invoice Title *\\r\\n      </label>\\r\\n\\r\\n      <input type=\\\"text\\\" required class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"ufee_title\\\"\\r\\n        [(ngModel)]=\\\"ufee_title\\\" #pickedInvoiceTitle=\\\"ngModel\\\">\\r\\n      <p class=\\\"alert alert-danger\\\" *ngIf=\\\"!pickedInvoiceTitle.valid && pickedInvoiceTitle.touched\\\"\\r\\n        style=\\\"margin-top:1em; margin-left:0em;\\\">\\r\\n        Invoice title is required\\r\\n      </p>\\r\\n\\r\\n\\r\\n      <label class=\\\"control-label\\\"> Fee Amount *\\r\\n      </label>\\r\\n\\r\\n      <input type=\\\"number\\\" required class=\\\"form-control fm-control\\\" #pickedStdFeeAmount=\\\"ngModel\\\"\\r\\n        style=\\\"margin-top:0em;\\\" name=\\\"ufee_amount\\\" [(ngModel)]=\\\"ufee_amount\\\">\\r\\n\\r\\n      <p class=\\\"alert alert-danger\\\" *ngIf=\\\"!pickedStdFeeAmount.valid && pickedStdFeeAmount.touched\\\"\\r\\n        style=\\\"margin-top:1em; margin-left:0em;\\\">\\r\\n        Fee amount is required\\r\\n      </p>\\r\\n\\r\\n      <label class=\\\"control-label\\\">Extra Charges</label>\\r\\n      <input type=\\\"number\\\" required class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"ufee_extra_charges\\\"\\r\\n        [(ngModel)]=\\\"ufee_extra_charges\\\" #pickedStdextraCharges=\\\"ngModel\\\">\\r\\n      <p class=\\\"alert alert-danger\\\" *ngIf=\\\"!pickedStdextraCharges.valid && pickedStdextraCharges.touched\\\"\\r\\n        style=\\\"margin-top:1em; margin-left:0em;\\\">\\r\\n        Extra Charges amount is required\\r\\n      </p>\\r\\n\\r\\n      <label class=\\\"control-label\\\">Extra Charges Description</label>\\r\\n\\r\\n      <textarea rows=\\\"1\\\" cols=\\\"10\\\" class=\\\"form-control fm-control\\\" name=\\\"uextra_charges_desc\\\"\\r\\n        [(ngModel)]=\\\"uextra_charges_desc\\\"> </textarea>\\r\\n\\r\\n      <label class=\\\"control-label\\\">Fee discount</label>\\r\\n      <input type=\\\"number\\\" required class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"ufee_discount\\\"\\r\\n        [(ngModel)]=\\\"ufee_discount\\\" #pickedFeediscount=\\\"ngModel\\\">\\r\\n      <p class=\\\"alert alert-danger\\\" *ngIf=\\\"!pickedFeediscount.valid && pickedFeediscount.touched\\\"\\r\\n        style=\\\"margin-top:1em; margin-left:0em;\\\">\\r\\n        Fee discount is required!\\r\\n      </p>\\r\\n\\r\\n      <label class=\\\"control-label\\\">Fee Due Date * </label>\\r\\n      <input type=\\\"date\\\" required class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"uduedate_timestamp\\\"\\r\\n        [(ngModel)]=\\\"uduedate_timestamp\\\" #upickedDueDate=\\\"ngModel\\\">\\r\\n      <p class=\\\"alert alert-danger\\\" *ngIf=\\\"!upickedDueDate.valid && pickedDueDate.touched\\\"\\r\\n        style=\\\"margin-top:1em; margin-left:0em;\\\">\\r\\n        Due Date is required!\\r\\n      </p>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n      <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"!updatefeeInvoice.form.valid\\\" value=\\\"Update fee Invoice\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<!-- ******** Update Fee Payment Status Modal ************ -->\\r\\n\\r\\n<ng-template #updateFeeStatusModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <h3>Update Fee Payment Status</h3>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n     <form class=\\\"form-group\\\" #updatefeestatus=\\\"ngForm\\\" (ngSubmit)=\\\"updateStdFeeStatus(updatefeestatus)\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n\\r\\n      <input type=\\\"hidden\\\" class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"invoice_idU\\\"\\r\\n        [(ngModel)]=\\\"invoice_idU\\\">\\r\\n      <label class=\\\"control-label\\\"> Student Name\\r\\n      </label>\\r\\n\\r\\n      <input type=\\\"text\\\" disabled class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"Student_nameU\\\"\\r\\n        [(ngModel)]=\\\"Student_nameU\\\">\\r\\n\\r\\n      <label class=\\\"control-label\\\"> Total Fee\\r\\n      </label>\\r\\n\\r\\n      <input type=\\\"text\\\" disabled class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"total_feeU\\\"\\r\\n        [(ngModel)]=\\\"total_feeU\\\">\\r\\n      <label class=\\\"control-label\\\"> Paid Amount\\r\\n      </label>\\r\\n\\r\\n      <input type=\\\"number\\\" class=\\\"form-control fm-control\\\" #pickedamount style=\\\"margin-top:0em;\\\" name=\\\"amount_paidU\\\"\\r\\n        [(ngModel)]=\\\"amount_paidU\\\">\\r\\n\\r\\n      <p class=\\\"alert alert-danger\\\" *ngIf=\\\"!pickedamount.valid && pickedamount.touched\\\"\\r\\n        style=\\\"margin-top:0em; margin-left:0em;\\\">\\r\\n        Paid amount required\\r\\n      </p>\\r\\n\\r\\n      <label class=\\\"control-label\\\">Payment Status * </label>\\r\\n      <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" #pickedpamentstatus\\r\\n        [(ngModel)]=\\\"payment_status\\\" name=\\\"payment_status\\\">\\r\\n        <option [ngValue]=\\\"undefined\\\" disabled>Select Payment Status</option>\\r\\n        <option *ngFor=\\\"let item of paymentStatusList\\\" [value]=\\\"item.paymentStatus_id\\\">{{item.paymentStatus}}\\r\\n        </option>\\r\\n      </select>\\r\\n      <p class=\\\"alert alert-danger\\\" *ngIf=\\\"!pickedpamentstatus.valid && pickedpamentstatus.touched\\\"\\r\\n        style=\\\"margin-top:1em; margin-left:0em;\\\">\\r\\n        Payment Status required!\\r\\n      </p>\\r\\n\\r\\n\\r\\n\\r\\n      <label class=\\\"control-label\\\">Fee Paid Date * </label>\\r\\n      <input type=\\\"date\\\" required class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" name=\\\"fPaid_date\\\"\\r\\n        [(ngModel)]=\\\"fPaid_date\\\" #upickedfPaid_date=\\\"ngModel\\\">\\r\\n      <p class=\\\"alert alert-danger\\\" *ngIf=\\\"!upickedfPaid_date.valid && upickedfPaid_date.touched\\\"\\r\\n        style=\\\"margin-top:1em; margin-left:0em;\\\">\\r\\n        Fee Paid Date is required!\\r\\n      </p>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n\\r\\n      <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"!updatefeestatus.form.valid\\\" value=\\\"Update fee Payment\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n   </form>\\r\\n</ng-template>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport swal from 'sweetalert2';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ClassDataService } from './../classes/manageClass.service';\r\nimport { ManageFeeStructureService } from '../manage-fee-structure/manage-fee-structure.service';\r\nimport { ManageFeeInvoiceService } from '../manage-fee-invoice/manage-fee-invoice.service';\r\nimport { CommonService } from '../shared/services/common.service';\r\n@Component({\r\n  selector: 'app-manage-fee-invoice',\r\n  templateUrl: './manage-fee-invoice.component.html',\r\n  styleUrls: ['./manage-fee-invoice.component.scss'],\r\n  providers: [\r\n    ClassDataService,\r\n    ManageFeeStructureService,\r\n    ManageFeeInvoiceService,\r\n    CommonService\r\n  ]\r\n})\r\nexport class ManageFeeInvoiceComponent implements OnInit {\r\n  /* active session */\r\n  public running_session = localStorage.getItem('running_session');\r\n\r\n  public searchText;\r\n\r\n  /* pagination Info */\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public classid;\r\n  selectedclass_id;\r\n\r\n  // create fee invoive\r\n  public class_id: number;\r\n  public fee_title = '';\r\n  public fee_month: number;\r\n  public duedate_timestamp: number;\r\n  public fee_desc = '';\r\n  public fee_amount: number;\r\n  public fee_extra_charges = 0;\r\n  public extra_charges_desc = '';\r\n\r\n  // list invoice variables\r\n\r\n  public rollnum: number;\r\n  public className = '';\r\n  public section = '';\r\n  public name = '';\r\n  public totalAmount = '';\r\n  public feeStatus = '';\r\n  public feeCreationDate;\r\n  public feeDesc = '';\r\n  public feeTitle = '';\r\n  public extraChargesDesc = '';\r\n  public feeAmount = '';\r\n  public discountAmount: number;\r\n  public extraChargesAmount: number;\r\n  public amountPaid: number;\r\n  public dueDate;\r\n  public invoicefeeMonth;\r\n  public dueAmount;\r\n\r\n  // update student invoice params\r\n  public uStudent_name = '';\r\n  public ufee_amount: number;\r\n  public ufee_extra_charges: number;\r\n  public ufee_title = '';\r\n  public uextra_charges_desc = '';\r\n  public ufee_discount: number;\r\n  public uduedate_timestamp;\r\n  public invoice_id: number;\r\n  public selectedClassId: number;\r\n  public selectedFeeMonth;\r\n  public utotal_fee: number;\r\n\r\n  // update student payment status variables\r\n  public invoice_idU: number;\r\n  public Student_nameU = '';\r\n  public total_feeU: number;\r\n  public fPaid_date;\r\n  public payment_status = '';\r\n  public amount_paidU: number;\r\n  public paymentStatusList = [\r\n    {\r\n      paymentStatus_id: 'paid',\r\n      paymentStatus: 'Paid'\r\n    },\r\n    {\r\n      paymentStatus_id: 'pending',\r\n      paymentStatus: 'Pending'\r\n    }\r\n  ];\r\n  public selectedFeeTotal: number;\r\n\r\n  // list fee invoice details variables\r\n\r\n  public classId: number;\r\n  public feeMonth: number;\r\n\r\n  public selectedClass = '';\r\n  public selectedMonth = '';\r\n  public selectedMonthYear = '';\r\n\r\n  datanotfounfMsg = '';\r\n\r\n  // Arrays\r\n\r\n  public classdataList: Array<any>;\r\n  public feeStructData: Array<any>;\r\n  public StdFeeInvoiceData: Array<any>;\r\n\r\n  // notifications\r\n\r\n  public dbRespMsg = '';\r\n  public feeduedate = '';\r\n  public showFeeDetailsHeading = false;\r\n\r\n  public showHeading = false;\r\n\r\n  admin_level: any;\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _classDataService: ClassDataService,\r\n    private _manageFeeStructureService: ManageFeeStructureService,\r\n    private _manageFeeInvoiceService: ManageFeeInvoiceService,\r\n    private modalService: NgbModal,\r\n    private _commonService: CommonService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // get admin level\r\n    this.admin_level = localStorage.getItem('admin_level');\r\n    this.getClassData(); // call function on page load\r\n  }\r\n\r\n  // *********************************************************************************************************************** */\r\n  /**********************************************************Read Data from DB Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  // ********************************************************** **********/\r\n  // *********************** Get all Classes data ************************/\r\n  // ******************************************************************* */\r\n\r\n  public getClassData() {\r\n    this._classDataService.getClassesF().subscribe(result => {\r\n      this.classdataList = result;\r\n    });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // *********************** Get Fee Structureby class id *********************/\r\n  // ******************************************************************* */\r\n\r\n  public getFeeStructDataByClassId(class_id) {\r\n    let feeStructData = null;\r\n    this._manageFeeStructureService\r\n      .getFeeStructByClassIdF(class_id, this.running_session)\r\n      .subscribe(result => {\r\n        if (result.status === 1) {\r\n          this.feeStructData = result.data;\r\n          feeStructData = this.feeStructData[0];\r\n          this.fee_title = feeStructData.fee_title;\r\n          this.fee_amount = feeStructData.fee_amount;\r\n        }\r\n        if (result.status === 0) {\r\n          this.dbRespMsg = 'No fee structure is defined';\r\n        }\r\n\r\n        if (result.status === 403) {\r\n          this.dbRespMsg = result.msg;\r\n        }\r\n      });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // *************** Get Students Fee Invoice details *********************/\r\n  // ******************************************************************* */\r\n  public getStdFeeInvoiceDetails(class_id, fee_month) {\r\n    this.selectedClassId = class_id;\r\n    this.showFeeDetailsHeading = true;\r\n    this.selectedClass = '';\r\n    this.feeduedate = '';\r\n    this.StdFeeInvoiceData = [];\r\n    const unix_fee_month = new Date(fee_month + '-' + '05').getTime() / 1000;\r\n\r\n    this.selectedFeeMonth = fee_month;\r\n    this._manageFeeInvoiceService\r\n      .getStdFeeInvoiceDetailsFun(\r\n        class_id,\r\n        unix_fee_month,\r\n        this.running_session\r\n      )\r\n      .subscribe(result => {\r\n        if (result.status === 1) {\r\n          this.showHeading = true;\r\n          this.datanotfounfMsg = '';\r\n          this.StdFeeInvoiceData = result.data;\r\n          console.log(this.StdFeeInvoiceData);\r\n          this.selectedClass = this.StdFeeInvoiceData[0].class_name;\r\n          this.feeduedate = this.StdFeeInvoiceData[0].duedate_timestamp;\r\n        } else if (result.status === 0) {\r\n          this.datanotfounfMsg = 'No data available';\r\n        } else {\r\n          this._commonService.errorToaster(result.msg, 'No Data!');\r\n        }\r\n      });\r\n  }\r\n\r\n  // *********************************************************************************************************************** */\r\n  /**********************************************************Add Update Delete Data  Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  // ********************************************************** **********/\r\n  // ************** Add new fee invoice for class  ************************/\r\n  // ******************************************************************* */\r\n\r\n  public onClickAddClassFeeInvoice(submitEvent) {\r\n    this.selectedclass_id = Number(submitEvent.value.class_id);\r\n    swal({\r\n      title:\r\n        'Are you sure, want to create bulk invoice ? have you checked invoice details',\r\n      text: 'You wont be able to revert this!',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Create Invoice!'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        // to store fee month in number\r\n        const feesplit_month_year = submitEvent.value.fee_month.split('-');\r\n        const fee_year = feesplit_month_year[0];\r\n        const fee_month_num = feesplit_month_year[1];\r\n\r\n        const fee_month = submitEvent.value.fee_month + '-' + '05';\r\n        const duedate_timestamp = submitEvent.value.duedate_timestamp;\r\n\r\n        // get current date\r\n        const d = new Date();\r\n        const month = d.getMonth() + 1;\r\n        const day = d.getDate();\r\n        const current_date =\r\n          d.getFullYear() +\r\n          '-' +\r\n          (('' + month).length < 2 ? '0' : '') +\r\n          month +\r\n          '-' +\r\n          (('' + day).length < 2 ? '0' : '') +\r\n          day;\r\n\r\n        // ** convert selected time to Unix timestamp\r\n        const unix_fee_month = new Date(fee_month).getTime() / 1000;\r\n\r\n        const unix_today_date = new Date(current_date).getTime() / 1000;\r\n        const unix_duedate_timestamp =\r\n          new Date(duedate_timestamp).getTime() / 1000;\r\n\r\n        const invoice_details = {\r\n          class_id: Number(submitEvent.value.class_id),\r\n          fee_month: unix_fee_month,\r\n          creation_timestamp: unix_today_date,\r\n          duedate_timestamp: unix_duedate_timestamp,\r\n          fee_desc: submitEvent.value.fee_desc,\r\n          month: fee_month_num,\r\n          fee_year: fee_year,\r\n          fee_amount: this.fee_amount,\r\n          fee_title: this.fee_title,\r\n          total_fee: this.fee_amount,\r\n          running_session: this.running_session\r\n        };\r\n\r\n        // send data to service to call API\r\n        this._manageFeeInvoiceService\r\n          .createClassFeeInvoiceF(invoice_details)\r\n          .subscribe(resultresp => {\r\n            if (resultresp.status === 1) {\r\n              this._commonService.successToaster(\r\n                'Invoice has been created',\r\n                'Success'\r\n              );\r\n              this.closeModal();\r\n              submitEvent.reset();\r\n            } else {\r\n              this._commonService.errorToaster(resultresp.msg, 'Failed');\r\n            }\r\n\r\n            this.getStdFeeInvoiceDetails(\r\n              this.selectedclass_id,\r\n              feesplit_month_year[0] + '-' + feesplit_month_year[1]\r\n            );\r\n            this.selectedMonth =\r\n              feesplit_month_year[0] + '-' + feesplit_month_year[1];\r\n\r\n            this.selectedMonthYear = feesplit_month_year[0];\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // ************** Update student fee Invoice  ************************/\r\n  // ******************************************************************* */\r\n\r\n  public updateStdFeeInvoice(updateEvent) {\r\n    const eventHandler = updateEvent.value;\r\n    const invoice_id = eventHandler.invoice_id;\r\n    let total_fee = eventHandler.ufee_extra_charges + eventHandler.ufee_amount;\r\n    total_fee = total_fee - eventHandler.ufee_discount;\r\n    const duedate_timestamp =\r\n      new Date(eventHandler.uduedate_timestamp).getTime() / 1000;\r\n\r\n    const update_data = {\r\n      duedate_timestamp: duedate_timestamp,\r\n      extra_charges_desc: eventHandler.uextra_charges_desc,\r\n      fee_amount: eventHandler.ufee_amount,\r\n      fee_discount: eventHandler.ufee_discount,\r\n      fee_extra_charges: eventHandler.ufee_extra_charges,\r\n      fee_title: eventHandler.ufee_title,\r\n      total_fee: total_fee\r\n    };\r\n\r\n    if (eventHandler.ufee_discount > eventHandler.ufee_amount) {\r\n      this._commonService.warningToaster(\r\n        'Discount amount must be less than fee amount',\r\n        'Failed'\r\n      );\r\n    } else {\r\n      this._manageFeeInvoiceService\r\n        .updateFeeInvoiceF(invoice_id, update_data)\r\n        .subscribe(result => {\r\n          if (result.status === 1) {\r\n            this._commonService.warningToaster(\r\n              'Updated Successfully',\r\n              'Success'\r\n            );\r\n            // call function to load data\r\n            this.getStdFeeInvoiceDetails(\r\n              this.selectedClassId,\r\n              this.selectedFeeMonth\r\n            );\r\n            this.closeModal();\r\n          } else {\r\n            this._commonService.warningToaster(result.msg, 'Error');\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // ************** Update student fee Payment status  ********************/\r\n  // ******************************************************************* */\r\n\r\n  public updateStdFeeStatus(submitEvent) {\r\n    const paymentData = submitEvent.value;\r\n\r\n    if (this.total_feeU < paymentData.amount_paidU) {\r\n      this._commonService.warningToaster(\r\n        'Paid Amount must be equal to or less than Total fee',\r\n        'Failed'\r\n      );\r\n    } else if (\r\n      paymentData.payment_status === 'paid' &&\r\n      this.total_feeU !== paymentData.amount_paidU\r\n    ) {\r\n      this._commonService.warningToaster(\r\n        'If status is Paid, then total amount must be equal to paid amount',\r\n        'Failed'\r\n      );\r\n    } else {\r\n      const invoice_id = paymentData.invoice_idU;\r\n      const UpdateData = {\r\n        amount_paid: paymentData.amount_paidU,\r\n\r\n        fee_status: paymentData.payment_status,\r\n        amount_due: this.total_feeU - paymentData.amount_paidU,\r\n        feepaid_date: new Date(paymentData.fPaid_date).getTime() / 1000\r\n      };\r\n\r\n      this._manageFeeInvoiceService\r\n        .updateFeePaymentStatus(invoice_id, UpdateData)\r\n        .subscribe(result => {\r\n          if (result.status === 1) {\r\n            this._commonService.successToaster(\r\n              'Updated Successfully',\r\n              'Success'\r\n            );\r\n            // call function to load data\r\n            this.getStdFeeInvoiceDetails(\r\n              this.selectedClassId,\r\n              this.selectedFeeMonth\r\n            );\r\n            this.closeModal();\r\n          } else {\r\n            this._commonService.errorToaster(result.msg, 'Failed');\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  // ************************************************************************************************************* */\r\n  /*********************************************General   Methods************************************************ */\r\n  // ************************************************************************************************************* */\r\n\r\n  // new modal\r\n  openNgModal(content, size) {\r\n    this.modalService.open(content, { size: size });\r\n  }\r\n  // *************** view invoice details***********************************\r\n  public onClickviewInvoice(modal, arrayIndex) {\r\n    let invoiceDetails = null;\r\n    invoiceDetails = this.StdFeeInvoiceData[arrayIndex];\r\n\r\n    this.rollnum = invoiceDetails.roll_num;\r\n    this.className = invoiceDetails.class_name;\r\n    this.section = invoiceDetails.section_name;\r\n    this.name = invoiceDetails.std_name;\r\n    this.totalAmount = invoiceDetails.total_fee;\r\n    this.feeStatus = invoiceDetails.fee_status;\r\n    this.feeCreationDate = invoiceDetails.creation_timestamp;\r\n    this.feeDesc = invoiceDetails.fee_desc;\r\n    this.feeTitle = invoiceDetails.fee_title;\r\n    this.extraChargesDesc = invoiceDetails.extra_charges_desc;\r\n    this.feeAmount = invoiceDetails.fee_amount;\r\n    this.discountAmount = invoiceDetails.fee_discount;\r\n    this.extraChargesAmount = invoiceDetails.fee_extra_charges;\r\n    this.amountPaid = invoiceDetails.amount_paid;\r\n    this.dueDate = invoiceDetails.duedate_timestamp;\r\n    this.dueAmount = invoiceDetails.amount_due;\r\n    this.invoicefeeMonth = invoiceDetails.fee_month;\r\n\r\n    this.openNgModal(modal, 'lg');\r\n  }\r\n\r\n  // ********************** view modal to update fee invoice******************\r\n  public onClickUpdateInvoice(modal, arrayIndex) {\r\n    let updateDetails = null;\r\n    updateDetails = this.StdFeeInvoiceData[arrayIndex];\r\n    this.uStudent_name = updateDetails.std_name;\r\n    this.ufee_amount = updateDetails.fee_amount;\r\n    this.ufee_extra_charges = updateDetails.fee_extra_charges;\r\n    this.ufee_title = updateDetails.fee_title;\r\n    this.uextra_charges_desc = updateDetails.extra_charges_desc;\r\n    this.ufee_discount = updateDetails.fee_discount;\r\n    this.invoice_id = updateDetails.invoice_id;\r\n    this.utotal_fee = updateDetails.total_fee;\r\n\r\n    // add 0 if date , month less than 10\r\n    const dueDateTimestamp = updateDetails.duedate_timestamp;\r\n    const convertedDueDateTimestamp = new Date(dueDateTimestamp * 1000);\r\n    const month = convertedDueDateTimestamp.getMonth() + 1;\r\n    const day = convertedDueDateTimestamp.getDate();\r\n    const convertedMonth = ('0' + month).substr(-2);\r\n    const convertedDay = ('0' + day).substr(-2);\r\n\r\n    this.uduedate_timestamp =\r\n      convertedDueDateTimestamp.getFullYear() +\r\n      '-' +\r\n      convertedMonth +\r\n      '-' +\r\n      convertedDay;\r\n    this.openNgModal(modal, 'md');\r\n  }\r\n\r\n  // ********************** view modal to update fee payment status ******************\r\n  public onClickUpdateFeePayment(modal, arrayIndex) {\r\n    this.payment_status = '';\r\n\r\n    this.fPaid_date = '';\r\n    let updateFeePayment = null;\r\n    updateFeePayment = this.StdFeeInvoiceData[arrayIndex];\r\n\r\n    this.invoice_idU = updateFeePayment.invoice_id;\r\n    this.Student_nameU = updateFeePayment.std_name;\r\n    this.total_feeU = updateFeePayment.total_fee;\r\n    this.amount_paidU = updateFeePayment.amount_paid;\r\n\r\n    this.openNgModal(modal, 'md');\r\n  }\r\n\r\n  // * pagination\r\n  public pageChanged(pN: number): void {\r\n    this.pageNumber = pN;\r\n  }\r\n\r\n  // redirect to manage fee structure section\r\n  public goToFeeStructureSetting() {\r\n    this._router.navigate(['/pages/accounts/manage-fee-structure']);\r\n  }\r\n\r\n  // get class id and month to list fee invoice details\r\n  public onSubmitListStdFeeDetails(submitEvent) {\r\n    const eventHandler = submitEvent.value;\r\n    const month = eventHandler.feeMonth;\r\n\r\n    const YearMonthArray = month.split('-');\r\n    this.selectedMonthYear = YearMonthArray[0];\r\n    this.selectedMonth = month;\r\n\r\n    this.getStdFeeInvoiceDetails(eventHandler.classid, eventHandler.feeMonth);\r\n  }\r\n\r\n  // open modal\r\n  public openModal(modal) {\r\n    this.openNgModal(modal, 'md');\r\n  }\r\n\r\n  // close modal\r\n  public closeModal() {\r\n    this.modalService.dismissAll();\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { routing } from \"./manage-fee-invoice.routing\";\r\nimport { HttpModule } from \"@angular/http\";\r\nimport { ModalModule } from \"ngx-modal\";\r\nimport { Ng2SearchPipeModule } from \"ng2-search-filter\";\r\nimport { SearchPipe } from \"./search.pipe\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators\r\n} from \"@angular/forms\";\r\n/* components */\r\nimport { ManageFeeInvoiceComponent } from \"./manage-fee-invoice.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    Ng2SearchPipeModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ModalModule,\r\n    HttpModule,\r\n    CommonModule,\r\n    NgxPaginationModule,\r\n    NgbModule,\r\n    routing\r\n  ],\r\n  declarations: [ManageFeeInvoiceComponent, SearchPipe]\r\n})\r\nexport class ManageFeeInvoiceModule {}\r\n","import { Routes, RouterModule } from \"@angular/router\";\r\nimport { ManageFeeInvoiceComponent } from \"./manage-fee-invoice.component\";\r\n\r\nconst childRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ManageFeeInvoiceComponent\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(childRoutes);\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"filter\"\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(items: any[], filterdata: string): any[] {\r\n    if (!items) return [];\r\n    if (!filterdata) return items;\r\n\r\n    filterdata = filterdata.toString();\r\n    return items.filter(searchValue => {\r\n      let rVal =\r\n        JSON.stringify(searchValue.roll_num).includes(filterdata) ||\r\n        JSON.stringify(searchValue.std_name).includes(filterdata) ||\r\n        JSON.stringify(searchValue.fee_status).includes(filterdata);\r\n      return rVal;\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}