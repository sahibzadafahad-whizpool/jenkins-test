{"version":3,"sources":["webpack:///./src/app/students/search.pipe.ts","webpack:///./src/app/students/students.component.html","webpack:///./src/app/students/students.component.scss","webpack:///./src/app/students/students.component.ts","webpack:///./src/app/students/students.module.ts","webpack:///./src/app/students/students.routing.ts"],"names":[],"mappings":"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","file":"students-students-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\n\r\n// search by student roll num or cnic\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(items: any[], filterdata: string): any[] {\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!filterdata) {\r\n      return items;\r\n    }\r\n\r\n    filterdata = filterdata.toString();\r\n    return items.filter(searchValue => {\r\n      const rVal =\r\n        JSON.stringify(searchValue.roll_num).includes(filterdata) ||\r\n        JSON.stringify(searchValue.std_name).includes(filterdata);\r\n      return rVal;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-lg-12 grid-margin stretch-card\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n\\r\\n                    <div class=\\\"col-lg-9 col-md-9\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Student Details</h4>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-lg-3  \\\" style=\\\"padding-bottom: 1.5em;\\\">\\r\\n\\r\\n                        <button _ngcontent-c2=\\\"\\\" (click)=\\\"openNgModal(addStudentModal)\\\" class=\\\"btn btn-success btn-block\\\">New\\r\\n              Student\\r\\n              <i _ngcontent-c2=\\\"\\\" class=\\\"mdi mdi-plus\\\"></i></button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"table-responsive\\\" style=\\\"overflow-x: hidden;\\\">\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <!-- ******** side bar **** -->\\r\\n                        <div class=\\\"col-lg-3 col-md-3\\\">\\r\\n                            <div class=\\\"list-group\\\" style=\\\"padding-top: 0px; width: -webkit-fill-available;\\\">\\r\\n\\r\\n                                <p class=\\\"list-group-item mini-sidebar\\\">\\r\\n                                    <i class=\\\"fa fa-university\\\"></i>\\r\\n                                    <span> Select Class</span>\\r\\n                                </p>\\r\\n                                <a *ngFor=\\\"let item of classDataList \\\" class=\\\"list-group-item\\\" style=\\\"cursor: pointer;\\\" class=\\\"list-group-item\\\" [style.background-color]=\\\"item.BackgroundColour\\\" [style.color]=\\\"item.color\\\" (click)=\\\"onClickSideBar(item.class_id , item)\\\">\\r\\n                                    <span>{{item.class_name}}</span>\\r\\n                                </a>\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-9 col-md-9\\\">\\r\\n                            <div class=\\\"col-lg-12 col-md-12 col-sm-12\\\">\\r\\n                                <div style=\\\"text-align: center\\\">\\r\\n                                    <div class=\\\"mini-heading \\\">\\r\\n                                        <h3> {{selectedClassName}} {{studentdetailNoti}} {{ available}}</h3>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\" style=\\\"margin-top: 2em; margin-bottom: 0em; padding-bottom: 1.5em; padding-top: 0em;\\\">\\r\\n                                    <div class=\\\"col-lg-4\\\" *ngIf=\\\"showfilter\\\">\\r\\n                                        <!-- Search Student -->\\r\\n                                        <!-- <input class=\\\"form-control fm-control\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Roll Num / Student Name\\\"> -->\\r\\n\\r\\n\\r\\n                                        <label class=\\\"control-label\\\">Filter By Section</label>\\r\\n\\r\\n                                        <select class=\\\"form-control fm-control\\\" (change)=filterStudentBySection(pickedSection.value); required style=\\\"margin-top:0em;\\\" #pickedSection [(ngModel)]=\\\"section_id\\\" name=\\\"section_id\\\">\\r\\n\\r\\n                                        <option value=\\\"all\\\" selected>All Sections </option>\\r\\n                                        <option *ngFor=\\\"let section of sectionsData ; let index = index\\\" [value]=\\\"section.section_name\\\">\\r\\n                                          {{ section.section_name}}\\r\\n                                        </option>\\r\\n                                      </select>\\r\\n\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-lg-3\\\">\\r\\n\\r\\n                                    </div>\\r\\n                                    <!-- <div class=\\\"col-lg-4\\\">\\r\\n\\r\\n                                        Filter By Section\\r\\n                                        <select class=\\\"form-control fm-control\\\" (change)=getSelectedSectionDetails(pickedSection.value); required style=\\\"margin-top:0em;\\\" #pickedSection [(ngModel)]=\\\"section_id\\\" name=\\\"classid\\\">\\r\\n\\r\\n                                        <option value=\\\"all\\\" selected>All Sections </option>\\r\\n                                        <option *ngFor=\\\"let section of sectionOptions ; let index = index\\\" [value]=\\\"index\\\">\\r\\n                                          {{ section.section_name}}\\r\\n                                        </option>\\r\\n                                      </select>\\r\\n\\r\\n                                    </div> -->\\r\\n\\r\\n\\r\\n                                </div>\\r\\n                                <table class=\\\"table table-bordered table-hover\\\">\\r\\n                                    <thead class=\\\"thead-light\\\">\\r\\n                                        <tr>\\r\\n                                            <th> S.No</th>\\r\\n                                            <th> Student </th>\\r\\n                                            <th>Roll Number</th>\\r\\n                                            <th>Student Name </th>\\r\\n                                            <th>Section Name</th>\\r\\n                                            <th>Actions</th>\\r\\n\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr *ngFor=\\\"let item of studentsDataList let index = index\\\">\\r\\n\\r\\n                                            <td>{{index + 1}}</td>\\r\\n                                            <td> <img [src]=\\\"item.thumb_path == '' || null ?  placeholder : imageThumbBaseUrl  + item.thumb_path\\\" class=\\\"rounded-circle dropdown-toggle\\\" width=\\\"30px\\\" data-toggle=\\\"dropdown\\\" alt=\\\"avatar\\\" onError=\\\"this.src='assets/images/teacherplaceholder.png'\\\"\\r\\n                                                    style=\\\" border-radius: 50%; cursor:pointer;\\\" (click)=\\\"openProfileStudModal(studentProfileModel,item.student_id,item.class_id)\\\">\\r\\n\\r\\n\\r\\n\\r\\n                                            </td>\\r\\n                                            <td>{{item.roll_num}}</td>\\r\\n                                            <td>{{item.std_name}}</td>\\r\\n\\r\\n                                            <td>{{item.section_name}}</td>\\r\\n\\r\\n\\r\\n                                            <td>\\r\\n\\r\\n\\r\\n                                                <label class=\\\"badge badge-info\\\" *ngIf=\\\"(admin_level == 1)\\\" style=\\\"cursor: pointer;\\\" (click)=openEditStudModal(updateStudentModal,item.student_id,item.class_id)>Edit</label>\\r\\n                                                <label class=\\\"badge badge-danger\\\" *ngIf=\\\"(admin_level == 1)\\\" style=\\\"cursor: pointer; margin-left: 1em;\\\" (click)=onClickdeleteStudent(item.student_id,item.class_id)>Delete</label>\\r\\n\\r\\n                                                <label class=\\\"badge badge-primary\\\" style=\\\"cursor: pointer; margin-left: 1em;\\\" (click)=\\\"openProfileStudModal(studentProfileModel,item.student_id,item.class_id)\\\">Profile</label>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- *********************************** Modals **************************************** -->\\r\\n\\r\\n\\r\\n<!-- ********student Profile Model ************ -->\\r\\n\\r\\n<ng-template #studentProfileModel let-modal>\\r\\n\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <div style=\\\"text-align: center\\\">\\r\\n            <h3>Student Profile</h3>\\r\\n\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-3 col-md-3 col-sm-3\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"profile-wrap animated fadeIn\\\">\\r\\n                        <div class=\\\"info-wrap\\\">\\r\\n                            <div class=\\\"avatar-wrap\\\">\\r\\n                                <img [src]=\\\"avatarImgSrc === '' || null ?  'assets/images/placeholder.png' : imageBaseUrl  + avatarImgSrc\\\" alt=\\\"Profile Picture Not Found!\\\" style=\\\"margin: 1.1em; width: 14.5em;\\\" onError=\\\"this.src='assets/images/placeholder.png';\\\">\\r\\n                            </div>\\r\\n                            <div style=\\\"margin: 1.1em;\\\">\\r\\n                                <span class=\\\"user-name\\\">{{userPost}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"profile-foot\\\" style=\\\"margin: 1.1em;\\\">\\r\\n                            <h4>{{std_name}} </h4>\\r\\n\\r\\n                            <h4>{{class_name}} | Section : {{section_name}}</h4>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-9 col-md-9 col-sm-10\\\">\\r\\n                <ngb-tabset class=\\\"tab-solid tab-solid-primary\\\">\\r\\n                    <ngb-tab>\\r\\n                        <ng-template ngbTabTitle>\\r\\n                            Basic Info\\r\\n                        </ng-template>\\r\\n                        <ng-template ngbTabContent>\\r\\n\\r\\n                            <div class=\\\"card\\\">\\r\\n\\r\\n                                <table class=\\\"table table-hover\\\">\\r\\n\\r\\n\\r\\n                                    <tbody>\\r\\n                                        <tr>\\r\\n                                            <td> <strong>Roll Number : </strong> {{ std_rollNum }} </td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td> <strong> Student Name : </strong> {{std_name}} </td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td> <strong> Date Of Birth :  </strong> {{std_dob}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td><strong> Email : </strong>{{std_email}}</td>\\r\\n                                        </tr>\\r\\n\\r\\n                                        <tr>\\r\\n                                            <td><strong> Class : </strong> {{class_name}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td> <strong> Section : </strong> {{section_name}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td> <strong> Address : </strong> {{std_address}}</td>\\r\\n                                        </tr>\\r\\n\\r\\n                                    </tbody>\\r\\n\\r\\n                                </table>\\r\\n                            </div>\\r\\n\\r\\n                        </ng-template>\\r\\n                    </ngb-tab>\\r\\n\\r\\n\\r\\n                    <ngb-tab>\\r\\n                        <ng-template ngbTabTitle>\\r\\n                            Parent Info\\r\\n                        </ng-template>\\r\\n                        <ng-template ngbTabContent>\\r\\n\\r\\n                            <div class=\\\"card\\\">\\r\\n\\r\\n                                <table class=\\\"table table-hover\\\">\\r\\n\\r\\n\\r\\n                                    <tbody>\\r\\n                                        <tr>\\r\\n                                            <td> <strong>Parent Name : </strong> {{parent_name}} </td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td> <strong> Parent Email : </strong> {{parent_email}} </td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td> <strong>Phone Number : </strong> {{parent_number}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td> <strong> Profession : </strong>{{parent_profession}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td> <strong> Address : </strong> {{parent_address}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td> <strong> Relation with student : </strong>{{ relationship }}</td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n\\r\\n                                </table>\\r\\n                            </div>\\r\\n\\r\\n                        </ng-template>\\r\\n                    </ngb-tab>\\r\\n\\r\\n\\r\\n                    <ngb-tab>\\r\\n                        <ng-template ngbTabTitle>\\r\\n                            Exam Marks\\r\\n                        </ng-template>\\r\\n                        <ng-template ngbTabContent>\\r\\n\\r\\n\\r\\n                            <div class=\\\"card\\\">\\r\\n                                <form style=\\\"margin-top:2em;\\\" class=\\\"form-group\\\" #manageMarks=\\\"ngForm\\\" (ngSubmit)=\\\"submitExamIdF(manageMarks)\\\">\\r\\n\\r\\n                                    <div class=\\\"col-md-12 form-group\\\">\\r\\n                                        <label class=\\\"control-label\\\"> Select Exam *</label>\\r\\n                                        <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedExam.valid && pickedExam.touched\\\"><small>Exam\\r\\n                      Required</small></span>\\r\\n                                        <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" #pickedExam [(ngModel)]=\\\"exam\\\" name=\\\"exam\\\">\\r\\n                    <option [ngValue]=\\\"undefined\\\" disabled>Select Exam</option>\\r\\n                    <option *ngFor=\\\"let item of examsDataList\\\" [value]=\\\"item.exam_id\\\">{{item.exam_name}}</option>\\r\\n                  </select>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12 form-group\\\" style=\\\"text-align: center\\\">\\r\\n                                        <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" style=\\\"margin-top:1em\\\" [disabled]=\\\"!manageMarks.form.valid\\\" value=\\\"Show Exam result \\\">\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                </form>\\r\\n                                <div *ngIf=\\\"resultSummary\\\" id=\\\"marksheet\\\">\\r\\n\\r\\n                                    <div style=\\\"text-align: center;\\\">\\r\\n                                        <h3 style=\\\"margin:1em\\\">{{selected_exam | titlecase}} Result </h3>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"table-responsive\\\">\\r\\n                                        <table class=\\\"table table-hover\\\">\\r\\n                                            <thead class=\\\"thead-light\\\">\\r\\n                                                <tr>\\r\\n                                                    <th>Subject</th>\\r\\n                                                    <th>Total Marks</th>\\r\\n                                                    <th>Obtained Marks</th>\\r\\n                                                    <th>Percentage</th>\\r\\n\\r\\n                                                    <th>Exam Date</th>\\r\\n\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let item of studentExamResult; let index = index\\\">\\r\\n\\r\\n\\r\\n                                                    <td>{{item.subject_name}}</td>\\r\\n                                                    <td>{{item.total_marks}}</td>\\r\\n                                                    <td>{{item.obtained_marks}}</td>\\r\\n\\r\\n\\r\\n                                                    <td> {{ item.obtained_marks/item.total_marks | percent:'2.0-1' }}</td>\\r\\n                                                    <td>{{item.exam_date * 1000 | date}}</td>\\r\\n\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"resultSummary\\\" style=\\\"margin : 2em 1em;\\\">\\r\\n                                        <h5> Total Marks: {{result_totalMarks}}</h5>\\r\\n                                        <h5>Obtained Marks :{{ result_obtainedMarks }}</h5>\\r\\n                                        <h5> Percentage {{ result_obtainedMarks/result_totalMarks | percent:'2.0-1' }}</h5>\\r\\n                                    </div>\\r\\n\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"printButton\\\" style=\\\"margin-left: 1em;\\\">\\r\\n                                    <button printTitle=\\\"Student Result\\\" class=\\\"btn btn-info\\\" [useExistingCss]=\\\"true\\\" printSectionId=\\\"marksheet\\\" ngxPrint>print</button>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </ng-template>\\r\\n                    </ngb-tab>\\r\\n\\r\\n                    <ngb-tab>\\r\\n                        <ng-template ngbTabTitle>\\r\\n                            Fee Details\\r\\n                        </ng-template>\\r\\n                        <ng-template ngbTabContent>\\r\\n\\r\\n\\r\\n                            <div class=\\\"card\\\">\\r\\n                                <div style=\\\"text-align: center\\\" *ngIf=\\\"feedetailsPresent\\\">\\r\\n                                    <span style=\\\"color: red ; margin-left:2em;\\\"> No\\r\\n                  Fee Details Availabale\\r\\n                </span>\\r\\n                                </div>\\r\\n\\r\\n                                <table class=\\\"table table-hover\\\">\\r\\n                                    <thead class=\\\"thead-light\\\">\\r\\n                                        <tr>\\r\\n\\r\\n\\r\\n                                            <th>Fee Month</th>\\r\\n\\r\\n                                            <th>Last Date</th>\\r\\n                                            <th>Paid Date</th>\\r\\n                                            <th>Total </th>\\r\\n                                            <th>Paid Amount</th>\\r\\n                                            <th>Status</th>\\r\\n\\r\\n\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr *ngFor=\\\"let item of studentFeeHistroyList; let index = index\\\">\\r\\n\\r\\n\\r\\n                                            <td>{{item.fee_month * 1000 | date: 'MM/yyyy'}}</td>\\r\\n\\r\\n                                            <td>{{item.duedate_timestamp * 1000 | date}}</td>\\r\\n                                            <td>{{ !item.feepaid_date ? '-' : item.feepaid_date * 1000 | date}}</td>\\r\\n                                            <td>{{item.total_fee}}</td>\\r\\n                                            <td>{{item.amount_paid}}</td>\\r\\n\\r\\n                                            <td>{{ item.fee_status}}</td>\\r\\n\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>\\r\\n\\r\\n                        </ng-template>\\r\\n                    </ngb-tab>\\r\\n                </ngb-tabset>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<!--************** add student information  *************-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #addStudentModal let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <div style=\\\"text-align: center\\\">\\r\\n            <h3>Add Student Information</h3>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <form class=\\\"form-group\\\" #addstudent=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitAddStd(addstudent)\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-12 col-md-12 note_background \\\">\\r\\n                    <span class=\\\"warning\\\"><b> Admission New Students Note:</b> <br>\\r\\n            Admitting new students will automatically create an enrollment to the selected class / section in the\\r\\n            running\\r\\n            session. Please check the informations you have inserted because once you admit new student,\\r\\n            you won't be able to edit his/her class,roll number,section .\\r\\n          </span>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:1.5em;\\\">Student Name *</label>\\r\\n                    <span style=\\\"color:red;  margin-left: 1em;\\\" *ngIf=\\\"!pickedStdNameI.valid && pickedStdNameI.touched\\\"><small>\\r\\n                Student Name Required</small> </span>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"stud_name\\\" placeholder=\\\"Student Name\\\" required [(ngModel)]=\\\"stud_name\\\" #pickedStdNameI=\\\"ngModel\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-6 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:1.5em;\\\">Student Email </label>\\r\\n\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"stud_email\\\" placeholder=\\\"Student Email\\\" [(ngModel)]=\\\"stud_email\\\">\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Date Of Birth *</label>\\r\\n                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedStdDOBI.valid && pickedStdDOBI.touched\\\"><small>DOB\\r\\n                Required</small></span>\\r\\n                    <input type=\\\"date\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"stud_dob\\\" required [(ngModel)]=\\\"stud_dob\\\" #pickedStdDOBI=\\\"ngModel\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Gender *</label>\\r\\n                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedStdGenderI.valid && pickedStdGenderI.touched\\\"><small>Gender\\r\\n                Required</small></span>\\r\\n                    <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" [(ngModel)]=\\\"stud_gender\\\" name=\\\"stud_gender\\\" #pickedStdGenderI=\\\"ngModel\\\">\\r\\n              <option [ngValue]=\\\"undefined\\\" disabled>Select Gender</option>\\r\\n              <option value=\\\"male\\\">Male</option>\\r\\n              <option value=\\\"female\\\">Female</option>\\r\\n            </select>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Phone Number</label>\\r\\n                    <input type=\\\"number\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"stud_phone_number\\\" placeholder=\\\"Phone Number\\\" ngModel>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Image</label> <span *ngIf=\\\"!imgValidation\\\" style=\\\"color:red;margin-left: 1em;\\\"> <small> Invalid Image Type </small> </span>\\r\\n                    <input id=\\\"student_image\\\" style=\\\"margin-top:0em;\\\" #imageFile accept=\\\"image/*\\\" name=\\\"stud_image\\\" type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" class=\\\"form-control fm-control\\\" placeholder=\\\"Upload a picture...\\\" />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-3 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Parent Phone Number *\\r\\n\\r\\n            </label>\\r\\n                    <span [style.color]=\\\"alert_color\\\"><small style=\\\"margin-left: 1em;\\\">{{ verify_parent_msg }} </small> <small *ngIf=\\\"showAddParentOption\\\">  <a class=\\\"nav-link\\\" routerLink=\\\"/parents\\\" routerLinkActive=\\\"active\\\" (click)=\\\"closeModal()\\\"> Add parent </a> </small> </span>\\r\\n\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"stud_parentNumber\\\" placeholder=\\\"Parent Phone Number \\\" required [(ngModel)]=\\\"stud_parentNumber\\\" #pickedpID=\\\"ngModel\\\">\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-1 form-group\\\" style=\\\"margin-top: 2.5em;\\\">\\r\\n                    <span style=\\\"cursor: pointer;\\\" class=\\\"btn btn-warning\\\" (click)=verifyParentPhoneNum(pickedpID.value)>Verify</span>\\r\\n                    <!-- <button class=\\\"btn btn-warning\\\" style=\\\"margin-top:2.5em\\\"\\r\\n                (click)=verifyParentPhoneNum(pickedpID.value)>Verify Number </button> -->\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Parent relationship with student *</label>\\r\\n                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedRealtionShip.valid && pickedRealtionShip.touched\\\"><small>Relationship\\r\\n                Required</small></span>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" required class=\\\"form-control fm-control\\\" #pickedRealtionShip=\\\"ngModel\\\" name=\\\"parent_relationship\\\" placeholder=\\\"Relationship with parent\\\" [(ngModel)]=\\\"parent_relationship\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Previous School Name</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"stud_prevSchool\\\" placeholder=\\\"Previous Scool Name\\\" [(ngModel)]=\\\"stud_prevSchool\\\">\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Previous School Leaving Reason</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"stud_leavingReason\\\" placeholder=\\\"Previous School Leaving Reason\\\" [(ngModel)]=\\\"stud_leavingReason\\\">\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col-md-10 form-group\\\">\\r\\n              <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Parent Phone Number\\r\\n\\r\\n              </label>\\r\\n\\r\\n\\r\\n              <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"std_parentId\\\"\\r\\n                placeholder=\\\"Parent Phone Number \\\" required [(ngModel)]=\\\"std_name\\\" #pickedpID=\\\"ngModel\\\">\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-2 form-group\\\">\\r\\n             <span style=\\\"cursor: pointer;\\\" class=\\\"label label-info\\\"\\r\\n                (click)=verifyParentPhoneNum(pickedpID.value)>Verify</span> -->\\r\\n                <!-- <button class=\\\"btn btn-warning\\\" style=\\\"margin-top:2.5em\\\">Verify Number </button> -->\\r\\n\\r\\n                <!-- </div>  -->\\r\\n\\r\\n\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Address</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"stud_address\\\" placeholder=\\\"Student Address\\\" ngModel>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\"> Admission Class *</label>\\r\\n                    <span style=\\\"color:red; margin-left: 1.5em;\\\" *ngIf=\\\"!pickedStdCLassI.valid && pickedStdCLassI.touched\\\"><small>Class\\r\\n                Required</small></span>\\r\\n                    <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" #pickedStdCLassI [(ngModel)]=\\\"stud_classId\\\" (change)=classSelected(pickedStdCLassI.value); name=\\\"stud_classId\\\">\\r\\n              <option [ngValue]=\\\"undefined\\\" disabled>Select Class</option>\\r\\n              <option *ngFor=\\\"let item of classDataList\\\" [value]=\\\"item.class_id\\\">{{item.class_name}}</option>\\r\\n            </select>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\"> Admission Section *</label>\\r\\n                    <span style=\\\"color:red; margin-left: .5em;\\\" *ngIf=\\\"!pickedStdSectionI.valid && pickedStdSectionI.touched\\\"><small>Section\\r\\n                Required</small></span>\\r\\n                    <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" #pickedStdSectionI [(ngModel)]=\\\"stud_sectionId\\\" (change)=enableBtn() name=\\\"stud_sectionId\\\">\\r\\n              <option [ngValue]=\\\"undefined\\\" disabled>Select Section</option>\\r\\n              <option *ngFor=\\\"let item of sectionsDataList\\\" [value]=\\\"item.section_id\\\">{{item.section_name}}</option>\\r\\n            </select>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <!-- <div class=\\\"col-md-6 form-group\\\">\\r\\n              <label class=\\\"control-label\\\" style=\\\"margin-top:1em;\\\">Roll Number *</label>\\r\\n              <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedStdRollnum.valid && pickedStdRollnum.touched\\\"><small>Roll\\r\\n                  Num Required</small></span>\\r\\n              <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" placeholder=\\\"Student Roll Number\\\"\\r\\n                [(ngModel)]=\\\"std_rollNum\\\" required name=\\\"std_rollNum\\\" #pickedStdRollnum=\\\"ngModel\\\">\\r\\n\\r\\n            </div> -->\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Enroll Date * </label>\\r\\n                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedStdEnrollI.valid && pickedStdEnrollI.touched\\\"><small>Enroll\\r\\n                Date Required</small></span>\\r\\n\\r\\n                    <input type=\\\"date\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"stud_enrollDate\\\" required [(ngModel)]=\\\"stud_enrollDate\\\" #pickedStdEnrollI=\\\"ngModel\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12 form-group\\\">\\r\\n\\r\\n\\r\\n                    <span>\\r\\n              <h3>*Note </h3>\\r\\n            </span>\\r\\n                    <span>\\r\\n              <h4> Student will be Registered in Current Session : {{defaultsession}} </h4> <small style=\\\"color: brown\\\">\\r\\n                ( You can change enroll session year from Settings )</small>\\r\\n            </span>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"!addstudent.form.valid || disableBtn || checkUserName\\\" value=\\\"Add Student\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- ********student Data Update  Model ************ -->\\r\\n\\r\\n\\r\\n<ng-template #updateStudentModal let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <div style=\\\"text-align: center\\\">\\r\\n            <h3>Update Student Information</h3>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <form class=\\\"form-group\\\" #updateStudent=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitupdateStd(updateStudent)\\\">\\r\\n        <div class=\\\"modal-body\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Student Name *</label>\\r\\n                    <span style=\\\"color:red;  margin-left: 1em;\\\" *ngIf=\\\"!pickedStdName.valid && pickedStdName.touched\\\"><small>\\r\\n                Student Name Required</small> </span>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"std_name\\\" placeholder=\\\"Student Name\\\" required [(ngModel)]=\\\"std_name\\\" #pickedStdName=\\\"ngModel\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-6 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Student Email </label>\\r\\n\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"std_email\\\" placeholder=\\\"Student Email\\\" [(ngModel)]=\\\"std_email\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:1em;\\\">Date Of Birth *</label>\\r\\n                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedStdDOB.valid && pickedStdDOB.touched\\\"><small>DOB\\r\\n                Required</small></span>\\r\\n                    <input type=\\\"date\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"std_dob\\\" required [(ngModel)]=\\\"std_dob\\\" #pickedStdDOB=\\\"ngModel\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:1em;\\\">Gender *</label>\\r\\n                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedStdGender.valid && pickedStdGender.touched\\\"><small>Gender\\r\\n                Required</small></span>\\r\\n                    <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" [(ngModel)]=\\\"std_gender\\\" name=\\\"std_gender\\\" #pickedStdGender=\\\"ngModel\\\">\\r\\n              <option [ngValue]=\\\"undefined\\\" disabled>Select Gender</option>\\r\\n              <option value=\\\"male\\\">Male</option>\\r\\n              <option value=\\\"female\\\">Female</option>\\r\\n            </select>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:1em;\\\">Phone Number</label>\\r\\n                    <input type=\\\"number\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"std_phonenum\\\" placeholder=\\\"Phone Number\\\" [(ngModel)]=\\\"std_phonenum\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-5 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Previous Scool Name</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"std_prevSchool\\\" placeholder=\\\"Previous Scool Name\\\" [(ngModel)]=\\\"std_prevSchool\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-7 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Previous School Leaving Reason</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"std_leavingReason\\\" placeholder=\\\"Previous School Leaving Reason\\\" [(ngModel)]=\\\"std_leavingReason\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-8 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:1em;\\\">Parent Details <small style=\\\"color: brown\\\"> ( If\\r\\n                Parent details not found than add parent details from Parent section ) </small></label>\\r\\n                    <!-- <span class=\\\"label label-info\\\" style=\\\"cursor: pointer; margin-left: 1em;\\\" (click)=goToParentRoute()> Go\\r\\n              To Parent Section</span> -->\\r\\n                    <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" [(ngModel)]=\\\"std_parentId\\\" name=\\\"std_parentId\\\">\\r\\n              <option [ngValue]=\\\"undefined\\\" disabled>{{parent_name}} || Parent Email : {{parent_email}} || Parent\\r\\n                Number: {{parent_phoneNum}} || Parent Profession: {{parent_profession}}</option>\\r\\n\\r\\n              <option *ngFor=\\\"let item of parentDetails\\\" [value]=\\\"item.parent_id\\\">{{item.parent_name}} || Parent\\r\\n                Email : {{item.parent_email}} || Parent Number: {{item.parent_phoneNum}} || Parent Profession:\\r\\n                {{item.parent_profession}}</option>\\r\\n            </select>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:1em;\\\">Parent relationship with student *</label>\\r\\n                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedRealtionShipu.valid && pickedRealtionShipu.touched\\\"><small>Gender\\r\\n                Required</small></span>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" required class=\\\"form-control fm-control\\\" #pickedRealtionShipu=\\\"ngModel\\\" name=\\\"u_parent_relationship\\\" placeholder=\\\"Relationship with parent\\\" [(ngModel)]=\\\"u_parent_relationship\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:1em;\\\">Address</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"std_address\\\" placeholder=\\\"Student Address\\\" [(ngModel)]=\\\"std_address\\\">\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"col-md-6 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Class</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" [disabled]=true class=\\\"form-control fm-control\\\" name=\\\"class_name\\\" placeholder=\\\"Student Address\\\" [(ngModel)]=\\\"class_name\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Image</label> <span *ngIf=\\\"!imgValidation\\\" style=\\\"color:red;margin-left: 1em;\\\"> <small> Invalid Image Type </small> </span>\\r\\n                    <input id=\\\"student_image\\\" style=\\\"margin-top:0em;\\\" #imageFile accept=\\\"image/*\\\" name=\\\"student_image\\\" type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" class=\\\"form-control fm-control\\\" placeholder=\\\"Upload a picture...\\\" />\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"col-md-6 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\"> Section *</label>\\r\\n\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" [disabled]=true class=\\\"form-control fm-control\\\" name=\\\"section_name\\\" [(ngModel)]=\\\"section_name\\\">\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-6 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Roll Number *</label>\\r\\n                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedStdRollnum.valid && pickedStdRollnum.touched\\\"><small>Roll\\r\\n                Num Required</small></span>\\r\\n                    <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" placeholder=\\\"Student Roll Number\\\" [(ngModel)]=\\\"std_rollNum\\\" [disabled]=\\\"true\\\" required name=\\\"std_rollNum\\\" #pickedStdRollnum=\\\"ngModel\\\">\\r\\n\\r\\n                    <input type=\\\"hidden\\\" [(ngModel)]=\\\"std_id\\\" name=\\\"std_id\\\">\\r\\n                    <input type=\\\"hidden\\\" [(ngModel)]=\\\"enroll_id\\\" name=\\\"enroll_id\\\">\\r\\n                    <input type=\\\"hidden\\\" [(ngModel)]=\\\"class_id\\\" name=\\\"class_id\\\">\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"!updateStudent.form.valid\\\" value=\\\"Update Student\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\"","module.exports = \"\"","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { StudentsInfoService } from './student-information.service';\r\nimport { ParentsDataService } from '../parents/parents.service';\r\nimport { SectionDataService } from '../sections/manageSection.service';\r\nimport { ClassDataService } from '../classes/manageClass.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport swal from 'sweetalert2';\r\nimport { ViewChild } from '@angular/core';\r\nimport { AdminService } from '../admin.service';\r\nimport { ManageFeeInvoiceService } from '../manage-fee-invoice/manage-fee-invoice.service';\r\nimport { AddExamsService } from '../exams/add-exams.service';\r\n\r\nimport { CommonService } from '../shared/services/common.service';\r\n\r\n// for using jquery\r\ndeclare var jquery: any;\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-students',\r\n  templateUrl: './students.component.html',\r\n  styleUrls: ['./students.component.scss'],\r\n  providers: [\r\n    StudentsInfoService,\r\n    ClassDataService,\r\n    SectionDataService,\r\n    ParentsDataService,\r\n    CommonService,\r\n    AdminService,\r\n    ManageFeeInvoiceService,\r\n    AddExamsService\r\n  ]\r\n})\r\nexport class StudentsComponent implements OnInit {\r\n  // reset image filed after submit\r\n  @ViewChild('imageFile')\r\n  myInputVariable: ElementRef;\r\n\r\n  public searchText;\r\n  public imageBaseUrl;\r\n\r\n  printButton = false;\r\n  showAddParentOption = false;\r\n\r\n  studentsInfo: Array<any>;\r\n  exam_marks: Array<any>;\r\n  fee_invoice: Array<any>;\r\n  singleStdInfo: Array<any>;\r\n  singleParentInfo: Array<any>;\r\n\r\n  /* active session */\r\n  running_session = localStorage.getItem('running_session');\r\n  defaultsession = localStorage.getItem('running_session');\r\n  avatarImgSrc;\r\n  imageThumbBaseUrl;\r\n  placeholder = 'assets/images/placeholder.png';\r\n  userName = 'Ali';\r\n  userPost = 'Student';\r\n\r\n  /* arrays  */\r\n  classDataList: Array<any>;\r\n  studentsDataList: Array<any>;\r\n  singleStudentList: Array<any>;\r\n  sectionsData: Array<any> = [];\r\n  parentDetails: Array<any>;\r\n  examsDataList: Array<any>;\r\n  studentExamResult: Array<any>;\r\n  studentFeeHistroyList: Array<any> = [];\r\n  allStudensDataList: Array<any> = [];\r\n  public filesToUpload: Array<File> = [];\r\n\r\n  /* update student data variables */\r\n\r\n  class_id: number;\r\n  class_name: string;\r\n  enroll_id: number;\r\n  std_rollNum: number;\r\n  std_sectionId: number;\r\n  section_name: string;\r\n  status: number;\r\n  std_address: string;\r\n  std_dob: string;\r\n  std_email: string;\r\n  std_gender: string;\r\n  std_id: number;\r\n  std_name: string;\r\n  std_parentId: number;\r\n  std_password: string;\r\n  std_phonenum: number;\r\n  std_prevSchool: string;\r\n  std_username: string;\r\n  year: string;\r\n  parent_number: number;\r\n  parent_address: string;\r\n  relationship: string;\r\n  parent_name: string;\r\n  parent_email: string;\r\n  std_leavingReason: string;\r\n  parent_profession: string;\r\n  parent_phoneNum;\r\n  u_parent_relationship;\r\n\r\n  selectedStd_id: number;\r\n  selected_exam: string;\r\n  student_image: string;\r\n\r\n  result_totalMarks = 0;\r\n  result_obtainedMarks = 0;\r\n\r\n  /* pagination Info */\r\n  pageSize = 10;\r\n  pageNumber = 1;\r\n\r\n  /* notifications */\r\n\r\n  selectedClassName: string;\r\n  available;\r\n  studentdetailNoti = 'Select Any Class';\r\n  updateSuccessNotifi = 0;\r\n  updateResponseMsg: string;\r\n  alertType;\r\n  dbRespMsg: string;\r\n  examResultStatus = false;\r\n  resultSummary = false;\r\n  feedetailsPresent = false;\r\n  uploadImage = false;\r\n  imgValidation = true;\r\n\r\n  admin_level: any;\r\n\r\n  // add student\r\n  // Data Arrays\r\n\r\n  sectionsDataList: Array<any>;\r\n\r\n  parentsDataList: Array<any>;\r\n  isUserPresentA: Array<any>;\r\n\r\n  // add students variables\r\n  stud_enroll_session: string;\r\n  stud_phone_number: number;\r\n  stud_address: string;\r\n  stud_classId: number;\r\n  stud_dob: string;\r\n  stud_email: string;\r\n  stud_enrollDate: string;\r\n  stud_gender: string;\r\n  stud_leavingReason: string;\r\n  stud_name: string;\r\n  stud_parentId: number;\r\n  stud_password: string;\r\n  stud_prevSchool: string;\r\n  stud_rollNum: string;\r\n  stud_sectionId: number;\r\n  stud_userName: string;\r\n  stud_image;\r\n  stud_parentNumber: number;\r\n  parent_relationship;\r\n  section_id;\r\n\r\n  // verify parent\r\n  verify_parent = false;\r\n  verified_parent_name = '';\r\n  verify_parent_msg = '';\r\n  alert_color = '';\r\n\r\n  public teachersArray: Array<any> = [];\r\n\r\n  // notifications\r\n\r\n  addResponseMessage: string;\r\n  submitNotification = 0;\r\n  disableBtn = false;\r\n  checkUserName = false;\r\n  checkRollNumber = false;\r\n  showfilter = false;\r\n\r\n  // error free\r\n\r\n  public exam;\r\n\r\n  // create instance of services to access method from services\r\n  constructor(\r\n    private _router: Router,\r\n    private _StudentsInfoService: StudentsInfoService,\r\n    private _classDataService: ClassDataService,\r\n    private _sectionDataService: SectionDataService,\r\n    private _parentDataService: ParentsDataService,\r\n    private modalService: NgbModal,\r\n    private _adminService: AdminService,\r\n    // private _authClass: AuthClass,\r\n    private _addExamsService: AddExamsService,\r\n    private _manageFeeInvoiceService: ManageFeeInvoiceService,\r\n    private el: ElementRef,\r\n    private _commonService: CommonService\r\n  ) {}\r\n\r\n  // this function auto called when component loads\r\n  ngOnInit() {\r\n    this.imageBaseUrl =\r\n      this._StudentsInfoService.imagesBaseServer + 'profile_images/';\r\n    this.imageThumbBaseUrl =\r\n      this._StudentsInfoService.imagesBaseServer + 'profile_images/thumbs/';\r\n\r\n    // get admin level\r\n    this.admin_level = localStorage.getItem('admin_level');\r\n\r\n    $('.list-group-item').click(function(e) {\r\n      e.preventDefault();\r\n      $('.list-group-item').removeClass('active');\r\n      $(this).addClass('active');\r\n    });\r\n\r\n    this.getClassData();\r\n\r\n    this.getParentsData();\r\n    this.getExamsinfo();\r\n  }\r\n\r\n  // *********************************************************************************************************************** */\r\n  /**********************************************************Read Data from DB Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  // ********************************************************** **********/\r\n  // *********************** Get all Classes data ************************/\r\n  // ******************************************************************* */\r\n\r\n  public getClassData() {\r\n    this._classDataService.getClassesF().subscribe(result => {\r\n      this.classDataList = result;\r\n    });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // *********************** Get all exams data ************************/\r\n  // ******************************************************************* */\r\n\r\n  public getExamsinfo() {\r\n    const type = 'all';\r\n    this._addExamsService\r\n      .getExamInfoFun(this.running_session)\r\n      .subscribe(result => {\r\n        if (result.status === 1) {\r\n          this.examsDataList = result.data;\r\n        }\r\n        if (result.status === 0) {\r\n          this.dbRespMsg = 'No exam is added';\r\n        }\r\n\r\n        if (result.status === 403) {\r\n          this.dbRespMsg = result.msg;\r\n        }\r\n      });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // *********************** Get all Parents data ************************/\r\n  // ******************************************************************* */\r\n\r\n  public getParentsData() {\r\n    this._parentDataService.getParentsF().subscribe(result => {\r\n      this.parentDetails = result;\r\n    });\r\n  }\r\n\r\n  // change bg color on click\r\n\r\n  onChildSelect(Child) {\r\n    // This would work but if you have the previously selected child stored\r\n    // it would be better to just turn that one white\r\n    for (const myChild of this.classDataList) {\r\n      myChild.BackgroundColour = 'white';\r\n      myChild.color = 'black';\r\n    }\r\n\r\n    Child.BackgroundColour = 'rgba(233, 233, 234, 0.48)';\r\n    Child.color = 'cornflowerblue';\r\n  }\r\n\r\n  public onClickSideBar(class_id, Child) {\r\n    this.getStudentsByClassID(class_id);\r\n    this.onChildSelect(Child);\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // ****************** Get all Students details by class ID ************/\r\n  // ******************************************************************* */\r\n\r\n  public getStudentsByClassID(class_id) {\r\n    this.studentsDataList = [];\r\n    this.allStudensDataList = [];\r\n    /* get all students against selected class */\r\n\r\n    this._StudentsInfoService\r\n      .getStudByClassId(class_id, this.running_session)\r\n      .subscribe(result => {\r\n        this.studentsDataList = result.data;\r\n        this.allStudensDataList = result.data;\r\n        if (result.status === 1) {\r\n          this.showfilter = true;\r\n          this.selectedClassName = this.allStudensDataList[0].class_name;\r\n          this.studentdetailNoti = 'Student Details';\r\n          this.available = ' ';\r\n        } else {\r\n          this.selectedClassName = 'No ';\r\n          this.studentdetailNoti = 'Student Details';\r\n          this.available = 'Available';\r\n        }\r\n      });\r\n\r\n    /* get all section against selected class */\r\n    this._sectionDataService.getSectionF(class_id).subscribe(result => {\r\n      this.sectionsData = []; // empty the arrayy onselect class change\r\n      this.sectionsData = result;\r\n    });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // *************** Get single Student details by student ID ************/\r\n  // ******************************************************************* */\r\n\r\n  public getSingleStudentData(student_id, class_id) {\r\n    this.avatarImgSrc = '';\r\n    this.selectedStd_id = student_id;\r\n    this._StudentsInfoService\r\n      .getSingleStdInfo(student_id, this.running_session)\r\n      .subscribe(result => {\r\n        if (result.status) {\r\n          let singleStudentData = null;\r\n          this.singleStudentList = result.data;\r\n\r\n          singleStudentData = this.singleStudentList[0];\r\n\r\n          this.class_id = singleStudentData.class_id;\r\n          this.class_name = singleStudentData.class_name;\r\n          this.enroll_id = singleStudentData.enroll_id;\r\n          this.std_rollNum = singleStudentData.roll_num;\r\n          this.std_sectionId = singleStudentData.section_id;\r\n          this.section_name = singleStudentData.section_name;\r\n          this.std_address = singleStudentData.std_address;\r\n          this.std_dob = singleStudentData.std_dob;\r\n          this.std_email = singleStudentData.std_email;\r\n          this.std_gender = singleStudentData.std_gender;\r\n          this.std_id = singleStudentData.std_id;\r\n          this.std_name = singleStudentData.std_name;\r\n          this.std_parentId = singleStudentData.std_parentId;\r\n          this.std_phonenum = singleStudentData.std_phonenum;\r\n          this.std_prevSchool = singleStudentData.std_prevSchool;\r\n          this.std_username = singleStudentData.std_username;\r\n          this.year = singleStudentData.year;\r\n          this.parent_name = singleStudentData.parent_name;\r\n          this.parent_email = singleStudentData.parent_email;\r\n\r\n          this.parent_address = singleStudentData.parent_address;\r\n          this.parent_number = singleStudentData.parent_phoneNum;\r\n          this.relationship = singleStudentData.parent_relationship;\r\n          if (singleStudentData.image_path !== '') {\r\n            this.avatarImgSrc = singleStudentData.image_path;\r\n          }\r\n\r\n          this.parent_profession = singleStudentData.parent_profession;\r\n          this.std_leavingReason = singleStudentData.leaving_reason;\r\n        } else {\r\n          console.log(result.msg);\r\n        }\r\n      });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // ****************** Get student result against exam id ***************/\r\n  // ******************************************************************* */\r\n\r\n  get_stdResult(exam_id) {\r\n    this.printButton = false;\r\n    this.resultSummary = false;\r\n    this.result_obtainedMarks = 0;\r\n    this.result_totalMarks = 0;\r\n    this.dbRespMsg = '';\r\n    this.studentExamResult = [];\r\n    this._StudentsInfoService\r\n      .get_stdResultF(exam_id, this.selectedStd_id, this.running_session)\r\n      .subscribe(result => {\r\n        if (result.status === 1) {\r\n          this.studentExamResult = result.data;\r\n          if (this.studentExamResult.length > 0) {\r\n            this.printButton = true;\r\n          }\r\n          this.resultSummary = true;\r\n\r\n          this.selected_exam = this.studentExamResult[0].exam_name;\r\n\r\n          // sum total marks of student\r\n          this.result_totalMarks = this.studentExamResult.reduce(\r\n            (sum, item) => sum + item.total_marks,\r\n            0\r\n          );\r\n\r\n          // sum obtained marks of student\r\n          this.result_obtainedMarks = this.studentExamResult.reduce(\r\n            (sum, item) => sum + item.obtained_marks,\r\n            0\r\n          );\r\n        } else if (result.status === 0) {\r\n          this.examResultStatus = true;\r\n          this._commonService.warningToaster('No data found', 'Failed!');\r\n        } else {\r\n          this.examResultStatus = true;\r\n          this._commonService.errorToaster('Server error try again', 'Error!');\r\n        }\r\n      });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // ****************** Get student fee histroy  ***************/\r\n  // ******************************************************************* */\r\n\r\n  public getStudentFeeHistroy(student_id) {\r\n    this.feedetailsPresent = false;\r\n    this.studentFeeHistroyList = [];\r\n    this._manageFeeInvoiceService\r\n      .getStudentFeeHistroy(student_id, this.running_session)\r\n      .subscribe(result => {\r\n        if (result.status === 1) {\r\n          this.studentFeeHistroyList = result.data;\r\n        } else if (result.status === 0) {\r\n          this.feedetailsPresent = true;\r\n        } else {\r\n          this._commonService.errorToaster(result.msg, 'Error!');\r\n        }\r\n      });\r\n  }\r\n\r\n  // add student\r\n  // ********************************************************************** */\r\n  // ************ Get Section Data Against Selected Class ***************** */\r\n  // ********************************************************************* */\r\n\r\n  public getSectionByClassID(class_id) {\r\n    // * disbale btn untill section selcted and empty section array when selected class change\r\n    this.sectionsDataList = [];\r\n    this.std_sectionId = null;\r\n    this.disableBtn = true;\r\n    this._sectionDataService.getSectionF(class_id).subscribe(result => {\r\n      this.sectionsDataList = result;\r\n    });\r\n  }\r\n\r\n  // ********************************************************************* */\r\n  // *********************** Get all parents data************************ */\r\n  // ******************************************************************* */\r\n\r\n  public getParentData() {\r\n    this._parentDataService.getParentsF().subscribe(result => {\r\n      this.parentsDataList = result;\r\n\r\n      for (let x = 0; x < this.parentsDataList.length; x++) {\r\n        let objects = {};\r\n\r\n        objects = {\r\n          id: this.parentsDataList[x].parent_id,\r\n          text: this.parentsDataList[x].parent_phoneNum\r\n        };\r\n        this.teachersArray.push(objects);\r\n      }\r\n    });\r\n  }\r\n\r\n  // ***************************************************************************** **/\r\n  // ******************* check userName already added event handler  ******************/\r\n  // ********************************************************** *******************/\r\n\r\n  public isUserNameAdded(username) {\r\n    this.checkUserName = false;\r\n    let isUserPresent = 0;\r\n    const userInfo = {\r\n      user_name: username,\r\n      table_name: 'tbl_students'\r\n    };\r\n    this._adminService.userNameExistCheckF(userInfo).subscribe(result => {\r\n      this.isUserPresentA = result;\r\n      isUserPresent = this.isUserPresentA[0].userName_present;\r\n      if (isUserPresent) {\r\n        this.checkUserName = true;\r\n      } else {\r\n        this.checkUserName = false;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // ***************************************************************************** **/\r\n  // ******************* Filter Student By section  ******************/\r\n  // ********************************************************** *******************/\r\n\r\n\r\n  public filterStudentBySection(section_name) {\r\n    if (section_name !== 'all') {\r\n      const filterBySection = this.allStudensDataList.filter(\r\n        student => student.section_name === section_name);\r\n\r\n      this.studentsDataList = filterBySection;\r\n\r\n    } else {\r\n      this.studentsDataList = this.allStudensDataList;\r\n    }\r\n\r\n  }\r\n\r\n  // *********************************************************************************************************************** */\r\n  /*********************************************Write , Update , Delate Data  Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  // ************************************************************************* */\r\n  // ******************* update students event handler function ****************/\r\n  // ********************************************************************** ***/\r\n\r\n  public onSubmitupdateStd(updateEvent) {\r\n    // get student image\r\n    const imagesData: any = new FormData();\r\n    const files: Array<File> = this.filesToUpload;\r\n    if (files.length >= 1) {\r\n      this.uploadImage = true;\r\n    }\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      imagesData.append('uploads[]', files[i], files[i]['name']);\r\n    }\r\n\r\n    const updateData = updateEvent.value;\r\n    let std_parentId = updateData.std_parentId;\r\n    let std_sectionId = updateData.std_sectionId;\r\n    const std_id = updateData.std_id;\r\n    const class_id = Number(updateData.class_id);\r\n    if (std_parentId === 'undefined') {\r\n      std_parentId = this.std_parentId;\r\n    }\r\n\r\n    if (std_sectionId === 'undefined') {\r\n      std_sectionId = this.std_sectionId;\r\n    }\r\n\r\n    // update info against tbl_students\r\n\r\n    const updateStdData = {\r\n      std_address: updateData.std_address,\r\n      std_dob: updateData.std_dob,\r\n      std_email: updateData.std_email,\r\n      std_gender: updateData.std_gender,\r\n\r\n      std_name: updateData.std_name,\r\n      std_parentId: Number(std_parentId),\r\n      std_phonenum: Number(updateData.std_phonenum),\r\n      std_prevSchool: updateData.std_prevSchool,\r\n      parent_relationship: updateData.u_parent_relationship,\r\n      std_leavingReason: updateData.std_leavingReason\r\n    };\r\n\r\n    // update info against tbl_enroll\r\n\r\n    // let updateEnrollInfo = {\r\n    //   std_sectionId: Number(std_sectionId),\r\n    //   enroll_id: updateData.enroll_id\r\n    // };\r\n\r\n    this._StudentsInfoService\r\n      .updateStdInfo(std_id, updateStdData)\r\n      .subscribe(result => {\r\n        if (result.status) {\r\n          const id = JSON.stringify(updateData.std_id);\r\n          imagesData.append('id', id); // std id\r\n          imagesData.append('tbl_name', 'tbl_students'); //\r\n          imagesData.append('source', 'student');\r\n\r\n          // this.myInputVariable.nativeElement.value = \"\";\r\n\r\n          // add student images\r\n          if (this.uploadImage === true) {\r\n            this._commonService.add_images(imagesData).subscribe(respresult => {\r\n              this.filesToUpload = [];\r\n              this.getStudentsByClassID(class_id);\r\n            });\r\n          }\r\n\r\n          this._commonService.successToaster(\r\n            'Updated Successfully',\r\n            'Success!'\r\n          );\r\n\r\n          this.getStudentsByClassID(class_id);\r\n          this.closeModal();\r\n          // update info in enroll tbl  is section update on then uncomment\r\n          // this._StudentsInfoService\r\n          //   .updateStdEnrollInfo(std_id, updateEnrollInfo)\r\n          //   .subscribe(result => {\r\n          //     if (result.status == 1) {\r\n          //       swal({\r\n          //         type: \"success\",\r\n          //         title: \"Updated successfully\",\r\n          //         showConfirmButton: false,\r\n          //         timer: 2000\r\n          //       });\r\n          //       // call function to reload students data\r\n          //       this.getStudentsByClassID(class_id);\r\n          //     } else {\r\n          //       swal(\"Failed!\", result.msg, \"error\");\r\n          //     }\r\n          //   });\r\n        } else {\r\n          this._commonService.errorToaster(result.msg, 'Error!');\r\n        }\r\n      });\r\n  }\r\n\r\n  // ************************************************************************************************************* */\r\n  /********************************************* Validate and Store Images in Array******************************** */\r\n  // ************************************************************************************************************* */\r\n\r\n  public fileChangeEvent(fileInput: any) {\r\n    const filedata = <Array<File>>fileInput.target.files;\r\n\r\n    // this.product.photo = fileInput.target.files[0]['name'];\r\n\r\n    if (!this._commonService.validateFile(filedata[0].name)) {\r\n      this.imgValidation = false;\r\n      this.uploadImage = false;\r\n    } else {\r\n      this.filesToUpload = filedata;\r\n      this.imgValidation = true;\r\n    }\r\n  }\r\n\r\n  // ********************************************************************************* */\r\n  // ******************* OnClick delete student event handler function *****************/\r\n  // ***********************************************************************************/\r\n\r\n  public onClickdeleteStudent(std_id, class_id) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'You wont be able to revert this!',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        // if user confirm then call delete API\r\n        this._StudentsInfoService.deleteStudent(std_id).subscribe(data => {\r\n          if (data.status) {\r\n            this.getStudentsByClassID(class_id); // load students data after deleting data\r\n\r\n            // show deleted notification\r\n            this._commonService.successToaster(\r\n              'Deleted Successfully',\r\n              'Success!'\r\n            );\r\n          } else {\r\n            this._commonService.errorToaster(data.msg, 'Error!');\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // add student\r\n  // **************************************************************** */\r\n  // ******************* Add new students event handler  ******************/\r\n  // ***************************************************************** */\r\n\r\n  public onSubmitAddStd(submitEvent) {\r\n    // get student image\r\n    const imagesData: any = new FormData();\r\n    const files: Array<File> = this.filesToUpload;\r\n    if (files.length >= 1) {\r\n      this.uploadImage = true;\r\n    }\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      imagesData.append('uploads[]', files[i], files[i]['name']);\r\n    }\r\n\r\n    const submitedAddStd = submitEvent.value;\r\n\r\n    const newStudData = {\r\n      phone_number: submitedAddStd.stud_phone_number,\r\n      std_address: submitedAddStd.stud_address,\r\n      std_dob: submitedAddStd.stud_dob,\r\n      std_email: submitedAddStd.stud_email,\r\n      std_enrollDate: submitedAddStd.stud_enrollDate,\r\n      std_gender: submitedAddStd.stud_gender,\r\n      std_leavingReason: submitedAddStd.stud_leavingReason,\r\n      std_name: submitedAddStd.stud_name,\r\n      std_parentId: this.stud_parentId,\r\n      std_prevSchool: submitedAddStd.stud_prevSchool,\r\n      parent_relationship: submitedAddStd.parent_relationship\r\n    };\r\n\r\n    this._StudentsInfoService.addStudentF(newStudData).subscribe(result => {\r\n      if (result.status) {\r\n        this.verify_parent_msg = '';\r\n\r\n        if (this.uploadImage === true) {\r\n          const id = JSON.stringify(result.student_id);\r\n          imagesData.append('id', id); // std id\r\n          imagesData.append('tbl_name', 'tbl_students'); //\r\n          imagesData.append('source', 'student');\r\n\r\n          // this.myInputVariable.nativeElement.value = \"\";\r\n\r\n          // add student images\r\n\r\n          this._commonService.add_images(imagesData).subscribe(res_result => {\r\n            this.filesToUpload = [];\r\n            this.getStudentsByClassID(submitedAddStd.stud_classId);\r\n          });\r\n        }\r\n\r\n        // if student info added then enroll student against class and section year\r\n        const newEnrollData = {\r\n          student_id: result.student_id,\r\n          enroll_session: this.defaultsession,\r\n          std_classId: submitedAddStd.stud_classId,\r\n          std_sectionId: submitedAddStd.stud_sectionId,\r\n          std_rollNum: Math.floor(Math.random() * 90000) + 10000,\r\n          std_enrollDate: submitedAddStd.stud_enrollDate\r\n        };\r\n\r\n        this._StudentsInfoService\r\n          .enrollStudentF(newEnrollData) // enroll student\r\n          .subscribe(resp_result => {\r\n            if (resp_result.status === 1) {\r\n              this._commonService.successToaster(\r\n                'Added Successfully',\r\n                'Success!'\r\n              );\r\n              submitEvent.reset(); // reset form after submission\r\n              this.getStudentsByClassID(submitedAddStd.stud_classId);\r\n              this.closeModal();\r\n            } else {\r\n              this._commonService.errorToaster(resp_result.msg, 'Failed!');\r\n            }\r\n          });\r\n      } else {\r\n        this._commonService.errorToaster(result.msg, 'Error!');\r\n      }\r\n    });\r\n  }\r\n\r\n  // *********************************************************************************************************************** */\r\n  /*********************************************General   Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  public verifyParentPhoneNum(parentNumber) {\r\n    if (typeof parentNumber === 'undefined') {\r\n      this.verify_parent_msg = 'Number Required';\r\n      this.alert_color = 'red';\r\n    } else {\r\n      const verify_number = {\r\n        parent_number: parentNumber\r\n      };\r\n\r\n      this.verify_parent = false;\r\n      this.stud_parentId = 0;\r\n      this.verified_parent_name = '';\r\n      this.verify_parent_msg = '';\r\n      this.alert_color = 'red';\r\n      // verify parent phone number while adding new student\r\n      this._StudentsInfoService\r\n        .verifyParentF(verify_number) // enroll student\r\n        .subscribe(result => {\r\n          if (result.status === 1) {\r\n            this.verify_parent = true;\r\n            this.stud_parentId = result.data[0].parent_id;\r\n            this.verified_parent_name = result.data[0].parent_name;\r\n            this.verify_parent_msg =\r\n              'Parent Verified as ' + this.verified_parent_name;\r\n            this.alert_color = 'green';\r\n          } else {\r\n            this.verify_parent = false;\r\n            this.stud_parentId = 0;\r\n            this.verified_parent_name = '';\r\n            this.verify_parent_msg = 'Invalid Phone Number';\r\n            this.alert_color = 'red';\r\n            this.showAddParentOption = true;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  // *** get sections against class for dropdown\r\n  public classSelected(class_id) {\r\n    this.getSectionByClassID(class_id);\r\n  }\r\n\r\n  // enable manage attendance btn when section isnt empty\r\n  public enableBtn() {\r\n    this.disableBtn = false;\r\n  }\r\n\r\n  // new modal\r\n  openNgModal(content) {\r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n\r\n  // get exam id\r\n  public submitExamIdF(submitEvent) {\r\n    const exam_id = submitEvent.value.exam;\r\n    this.get_stdResult(exam_id);\r\n  }\r\n\r\n  // open model for edit student data\r\n  public openEditStudModal(modal, student_id, class_id) {\r\n    // call method to get singal Student data for updating\r\n    this.getSingleStudentData(student_id, class_id);\r\n    this.openNgModal(modal);\r\n  }\r\n\r\n  // open model for  student Profile data\r\n  public openProfileStudModal(modal, student_id, class_id) {\r\n    this.printButton = false;\r\n    // call method to get singal Student data for updating\r\n    this.getSingleStudentData(student_id, class_id);\r\n    this.getStudentFeeHistroy(student_id);\r\n\r\n    this.openModal(modal);\r\n\r\n    // clear the previous data\r\n    this.studentExamResult = [];\r\n    this.resultSummary = false;\r\n  }\r\n\r\n  // close model\r\n  public closeModal() {\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  public goToParentRoute() {\r\n    this._router.navigate(['/pages/parents']);\r\n  }\r\n\r\n  /********************************* pagination Info ****************************/\r\n\r\n  public pageChanged(pN: number): void {\r\n    this.pageNumber = pN;\r\n  }\r\n\r\n  openModal(modal) {\r\n    // modal.open();\r\n    this.openNgModal(modal);\r\n  }\r\n\r\n  public filterByValue(array, string) {\r\n    return array.filter(o =>\r\n        Object.keys(o).some(k => o[k].toLowerCase().includes(string.toLowerCase())));\r\n}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { routing } from './students.routing';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { SelectModule } from 'ng2-select';\r\nimport { ModalModule } from 'ngx-modal';\r\nimport { SearchPipe } from './search.pipe';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n/* components */\r\nimport { StudentsComponent } from './students.component';\r\nimport { NgxPrintModule } from 'ngx-print';\r\n\r\n@NgModule({\r\n  imports: [\r\n    Ng2SearchPipeModule,\r\n    NgxPrintModule,\r\n    NgxPaginationModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    SelectModule,\r\n    ModalModule,\r\n    HttpModule,\r\n    routing\r\n  ],\r\n  declarations: [StudentsComponent, SearchPipe]\r\n})\r\nexport class StudentsModule {}\r\n","import { Routes, RouterModule } from \"@angular/router\";\r\nimport { StudentsComponent } from \"./students.component\";\r\n\r\nconst childRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: StudentsComponent\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(childRoutes);\r\n"],"sourceRoot":""}