{"version":3,"sources":["webpack:///./src/app/teachers/search.pipe.ts","webpack:///./src/app/teachers/teachers.component.html","webpack:///./src/app/teachers/teachers.component.scss","webpack:///./src/app/teachers/teachers.component.ts","webpack:///./src/app/teachers/teachers.module.ts","webpack:///./src/app/teachers/teachers.routing.ts"],"names":[],"mappings":"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","file":"teachers-teachers-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\n\r\n// search by teacher phone num or cnic\r\nexport class TeachersSearchPipe implements PipeTransform {\r\n  transform(items: any[], filterdata: string): any[] {\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!filterdata) {\r\n      return items;\r\n    }\r\n\r\n    filterdata = filterdata.toString();\r\n    return items.filter(searchValue => {\r\n      const rVal =\r\n        JSON.stringify(searchValue.phone_num).includes(filterdata) ||\r\n        JSON.stringify(searchValue.teacher_cnic).includes(filterdata);\r\n      return rVal;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"col-lg-12 grid-margin stretch-card\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4 class=\\\"card-title\\\">Teachers Details</h4>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top: 1em; margin-bottom: 0em; padding-bottom: 1em; padding-top: 1em;\\\">\\r\\n          <div class=\\\"col-lg-4  \\\">\\r\\n            <input class=\\\"form-control fm-control\\\" [(ngModel)]=\\\"searchText\\\" (keyup)=searchFromDb(search.value) #search\\r\\n              placeholder=\\\"CNIC / Phone Number\\\">\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-lg-5  \\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-lg-3 pull-right \\\" style=\\\"padding-bottom: 1.5em;\\\">\\r\\n\\r\\n            <button _ngcontent-c2=\\\"\\\" (click)=\\\"openNgModal(AddTeacherModal)\\\" class=\\\"btn btn-success btn-block\\\">New\\r\\n              Teacher\\r\\n              <i _ngcontent-c2=\\\"\\\" class=\\\"mdi mdi-plus\\\"></i></button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th># </th>\\r\\n                <th>Teacher</th>\\r\\n                <th>Name </th>\\r\\n                <th>Email </th>\\r\\n                <th>CNIC </th>\\r\\n                <!-- <th>Designation </th> -->\\r\\n                <th>Phone Number </th>\\r\\n\\r\\n                <!-- <th>Qualification</th> -->\\r\\n\\r\\n                <!-- <th>Experience</th> -->\\r\\n                <th *ngIf=\\\"(admin_level == 1)\\\">Actions</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr\\r\\n                *ngFor=\\\"let item of teachersDataList | filter : searchText  | paginate: { id: 'pager', itemsPerPage: pageSize,  totalItems: totalTeachers, currentPage: pageNumber};let index = index\\\">\\r\\n                <td>{{index + 1}} </td>\\r\\n                <td> <img [src]=\\\"item.thumb_path == null ?  placeholderPath : imageBaseUrl  + item.thumb_path\\\"\\r\\n                    class=\\\"rounded-circle dropdown-toggle\\\" width=\\\"30px\\\" data-toggle=\\\"dropdown\\\" alt=\\\"avatar\\\"\\r\\n                    style=\\\" border-radius: 50%;\\\">\\r\\n\\r\\n\\r\\n\\r\\n                </td>\\r\\n                <td>{{item.teacher_name}}</td>\\r\\n                <td>{{item.email}}</td>\\r\\n                <td> {{item.teacher_cnic}}</td>\\r\\n\\r\\n                <!-- <td>{{item.teacher_desig}}</td> -->\\r\\n                <td>{{item.phone_num}}</td>\\r\\n\\r\\n                <!-- <td>{{item.teacher_qual}}</td> -->\\r\\n\\r\\n                <!-- <td>{{item.experience}} </td> -->\\r\\n\\r\\n                <td *ngIf=\\\"(admin_level == 1)\\\">\\r\\n\\r\\n\\r\\n                  <label class=\\\"badge badge-info\\\" (click)=\\\"openEditTeachModal(updateTeacherModal,item.teacher_id, index)\\\"\\r\\n                    style=\\\"cursor: pointer;\\\">Edit</label>\\r\\n                  <label class=\\\"badge badge-danger\\\" (click)=deleteTeacher(item.teacher_id)\\r\\n                    style=\\\"cursor: pointer; margin-left: 1em;\\\">Delete\\r\\n                  </label>\\r\\n                  \\r\\n                  <label class=\\\"badge badge-primary\\\" style=\\\"cursor: pointer; margin-left: 1em;\\\" (click)=\\\"openProfileTeacherModal(teacherProfileModel,item.teacher_id, index)\\\">Profile</label>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n\\r\\n          <div style=\\\"text-align: center ; margin-top: 2em;\\\">\\r\\n            <form class=\\\"pagination-wrapper\\\">\\r\\n              <div class=\\\"form-group pages\\\">\\r\\n                <pagination-controls class=\\\"my-pagination\\\" id=\\\"pager\\\" (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"10\\\"\\r\\n                  directionLinks=\\\"true\\\" autoHide=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\"\\r\\n                  screenReaderPaginationLabel=\\\"Pagination\\\" screenReaderPageLabel=\\\"page\\\"\\r\\n                  screenReaderCurrentLabel=\\\"You're on page\\\">\\r\\n                </pagination-controls>\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- add teacher modal  -->\\r\\n\\r\\n\\r\\n<ng-template #AddTeacherModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <h3>Add Teacher Information</h3>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n    <form class=\\\"form-group\\\" #addteacher=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitAddTeacher(addteacher)\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Name * <span style=\\\"color:red;\\\"\\r\\n              *ngIf=\\\"!pickedTname.valid && pickedTname.touched\\\"><small>\\r\\n                Teacher Name Required</small> </span></label>\\r\\n          <input type=\\\"text\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"t_name\\\"\\r\\n            placeholder=\\\"Teacher Name\\\" [(ngModel)]=\\\"t_name\\\" #pickedTname=\\\"ngModel\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\"> Email\\r\\n                    <span style=\\\"color:red;\\\" *ngIf=\\\"checkEmail\\\"><small style=\\\"margin-left: 1em;\\\"> Email is\\r\\n                already in use</small></span>\\r\\n\\r\\n                </label>\\r\\n          <input type=\\\"text\\\"  style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"t_email\\\"\\r\\n            (keyup)=check_emailUniqueF(this.t_email) placeholder=\\\"Teacher Email\\\" [(ngModel)]=\\\"t_email\\\"\\r\\n            #pickedEmail=\\\"ngModel\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Phone Number * <span style=\\\"color:red;\\\"\\r\\n              *ngIf=\\\"!pickedPhoneNum.valid && pickedPhoneNum.touched\\\"><small>\\r\\n                Email Required</small> </span></label>\\r\\n          <span style=\\\"color:red;\\\" *ngIf=\\\"phone_check\\\"><small style=\\\"margin-left: 1em;\\\"> Number is\\r\\n              already in use</small></span>\\r\\n          <input type=\\\"number\\\" style=\\\"margin-top:0em;\\\" required class=\\\"form-control fm-control\\\" name=\\\"t_phone_num\\\"\\r\\n            (keyup)=setUserName(this.t_phone_num) placeholder=\\\"Phone Number\\\" [(ngModel)]=\\\"t_phone_num\\\"\\r\\n            #pickedPhoneNum=\\\"ngModel\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">User Name\\r\\n            <span style=\\\"color:red;\\\" *ngIf=\\\"checkUserName\\\"><small style=\\\"margin-left: 1em;\\\"> UserName is\\r\\n                already in use</small></span>\\r\\n          </label>\\r\\n          <input type=\\\"text\\\" readonly style=\\\"margin-top:0em;\\\" required class=\\\"form-control fm-control\\\" name=\\\"t_username\\\"\\r\\n            (keyup)=isUserNameAdded(this.t_username) placeholder=\\\"User Name\\\" [(ngModel)]=\\\"t_username\\\"\\r\\n            #pickedUserName=\\\"ngModel\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Password * <span style=\\\"color:red;\\\"\\r\\n              *ngIf=\\\"!pickedPassw.valid && pickedPassw.touched\\\"><small>\\r\\n                Password Required</small> </span></label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" readonly class=\\\"form-control fm-control\\\" required name=\\\"t_password\\\"\\r\\n            placeholder=\\\"Password\\\" [(ngModel)]=\\\"t_password\\\" #pickedPassw=\\\"ngModel\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">NIC * <span style=\\\"color:red;\\\"\\r\\n              *ngIf=\\\"!pickedNIC.valid && pickedNIC.touched\\\"><small>\\r\\n                Required</small> </span></label>\\r\\n          <span style=\\\"color:red;\\\" *ngIf=\\\"cnic_check\\\"><small style=\\\"margin-left: 1em;\\\"> CNIC is\\r\\n              already in use</small></span>\\r\\n          <input type=\\\"number\\\" style=\\\"margin-top:0em;\\\" (keyup)=\\\"check_cnicUniqueF(this.teacher_nic)\\\"\\r\\n            class=\\\"form-control fm-control\\\" required name=\\\"teacher_nic\\\" placeholder=\\\"71502425XXXXXX\\\"\\r\\n            [(ngModel)]=\\\"teacher_nic\\\" #pickedNIC=\\\"ngModel\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Qulification</label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"t_qualification\\\"\\r\\n            placeholder=\\\"Qulification\\\" ngModel>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Designation</label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"t_desig\\\"\\r\\n            placeholder=\\\"Designation\\\" ngModel>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Salary</label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"t_salary\\\"\\r\\n            placeholder=\\\"Salary\\\" ngModel>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Experience <small style=\\\"color:blue;\\\"> ( Years\\r\\n              ) </small></label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"t_experience\\\"\\r\\n            placeholder=\\\"Experience\\\" ngModel>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Gender </label>\\r\\n          <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" [(ngModel)]=\\\"t_gender\\\" name=\\\"t_gender\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\" disabled>Select Gender</option>\\r\\n            <option value=\\\"male\\\">Male</option>\\r\\n            <option value=\\\"female\\\">Female</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Date Of Birth</label>\\r\\n          <input type=\\\"date\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"t_dob\\\" ngModel>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Image</label>\\r\\n          <input id=\\\"teacher_image\\\" style=\\\"margin-top:0em;\\\" #imageFile accept=\\\"image/*\\\" name=\\\"teacher_image\\\" type=\\\"file\\\"\\r\\n            (change)=\\\"fileChangeEvent($event)\\\" class=\\\"form-control fm-control\\\" placeholder=\\\"Upload a picture...\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-8 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Address</label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"t_address\\\"\\r\\n            placeholder=\\\"Teacher Address\\\" ngModel>\\r\\n        </div>\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Teacher Description</label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"t_desc\\\"\\r\\n            placeholder=\\\"teacher Description\\\" ngModel>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n     <input type=\\\"submit\\\" class=\\\"btn btn-info\\\"\\r\\n            [disabled]=\\\"!addteacher.form.valid || checkUserName || checkCnic || checkPhone || checkEmail\\\"\\r\\n            value=\\\"Add Teacher\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n      </form>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<!-- View Teacher -->\\r\\n\\r\\n<ng-template #teacherProfileModel let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <h3>Teacher Details</h3>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n   <form class=\\\"form-group\\\" #updateTeacher=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitUpdateTeacher(updateTeacher)\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Name: {{ teacher_name }}</label>\\r\\n                \\r\\n          \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\"> Email: {{ email }}\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Phone Number: {{ phone_num }}\\r\\n          </label>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">CNIC: {{ t_cnic }}\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Qulification: {{ teacher_qual }}</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Designation: {{ teacher_desig }}</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Salary: {{ teacher_salary }}</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Experience: {{ experience }}</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Gender: {{ gender }} </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Date Of Birth: {{ dob }}</label>\\r\\n        </div>\\r\\n\\r\\n        <!--<div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Image</label>  \\r\\n        </div>-->\\r\\n\\r\\n        <div class=\\\"col-md-6 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Address: {{ address }}</label>\\r\\n        </div>\\r\\n             <div class=\\\"col-md-6 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Teacher Description: {{ tDesc }}</label>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n   </form>\\r\\n</ng-template>\\r\\n\\r\\n<!-- Update Teacher  -->\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #updateTeacherModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <h3>Update Teacher</h3>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n   <form class=\\\"form-group\\\" #updateTeacher=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitUpdateTeacher(updateTeacher)\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Name * <span style=\\\"color:red;\\\"\\r\\n              *ngIf=\\\"!pickedTUname.valid && pickedTUname.touched\\\"><small>\\r\\n                Teacher Name Required</small> </span></label>\\r\\n          <input type=\\\"text\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"teacher_name\\\"\\r\\n            placeholder=\\\"Teacher Name\\\" [(ngModel)]=\\\"teacher_name\\\" #pickedTUname=\\\"ngModel\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\"> Email\\r\\n\\r\\n            <span style=\\\"color:red;\\\"> <small>\\r\\n                {{emailNotUnique}}</small> </span>\\r\\n          </label>\\r\\n          <input type=\\\"text\\\" rquired style=\\\"margin-top:0em;\\\"\\r\\n            (keyup)=\\\"checkUniqueOnUpdate('t_email' , pickedUEmail.value )\\\" class=\\\"form-control fm-control\\\" name=\\\"email\\\"\\r\\n            placeholder=\\\"Teacher Email\\\" [(ngModel)]=\\\"email\\\" #pickedUEmail=\\\"ngModel\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Phone Number * <span style=\\\"color:red;\\\"\\r\\n              *ngIf=\\\"!pickedPhoneNum.valid && pickedPhoneNum.touched\\\"><small>\\r\\n                Email Required</small> </span>\\r\\n            <span style=\\\"color:red;\\\"> <small>\\r\\n                {{phoneNumNotUnique}}</small> </span>\\r\\n          </label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" required\\r\\n            (keyup)=\\\"checkUniqueOnUpdate('t_phonenum' , pickedPhoneNum.value )\\\" class=\\\"form-control fm-control\\\"\\r\\n            name=\\\"phone_num\\\" placeholder=\\\"Phone Number\\\" [(ngModel)]=\\\"phone_num\\\" #pickedPhoneNum=\\\"ngModel\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">CNIC * <span style=\\\"color:red;\\\"\\r\\n              *ngIf=\\\"!pickedCNIC.valid && pickedCNIC.touched\\\"><small>\\r\\n                CNIC Required</small> </span>\\r\\n            <span style=\\\"color:red;\\\"> <small>\\r\\n                {{cnicNotUnique}}</small> </span>\\r\\n          </label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" required\\r\\n            (keyup)=\\\"checkUniqueOnUpdate('t_cnic' , pickedCNIC.value )\\\" class=\\\"form-control fm-control\\\" name=\\\"t_cnic\\\"\\r\\n            placeholder=\\\"CNIC\\\" [(ngModel)]=\\\"t_cnic\\\" #pickedCNIC=\\\"ngModel\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Password <small> ( Left empty if you dont want to change. ) </small></label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"teacher_password\\\"\\r\\n            placeholder=\\\"Password\\\" [(ngModel)]=\\\"teacher_password\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Qulification</label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"teacher_qual\\\"\\r\\n            placeholder=\\\"Qulification\\\" [(ngModel)]=\\\"teacher_qual\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Designation</label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"teacher_desig\\\"\\r\\n            placeholder=\\\"Designation\\\" [(ngModel)]=\\\"teacher_desig\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Salary</label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"teacher_salary\\\"\\r\\n            [(ngModel)]=\\\"teacher_salary\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Experience <small style=\\\"color:blue;\\\"> ( Years )\\r\\n            </small></label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"experience\\\"\\r\\n            [(ngModel)]=\\\"experience\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Gender </label>\\r\\n          <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" [(ngModel)]=\\\"gender\\\" name=\\\"gender\\\">\\r\\n\\r\\n            <option value=\\\"male\\\">Male</option>\\r\\n            <option value=\\\"female\\\">Female</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Date Of Birth</label>\\r\\n          <input type=\\\"date\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"dob\\\" [(ngModel)]=\\\"dob\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Image</label>  <span *ngIf=\\\"!imgValidation\\\" style=\\\"color:red;margin-left: 1em;\\\"> <small> Invalid Image Type </small> </span>\\r\\n          <input id=\\\"uteacher_image\\\" style=\\\"margin-top:0em;\\\" #imageFile accept=\\\"image/*\\\" name=\\\"uteacher_image\\\"\\r\\n            type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" class=\\\"form-control fm-control\\\" placeholder=\\\"Select\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Address</label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"address\\\"\\r\\n            placeholder=\\\"Teacher Address\\\" [(ngModel)]=\\\"address\\\">\\r\\n        </div>\\r\\n             <div class=\\\"col-md-6 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Teacher Description</label>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"  tDesc\\\"\\r\\n            placeholder=\\\"Teacher Description\\\" [(ngModel)]=\\\"  tDesc\\\">\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <input type=\\\"hidden\\\" style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"teacher_id\\\"\\r\\n          [(ngModel)]=\\\"teacher_id\\\">\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n       <input type=\\\"submit\\\" class=\\\"btn btn-info\\\"  [disabled]=\\\"!updateTeacher.form.valid\\\"\\r\\n            value=\\\"Update\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n   </form>\\r\\n</ng-template>\\r\\n\"","module.exports = \"\"","import { GlobalService } from './../shared/services/global.service';\r\n\r\nimport { Component, OnInit, ElementRef } from '@angular/core';\r\nimport swal from 'sweetalert2';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\nimport { TeachersDataService } from './teachers.service'; // service for calling Node API's\r\nimport { AdminService } from '../admin.service';\r\nimport { CommonService } from '../shared/services/common.service';\r\nimport { Http } from '@angular/http';\r\nimport { ViewChild } from '@angular/core';\r\nimport { IndexService } from '../index/index.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-teachers',\r\n  templateUrl: './teachers.component.html',\r\n  styleUrls: ['./teachers.component.scss'],\r\n  providers: [\r\n    TeachersDataService,\r\n    Md5,\r\n    AdminService,\r\n    IndexService,\r\n    CommonService,\r\n    GlobalService\r\n  ] // register service to use service data or call service functions\r\n})\r\nexport class TeachersComponent implements OnInit {\r\n  // reset image filed after submit\r\n  @ViewChild('imageFile')\r\n  myInputVariable: ElementRef;\r\n\r\n  // arrays\r\n  teachersDataList: Array<any>; // array to store teachers data fetching from DB\r\n  singleTeacherData: Array<any>; // array to store single teacher data\r\n  isUserPresentA: Array<any>;\r\n  public filesToUpload: Array<File> = [];\r\n\r\n  public admin_level: any;\r\n  default_password;\r\n  // default variables\r\n  pageSize = 10;\r\n  pageNumber = 1;\r\n  offset = 0;\r\n  imgValidation = true;\r\n  jwt: string = null;\r\n  uploadImage = false;\r\n  running_session = localStorage.getItem('running_session');\r\n  public placeholderPath = 'assets/images/teacherplaceholder.png';\r\n  public imageBaseUrl;\r\n\r\n  // notifications\r\n  successNotification = 0;\r\n  updateSuccessNotifi = 0;\r\n  checkUserName = false;\r\n  checkCnic = false;\r\n  checkPhone = false;\r\n  checkEmail = false;\r\n  cnic_check = false;\r\n  phone_check = false;\r\n  email_check = false;\r\n  isUserPresent;\r\n\r\n  // add and update form variables\r\n  t_desc;\r\n  teacher_id = 0;\r\n  teacher_name = '';\r\n  teacher_qual = '';\r\n  teacher_desig = '';\r\n  password;\r\n  gender = '';\r\n  dob = '';\r\n  phone_num = '';\r\n  email = '';\r\n  address = '';\r\n  teacher_salary;\r\n  experience;\r\n  username;\r\n  t_name: string;\r\n  loadData;\r\n  t_email;\r\n  t_username;\r\n  t_password;\r\n  t_gender;\r\n  t_phone_num;\r\n  teacher_nic;\r\n  teacher_image;\r\n  uteacher_image;\r\n  t_cnic;\r\n  teacher_password = '';\r\n  tDesc;\r\n\r\n  totalTeachers;\r\n  totalTeachersN;\r\n\r\n  public searchText;\r\n\r\n  public existing_email = '';\r\n  public existing_cnic: string;\r\n  public existing_phone: string;\r\n\r\n  public emailNotUnique = '';\r\n  public cnicNotUnique = '';\r\n\r\n  public phoneNumNotUnique = '';\r\n\r\n  public updateBtnDisable = false;\r\n\r\n  // creating object of TeachersDataService class to call methods  => 'this is called dependency injection'\r\n  constructor(\r\n    private _teachersDataService: TeachersDataService,\r\n    private _adminService: AdminService,\r\n    private _commonService: CommonService,\r\n    private http: Http,\r\n    private el: ElementRef,\r\n    private _dashboardService: IndexService,\r\n    private modalService: NgbModal,\r\n    private _globalService: GlobalService\r\n  ) {}\r\n\r\n  // ********************* auto run the function on page load *******************//\r\n\r\n  ngOnInit() {\r\n    this.admin_level = localStorage.getItem('admin_level');\r\n    this.imageBaseUrl =\r\n      this._teachersDataService.imagesBaseServer + 'profile_images/thumbs/';\r\n\r\n    // call API to get teachers data when user load the app\r\n    // this.getTeachersData();\r\n\r\n    this.getTeachersWithPagination(this.offset); // with pagination\r\n    this.get_totalTeachers(); // count teachers\r\n  }\r\n\r\n  // ********************************************************************************************************************** */\r\n  /**********************************************************Read Data from DB Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  // ********************************************************************* */\r\n  // *********************** Get all teachers data************************ */\r\n  // ******************************************************************* */\r\n\r\n  public getTeachersData() {\r\n    this._teachersDataService.getTeachersF().subscribe(result => {\r\n      this.teachersDataList = result;\r\n    });\r\n  }\r\n\r\n  // ********************************************************************* */\r\n  // ************** Get all teachers with pagination data******************* */\r\n  // ******************************************************************* */\r\n\r\n  public getTeachersWithPagination(offset) {\r\n    const pagination_data = {\r\n      itemsPerPage: this.pageSize,\r\n      offset: offset\r\n    };\r\n\r\n    this._teachersDataService\r\n      .getTeachersWithPaginationF(pagination_data)\r\n      .subscribe(result => {\r\n        this.teachersDataList = result.data;\r\n      });\r\n  }\r\n\r\n  // ********************************************************************* */\r\n  // *********************** Get Number of Teachers************************ */\r\n  // ******************************************************************* */\r\n\r\n  public get_totalTeachers() {\r\n    const count_type = 'teachers';\r\n    this._dashboardService\r\n      .get_totalStudentsF(count_type, this.running_session)\r\n      .subscribe(result => {\r\n        if (result.status === 1) {\r\n          this.totalTeachers = result.data[0].count_total;\r\n        } else if (result.status === 0) {\r\n          this.totalTeachersN = 'No Teachers Added ';\r\n        } else {\r\n          console.log(result);\r\n        }\r\n      });\r\n  }\r\n\r\n  // *************************************************************************** */\r\n  // ********************** Get single teacher data ****************************** */\r\n  // **************************************************************************** */\r\n\r\n  public getSingleTeacherData(index) {\r\n    this.imgValidation = true;\r\n    let singleTeacher = null;\r\n\r\n    // get the response data in array singleTeacherData\r\n\r\n    singleTeacher = this.teachersDataList[index];\r\n    this.teacher_id = singleTeacher.teacher_id;\r\n    this.teacher_name = singleTeacher.teacher_name;\r\n    this.teacher_qual = singleTeacher.teacher_qual;\r\n    this.teacher_desig = singleTeacher.teacher_desig;\r\n    this.password = singleTeacher.password;\r\n    this.gender = singleTeacher.gender;\r\n    this.dob = singleTeacher.dob;\r\n    this.phone_num = singleTeacher.phone_num;\r\n    this.email = singleTeacher.email;\r\n    this.address = singleTeacher.address;\r\n    this.teacher_salary = singleTeacher.teacher_salary;\r\n    this.experience = singleTeacher.experience;\r\n    this.username = singleTeacher.user_name;\r\n    this.t_cnic = singleTeacher.teacher_cnic;\r\n    this.tDesc = singleTeacher.t_desc;\r\n  }\r\n\r\n  // ***************************************************************************** **/\r\n  // ******************* check userName already added event handler  ******************/\r\n  // ********************************************************** *******************/\r\n\r\n  public isUserNameAdded(username) {\r\n    this.checkUserName = false;\r\n    let isUserPresent = 0;\r\n    const userInfo = {\r\n      user_name: username,\r\n      table_name: 'tbl_teachers'\r\n    };\r\n    this._adminService.userNameExistCheckF(userInfo).subscribe(result => {\r\n      this.isUserPresentA = result;\r\n      isUserPresent = this.isUserPresentA[0].userName_present;\r\n      if (isUserPresent) {\r\n        this.checkUserName = true;\r\n      } else {\r\n        this.checkUserName = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  // *********************************************************************************************************************** */\r\n  /*********************************************Write , Update , Delete Data  Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  // ************************************************************************* */\r\n  // ******************* Add teacher event handler function ******************/\r\n  // ********************************************************************** ***/\r\n\r\n  public onSubmitAddTeacher(submitEvent) {\r\n    // get teacher image\r\n    const imagesData: any = new FormData();\r\n    const files: Array<File> = this.filesToUpload;\r\n    // console.log(files);\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      imagesData.append('uploads[]', files[i], files[i]['name']);\r\n    }\r\n    if (files.length >= 1) {\r\n      this.uploadImage = true;\r\n    }\r\n\r\n    const data = submitEvent.value;\r\n    const newTeacherData = {\r\n      teacher_name: data.t_name,\r\n      teacher_qual: data.t_qualification,\r\n      teacher_desig: data.t_desig,\r\n      password: Md5.hashStr(data.t_password),\r\n      gender: data.t_gender,\r\n      dob: data.t_dob,\r\n      teacher_nic: data.teacher_nic,\r\n      phone_num: data.t_phone_num,\r\n      email: data.t_email,\r\n      address: data.t_address,\r\n      teacher_salary: data.t_salary,\r\n      experience: data.t_experience,\r\n      user_name: data.t_username.replace(/\\s/g, ''),\r\n      t_desc: data.t_desc\r\n    };\r\n\r\n    this._teachersDataService.addTeachersF(newTeacherData).subscribe(result => {\r\n      if (result.status === 1) {\r\n        const id = JSON.stringify(result.inserted_id);\r\n        imagesData.append('id', id); // teacher id\r\n        imagesData.append('tbl_name', 'tbl_teachers');\r\n        imagesData.append('source', 'teacher');\r\n\r\n        // this.myInputVariable.nativeElement.value = \"\";\r\n\r\n        // add teacher images\r\n        if (this.uploadImage === true) {\r\n          this._commonService.add_images(imagesData).subscribe(respresult => {\r\n            this.filesToUpload = [];\r\n            this.getTeachersWithPagination(this.offset);\r\n          });\r\n        }\r\n\r\n        this._commonService.successToaster('Added Successfully', 'Success!');\r\n        // reset for after submission\r\n        submitEvent.reset();\r\n        this.getTeachersWithPagination(this.offset);\r\n        this.closeModal();\r\n      } else {\r\n        this._commonService.errorToaster(result.msg, 'Error!');\r\n      }\r\n    });\r\n  }\r\n\r\n  // ************************************************************************************************************* */\r\n  /*********************************************Store Images in Array******************************** */\r\n  // ************************************************************************************************************* */\r\n\r\n  public fileChangeEvent(fileInput: any) {\r\n    const filedata = <Array<File>>fileInput.target.files;\r\n    // this.product.photo = fileInput.target.files[0]['name'];\r\n\r\n    // check file is valid\r\n    if (!this._commonService.validateFile(filedata[0].name)) {\r\n      this.imgValidation = false;\r\n      this.uploadImage = false;\r\n    } else {\r\n      this.filesToUpload = filedata;\r\n      this.imgValidation = true;\r\n    }\r\n  }\r\n\r\n  // **************************************************************************** */\r\n  // ******************* Update teacher event handler function ******************/\r\n  /************************************************************************* */\r\n\r\n  public onSubmitUpdateTeacher(submitEvent) {\r\n    // empty noti string\r\n    this.emailNotUnique = '';\r\n    this.cnicNotUnique = '';\r\n\r\n    this.phoneNumNotUnique = '';\r\n    // get teacher image\r\n    const imagesData: any = new FormData();\r\n    const files: Array<File> = this.filesToUpload;\r\n    if (files.length >= 1) {\r\n      this.uploadImage = true;\r\n    }\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      imagesData.append('uploads[]', files[i], files[i]['name']);\r\n    }\r\n\r\n    const data = submitEvent.value;\r\n    const id = data.teacher_id;\r\n\r\n    const updateTeacherData = {\r\n      teacher_name: data.teacher_name,\r\n      teacher_qual: data.teacher_qual,\r\n      teacher_desig: data.teacher_desig,\r\n      teacher_password:\r\n        data.teacher_password === ''\r\n          ? data.teacher_password\r\n          : Md5.hashStr(data.teacher_password),\r\n      gender: data.gender,\r\n      dob: data.dob,\r\n      phone_num: data.phone_num,\r\n      email: data.email,\r\n      address: data.address,\r\n      experience: data.experience,\r\n      teacher_salary: data.teacher_salary,\r\n      teacher_cnic: data.t_cnic,\r\n      t_desc: data.tDesc\r\n    };\r\n\r\n    this._teachersDataService\r\n      .updateTeacherF(updateTeacherData, id)\r\n      .subscribe(result => {\r\n        const t_id = JSON.stringify(data.teacher_id);\r\n        imagesData.append('id', t_id);\r\n        imagesData.append('tbl_name', 'tbl_teachers');\r\n        imagesData.append('source', 'teacher');\r\n\r\n        // this.myInputVariable.nativeElement.value = \"\";\r\n\r\n        // update teacher images if image selected\r\n        if (this.uploadImage === true) {\r\n          this._commonService.add_images(imagesData).subscribe(respresult => {\r\n            this.filesToUpload = [];\r\n            if (respresult.status !== 1) {\r\n              this._commonService.errorToaster(\r\n                'Image Upload Failed',\r\n                'Failed!'\r\n              );\r\n            } else {\r\n              this.getTeachersWithPagination(this.offset);\r\n            }\r\n          });\r\n        }\r\n\r\n        if (result.status === 1) {\r\n          this._commonService.successToaster(\r\n            'Updated Successfully',\r\n            'Success!'\r\n          );\r\n          this.getTeachersWithPagination(this.offset); // with pagination\r\n          this.closeModal();\r\n        } else {\r\n          this._commonService.errorToaster(result.msg, 'Error!');\r\n        }\r\n      });\r\n  }\r\n\r\n  // ********************************************************************************* */\r\n  // ******************* OnClick delete teacher event handler function *****************/\r\n  // ***********************************************************************************/\r\n\r\n  public deleteTeacher(id) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'You wont be able to revert this!',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        // if user confirm then call delete API\r\n        this._teachersDataService.deleteTeachersF(id).subscribe(data => {\r\n          this.getTeachersData(); // load teachers data after deleting data\r\n        });\r\n        // show deleted notification\r\n        this._commonService.successToaster('Deleted Successfully', 'Success!');\r\n      }\r\n    });\r\n  }\r\n\r\n  // *********************************************************************************************************************** */\r\n  /*********************************************General   Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  // new modal\r\n  openNgModal(content) {\r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n\r\n  // ********************** */ get searching data from database  ************************\r\n  public searchFromDb(searchKeyWord) {\r\n    if (!searchKeyWord) {\r\n      this.getTeachersWithPagination(this.offset); // with pagination\r\n    } else {\r\n      const search_data = {\r\n        type: 'tbl_teachers',\r\n        keyword: searchKeyWord // NIC OR Phone number\r\n      };\r\n\r\n      this._commonService.searchByNicPhoneNum(search_data).subscribe(result => {\r\n        if (result.status === 1) {\r\n          this.teachersDataList = result.data;\r\n        } else {\r\n          console.log(result.data);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // ****************** */ hide success toaster after 2 secs *******************\r\n  public FadeOutToaster() {\r\n    setTimeout(() => {\r\n      this.successNotification = 0;\r\n    }, 2000);\r\n  }\r\n\r\n  public FadeOutUpdateToaster() {\r\n    setTimeout(() => {\r\n      this.updateSuccessNotifi = 0;\r\n    }, 2000);\r\n  }\r\n  // open model for edit teacher data\r\n  public openEditTeachModal(modal, id, index) {\r\n    this.emailNotUnique = '';\r\n    this.cnicNotUnique = '';\r\n\r\n    this.phoneNumNotUnique = '';\r\n    // call method to get singal teacher data for updating\r\n    this.getSingleTeacherData(index);\r\n    this.openNgModal(modal);\r\n  }\r\n  \r\n  public openProfileTeacherModal(modal, id, index) {\r\n\t  //console.log(modal);\r\n\t  //console.log(id);\r\n\t  //console.log(index);\r\n    //this.printButton = false;\r\n    // call method to get singal Student data for updating\r\n    this.getSingleTeacherData(index);\r\n\r\n    this.openNgModal(modal);\r\n\r\n    // clear the previous data\r\n    //this.studentExamResult = [];\r\n    //this.resultSummary = false;\r\n  }\r\n  // close model\r\n  public closeModal() {\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  public openModal(modal) {\r\n\t\r\n    modal.open();\r\n  }\r\n\r\n  /********************************* pagination Info ****************************/\r\n\r\n  public pageChanged(pN: number): void {\r\n    this.pageNumber = pN;\r\n\r\n    this.offset = (pN - 1) * this.pageSize;\r\n\r\n    this.getTeachersWithPagination(this.offset);\r\n  }\r\n\r\n  /********************************* set parent user name by default phone number ****************************/\r\n  setUserName(mobile_number) {\r\n    // for unique notifi and btn disable\r\n    this.checkPhone = false;\r\n    this.phone_check = false;\r\n\r\n    if (mobile_number) {\r\n      this.t_username = mobile_number.toString();\r\n      const string_phone_num = mobile_number.toString();\r\n      // default password will be first four digits of phone number with test@ (eg test@first_four_digit_of_mobile)\r\n      const mobile_first_four_digits = string_phone_num.substring(0, 4);\r\n      this.default_password = 'test@' + mobile_first_four_digits;\r\n    }\r\n\r\n    this.t_password = this.default_password;\r\n\r\n    // check phone num is unique or not\r\n\r\n    const check_unique_data = {\r\n      type: 'phone',\r\n      check_value: mobile_number,\r\n      tbl_name: 'tbl_teachers'\r\n    };\r\n    this._commonService.check_unique_f(check_unique_data).subscribe(result => {\r\n      if (result.status === 1) {\r\n        if (result.data[0].teacher_phone_count) {\r\n          this.checkPhone = true;\r\n          this.phone_check = true;\r\n        } else {\r\n          this.checkPhone = false;\r\n          this.phone_check = false;\r\n        }\r\n      } else {\r\n        console.log(result.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /****************** check cnic uniqueness ******************/\r\n\r\n  check_cnicUniqueF(value) {\r\n    // for notification n btn disable\r\n    this.cnic_check = false;\r\n    this.checkCnic = false;\r\n    // check whether value is unique or not\r\n    const check_unique_data = {\r\n      type: 'cnic',\r\n      check_value: value,\r\n      tbl_name: 'tbl_teachers'\r\n    };\r\n    this._commonService.check_unique_f(check_unique_data).subscribe(result => {\r\n      if (result.status === 1) {\r\n        if (result.data[0].teacher_cnic_count) {\r\n          this.checkCnic = true;\r\n          this.cnic_check = true;\r\n        } else {\r\n          this.checkCnic = false;\r\n          this.cnic_check = false;\r\n        }\r\n      } else {\r\n        console.log(result.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /****************** check email uniqueness ******************/\r\n\r\n  check_emailUniqueF(value) {\r\n    if (value === '') {\r\n      this.email_check = false;\r\n      this.checkEmail = false;\r\n    } else {\r\n      // for notification n btn disable\r\n      this.email_check = false;\r\n      this.checkEmail = false;\r\n      // check whether value is unique or not\r\n      const check_unique_data = {\r\n        type: 'email',\r\n        check_value: value,\r\n        tbl_name: 'tbl_teachers'\r\n      };\r\n      this._commonService\r\n        .check_unique_f(check_unique_data)\r\n        .subscribe(result => {\r\n          if (result.status === 1) {\r\n            if (result.data[0].teacher_email_count) {\r\n              this.email_check = true;\r\n              this.checkEmail = true;\r\n            } else {\r\n              this.email_check = false;\r\n              this.checkEmail = false;\r\n            }\r\n          } else {\r\n            console.log(result.msg);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  /*********************check unique on Update ************* */\r\n\r\n  checkUniqueOnUpdate(check_info, check_value) {\r\n    if (check_value) {\r\n      let existing;\r\n\r\n      if (check_info === 't_email') {\r\n        existing = this.existing_email;\r\n      } else if (check_info === 't_cnic') {\r\n        existing = this.existing_cnic;\r\n      } else if (check_info === 't_phonenum') {\r\n        existing = this.existing_phone;\r\n      }\r\n\r\n      const check_data = {\r\n        check_info: check_info, // email / user name / cnic / phone num\r\n        table: 'tbl_teachers',\r\n        check_value: check_value,\r\n        existing: existing\r\n      };\r\n\r\n      this._commonService.checkUniqueOnUpdate(check_data).subscribe(result => {\r\n        if (result.status === 1) {\r\n          this.updateBtnDisable = true;\r\n          if (result.notificationVar === 'email') {\r\n            this.emailNotUnique = 'Email already in use';\r\n          } else if (result.notificationVar === 'cnic') {\r\n            this.cnicNotUnique = 'CNIC already in use';\r\n          } else if (result.notificationVar === 'phonenum') {\r\n            this.phoneNumNotUnique = 'Phone Num already in use';\r\n          }\r\n        } else {\r\n          if (check_info === 't_email') {\r\n            this.emailNotUnique = '';\r\n          } else if (check_info === 't_cnic') {\r\n            this.cnicNotUnique = '';\r\n          } else if (check_info === 't_phonenum') {\r\n            this.phoneNumNotUnique = '';\r\n          }\r\n\r\n          console.log(result.msg);\r\n          this.updateBtnDisable = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { routing } from \"./teachers.routing\";\r\nimport { HttpModule } from \"@angular/http\";\r\n\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { SelectModule } from \"ng2-select\";\r\nimport { ModalModule } from \"ngx-modal\";\r\nimport { TeachersSearchPipe } from \"./search.pipe\";\r\n\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators\r\n} from \"@angular/forms\";\r\n/* components */\r\nimport { TeachersComponent } from \"./teachers.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgxPaginationModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    SelectModule,\r\n    ModalModule,\r\n    HttpModule,\r\n    routing\r\n  ],\r\n  declarations: [TeachersComponent, TeachersSearchPipe]\r\n})\r\nexport class TeachersModule {}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { TeachersComponent } from './teachers.component';\r\n\r\nconst childRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: TeachersComponent\r\n    }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(childRoutes);\r\n"],"sourceRoot":""}