{"version":3,"sources":["webpack:///./node_modules/ng2-search-filter/ng2-search-filter.es5.js","webpack:///./src/app/manage-fee-heads/manage-fee-heads.component.html","webpack:///./src/app/manage-fee-heads/manage-fee-heads.component.scss","webpack:///./src/app/manage-fee-heads/manage-fee-heads.component.ts","webpack:///./src/app/manage-fee-heads/manage-fee-heads.module.ts","webpack:///./src/app/manage-fee-heads/manage-fee-heads.routing.ts"],"names":[],"mappings":"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","file":"manage-fee-heads-manage-fee-heads-module.js","sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\nvar Ng2SearchPipe = /** @class */ (function () {\n    function Ng2SearchPipe() {\n    }\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    Ng2SearchPipe.prototype.transform = function (items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    };\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    Ng2SearchPipe.filter = function (items, term) {\n        var /** @type {?} */ toCompare = term.toLowerCase();\n        return items.filter(function (item) {\n            for (var /** @type {?} */ property in item) {\n                if (item[property] === null) {\n                    continue;\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    return Ng2SearchPipe;\n}());\nNg2SearchPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filter',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = function () { return []; };\nvar Ng2SearchPipeModule = /** @class */ (function () {\n    function Ng2SearchPipeModule() {\n    }\n    return Ng2SearchPipeModule;\n}());\nNg2SearchPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            },] },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = function () { return []; };\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n//# sourceMappingURL=ng2-search-filter.es5.js.map\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12 grid-margin stretch-card\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-7\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Manage Fee Heads</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-3\\\">\\r\\n                        <button _ngcontent-c2=\\\"\\\" (click)=\\\"openNgModal(addFeeHeadModel, 'md')\\\" class=\\\" btn btn-success btn-block \\\">Add Fee Heads <i  class=\\\"mdi mdi-plus \\\"></i></button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-2 col-md-2 \\\">\\r\\n                        <p style=\\\"text-align:left !important;\\\">\\r\\n                            <button class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-print\\\">&nbsp;&nbsp;Print</i></button>\\r\\n                        </p>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"col-lg-12 col-md-12 \\\" style=\\\"text-align:center; \\\">\\r\\n                    <span style=\\\"color:red; margin-left: 1em; \\\"></span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-lg-12 col-md-12 \\\">\\r\\n                    <h5>Fee Heads List</h5>\\r\\n                    <div class=\\\"table-responsive \\\">\\r\\n                        <table class=\\\"table table-bordered \\\">\\r\\n                            <thead class=\\\"thead-light \\\">\\r\\n                                <tr>\\r\\n                                    <th>Fee Head</th>\\r\\n                                    <th *ngIf=\\\"(admin_level == 1)\\\">Actions</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <!--\\r\\n                                <tr *ngFor=\\\"let item of feedHeadsData | paginate: { id: 'pager', itemsPerPage: pageSize, currentPage: pageNumber}; let index = index\\\">\\r\\n                                    <td>{{item.head_name}}</td>\\r\\n                                    <td *ngIf=\\\"(admin_level == 1)\\\">\\r\\n                                        <label class=\\\"badge badge-info\\\" (click)=\\\"openEditFeeHeadsModal(updateFeeHeadModel,item.fee_heads_id , index)\\\" style=\\\"cursor: pointer;\\\">Edit</label>\\r\\n\\r\\n                                        <label class=\\\"badge badge-danger\\\" (click)=deleteFeeHead(item.fee_heads_id) style=\\\"cursor: pointer; margin-left: 1em;\\\">Delete </label>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                -->\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- *********************************** Modals **************************************** -->\\r\\n\\r\\n\\r\\n<!-- ******** add fee discount ************ -->\\r\\n\\r\\n<ng-template #addFeeHeadModel>\\r\\n    <div class=\\\"modal-header \\\">\\r\\n        <div style=\\\"text-align: center \\\">\\r\\n            <h3>Add Fee Heads</h3>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" (click)=\\\"closeModal()\\\" class=\\\"close \\\" aria-label=\\\"Close\\\">\\r\\n    <span aria-hidden=\\\"true \\\">&times;</span>\\r\\n  </button>\\r\\n    </div>\\r\\n    <form class=\\\"form-group \\\" #addFeeHead=\\\"ngForm\\\" (ngSubmit)=\\\"onClickAddFeeHead(addFeeHead)\\\">\\r\\n        <div class=\\\"modal-body \\\">\\r\\n\\r\\n            <p *ngIf=\\\"!feeHeadTitle.valid && feeHeadTitle.touched\\\" class=\\\"alert alert-danger \\\" style=\\\"margin-top:1em; margin-left:0em; \\\">\\r\\n                Fee Head Name is required!\\r\\n            </p>\\r\\n\\r\\n            <label class=\\\"control-label \\\"> Fee Head  *</label>\\r\\n            <input [(ngModel)]=\\\"feeHeadTitleText\\\" #feeHeadTitle=\\\"ngModel\\\" type=\\\"text \\\" required placeholder=\\\"Fee Head Name \\\" class=\\\"form-control fm-control \\\" style=\\\"margin-top:0em; \\\" name=\\\"feeHeadTitle\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer \\\">\\r\\n            <input type=\\\"submit\\\" [disabled]=\\\"!addFeeHead.form.valid\\\" class=\\\"btn btn-info \\\" value=\\\"Set Fee Head \\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-light \\\" (click)=\\\"closeModal() \\\">Close</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\\r\\n<!-- ******** Update Fee Heads ************ -->\\r\\n\\r\\n<ng-template #updateFeeHeadModel let-modal>\\r\\n    <div class=\\\"modal-header \\\">\\r\\n        <div style=\\\"text-align: center \\\">\\r\\n            <h3>Update Fee Head Detail</h3>\\r\\n        </div>\\r\\n        <button type=\\\"button \\\" class=\\\"close \\\" aria-label=\\\"Close \\\">\\r\\n    <span aria-hidden=\\\"true \\\">&times;</span>\\r\\n  </button>\\r\\n    </div>\\r\\n    <form class=\\\"form-group\\\" #updateFeeHead=\\\"ngForm\\\" (ngSubmit)=\\\"onClickUpdateFeeHeadDetail(updateFeeHead) \\\">\\r\\n        <div class=\\\"modal-body \\\">\\r\\n\\r\\n            <p *ngIf=\\\"!updateFeeHeadTitle.valid && updateFeeHeadTitle.touched\\\" class=\\\"alert alert-danger \\\" style=\\\"margin-top:1em; margin-left:0em; \\\">\\r\\n                Fee Head Name is required!\\r\\n            </p>\\r\\n\\r\\n            <label class=\\\"control-label \\\"> Fee Head </label>\\r\\n\\r\\n            <input type=\\\"hidden\\\" class=\\\"form-control fm-control\\\" name=\\\"fee_heads_id\\\" [(ngModel)]=\\\"fee_heads_id\\\">\\r\\n\\r\\n            <input [(ngModel)]=\\\"head_name\\\" #updateFeeHeadTitle=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control fm-control\\\" name=\\\"head_name\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer \\\">\\r\\n            <input type=\\\"submit\\\" [disabled]=\\\"!updateFeeHead.form.valid\\\" class=\\\"btn btn-info\\\" value=\\\"Update \\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"modal.close( 'Close click')\\\" class=\\\"btn btn-light \\\">Close</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ManageFeeHeadsService } from './manage-fee-heads.service';\r\nimport { CommonService } from '../shared/services/common.service';\r\nimport swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-manage-fee-heads',\r\n  templateUrl: './manage-fee-heads.component.html',\r\n  styleUrls: ['./manage-fee-heads.component.scss'],\r\n  providers: [ManageFeeHeadsService, CommonService]\r\n})\r\nexport class ManageFeeHeadsComponent implements OnInit {\r\n\r\n\t// variable for add fee head\r\n\t\r\n\tfeedHeadsData: Array<any>;\r\n\t \r\n\tpublic feeHeadTitleText:string;\r\n\tpublic head_name:string;\r\n\tpublic fee_heads_id:number;\r\n   \r\n\t\r\n\t// variable for update fee head\r\n\tpublic updateFeeHeadTitleText:string = \"Tuition Fee\";\r\n\tadmin_level: any;\r\n\tconstructor(\r\n\t\tprivate _commonService: CommonService,\r\n\t\tprivate _manageFeeHeadsService: ManageFeeHeadsService,\r\n\t\tprivate modalService: NgbModal\r\n\t) { }\r\n\r\n\t// new modal\r\n\topenNgModal(content, size) {\r\n\t  this.modalService.open(content, { size: size });\r\n\t}\r\n\r\n\t// open modal\r\n\tpublic openModal(modal) {\r\n\t  this.openNgModal(modal, 'md');\r\n\t}\r\n\r\n\t// close modal\r\n\tpublic closeModal() {\r\n\t  this.modalService.dismissAll();\r\n\t}\r\n\r\n\t// this function auto called when component loads\r\n\tngOnInit() {\r\n\t\t// get admin level\r\n\t\tthis.admin_level = localStorage.getItem('admin_level');\r\n\t\tthis.getAllFeeHeadsData();\r\n\t\t\r\n\t\t//this.getFeeStructInfo();\r\n\t}\r\n  \r\n\tpublic onClickAddFeeHead(submitEvent)\r\n\t{\r\n\t\t//alert(submitEvent.value.feeHeadTitle);\r\n\t\tconst data = submitEvent.value;\r\n\t\t\r\n\t\tconst formdata = {\r\n\t\t  head_name: data.feeHeadTitle,\r\n\t\t};\r\n\t\tthis._manageFeeHeadsService.addNewFeeHead(formdata).subscribe(result => {\r\n\t\t  if (result.status === 1) {\r\n\t\t\tthis._commonService.successToaster('Added Successfully', 'Success!');\r\n\t\t\tsubmitEvent.reset(); // reset form after submission\r\n\t\t\tthis.getAllFeeHeadsData();\r\n\t\t\tthis.closeModal();\r\n\t\t  } else {\r\n\t\t\tthis._commonService.successToaster(result.msg, 'Failed!');\r\n\t\t  }\r\n\t\t});\r\n\t}\r\n\t\r\n\t// ********************************************************** **********/\r\n\t// *********************** Get all Sub Classes data ************************ */\r\n\t// ******************************************************************* */\r\n\t public openEditFeeHeadsModal(modal, id, index) {\t\r\n\t   // call method to get single class data for updating\r\n\t\tthis.getSingleRowData(index);\r\n\t\tthis.openNgModal(modal, 'md');\r\n\t}\r\n\r\n\t// ********************************************************** **********/\r\n\t// *********************** Get all Sub Classes data ************************ */\r\n\t// ******************************************************************* */\r\n\r\n\tpublic getAllFeeHeadsData() {\r\n\t\tthis._manageFeeHeadsService.getFeeHeads().subscribe(result => {\r\n\t\t  this.feedHeadsData = result;\r\n\t\t});\r\n\t}\r\n  \r\n  \r\n\tpublic getSingleRowData(index) {\r\n\t\tlet singleRow = null;\r\n\t\t\r\n\t\tsingleRow = this.feedHeadsData[index];\r\n\r\n\t\tthis.fee_heads_id = singleRow.fee_heads_id;\r\n\t\tthis.head_name = singleRow.head_name;\r\n\t  }\r\n  \r\n\r\n\tpublic onClickDeleteHeadTitle(headID)\r\n\t{\r\n\t  var confrm = confirm(\"Are you sure want to delete?\");\r\n\t  if(confrm)\r\n\t  {\r\n\t\talert('Deleted '+headID);\r\n\t  }\r\n\t}\r\n\r\n\t\r\n\t\r\n\t  // *************************************************************** */\r\n\t  // ******************* Update Record  ******************/\r\n\t  // *************************************************************** */\r\n\r\n\tpublic onClickUpdateFeeHeadDetail(submitEvent) {\r\n\t\tconst data = submitEvent.value;\r\n\t\tconst id = data.fee_heads_id;\r\n\r\n\t\tconst formData = {\r\n\t\t  head_name: data.head_name\r\n\t\t};\r\n\t\tthis._manageFeeHeadsService\r\n\t\t  .updateFeeHeads(formData, id)\r\n\t\t  .subscribe(result => {\r\n\t\t\tif (result.status === 1) {\r\n\t\t\t  submitEvent.reset();\t\t\r\n\t\t\t  this._commonService.successToaster('Updated Successfully', 'Success!');\r\n\t\t\t  // load data from db after update\r\n\t\t\t  this.getAllFeeHeadsData();\r\n\t\t\t  this.closeModal();\r\n\t\t\t} else {\r\n\t\t\t  this._commonService.errorToaster(result.msg, 'Failed!');\r\n\t\t\t}\r\n\t\t  });\r\n\t}\r\n\t\r\n  // **************************************************************** */\r\n  // ******************* Delete Fee head  ******************/\r\n  // ********************************************************** ******/\r\n\r\n  public deleteFeeHead(id) {\r\n\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'You wont be able to revert this!',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        const deleteStatus = {\r\n          status: 0\r\n        };\r\n        // if user confirm then call delete API\r\n        this._manageFeeHeadsService\r\n          .deletesingleFeeHead(deleteStatus, id) // delete class service calling\r\n          .subscribe(resdata => {});\r\n        // show deleted notification\r\n\t\tthis.getAllFeeHeadsData();\r\n        this._commonService.successToaster('Deleted Successfully', 'Success!');\r\n        this.closeModal();\r\n      }\r\n    });\r\n  }\r\n\t\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { routing } from \"./manage-fee-heads.routing\";\r\nimport { HttpModule } from \"@angular/http\";\r\n\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { SelectModule } from \"ng2-select\";\r\nimport { ModalModule } from \"ngx-modal\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { Ng2SearchPipeModule } from \"ng2-search-filter\";\r\n//import { SearchPipe } from \"./search.pipe\";\r\nimport { NgxPrintModule } from \"ngx-print\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n/* components */\r\nimport { ManageFeeHeadsComponent } from \"./manage-fee-heads.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPrintModule,\r\n    SelectModule,\r\n    ModalModule,\r\n    HttpModule,\r\n    routing\r\n  ],\r\n  declarations: [ManageFeeHeadsComponent]\r\n})\r\nexport class ManageFeeHeadsModule {}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { ManageFeeHeadsComponent } from './manage-fee-heads.component';\r\n\r\nconst childRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ManageFeeHeadsComponent\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(childRoutes);"],"sourceRoot":""}