{"version":3,"sources":["webpack:///./node_modules/ng2-search-filter/ng2-search-filter.es5.js","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.scss","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/settings.module.ts","webpack:///./src/app/settings/settings.routing.ts"],"names":[],"mappings":"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","file":"settings-settings-module.js","sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\nvar Ng2SearchPipe = /** @class */ (function () {\n    function Ng2SearchPipe() {\n    }\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    Ng2SearchPipe.prototype.transform = function (items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    };\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    Ng2SearchPipe.filter = function (items, term) {\n        var /** @type {?} */ toCompare = term.toLowerCase();\n        return items.filter(function (item) {\n            for (var /** @type {?} */ property in item) {\n                if (item[property] === null) {\n                    continue;\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    return Ng2SearchPipe;\n}());\nNg2SearchPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filter',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = function () { return []; };\nvar Ng2SearchPipeModule = /** @class */ (function () {\n    function Ng2SearchPipeModule() {\n    }\n    return Ng2SearchPipeModule;\n}());\nNg2SearchPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            },] },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = function () { return []; };\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n//# sourceMappingURL=ng2-search-filter.es5.js.map\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 grid-margin stretch-card\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-lg-9 col-md-9\\\">\\r\\n                        <h4 class=\\\"card-title\\\">Settings</h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-3\\\" style=\\\"padding-bottom: 1.5em;\\\">\\r\\n                        <button _ngcontent-c2=\\\"\\\" (click)=\\\"openNgModal(addNewSession , 'md')\\\" class=\\\"btn btn-success btn-block\\\">Add New Session<i _ngcontent-c2=\\\"\\\" class=\\\"mdi mdi-plus\\\"></i></button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <ngb-tabset class=\\\"tab-solid tab-solid-primary\\\">\\r\\n                    <ngb-tab>\\r\\n                        <ng-template ngbTabTitle>\\r\\n                            List Session Details\\r\\n                        </ng-template>\\r\\n                        <ng-template ngbTabContent>\\r\\n                            <div class=\\\"table-responsive\\\">\\r\\n                                <div class=\\\"col-md-12 form-group\\\" style=\\\"text-align: center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span><h3>*Note </h3> </span>\\r\\n                                    <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tAll new Student will be Registered in Active Session : <strong style=\\\"color: green;\\\">{{activeSession}} </strong> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<small style=\\\"color: brown\\\"></small>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                                </div>\\r\\n                                <table class=\\\"table table-bordered table-hover\\\">\\r\\n                                    <thead class=\\\"thead-light\\\">\\r\\n                                        <tr>\\r\\n                                            <th># </th>\\r\\n                                            <th> Session </th>\\r\\n                                            <th> Start Date </th>\\r\\n                                            <th> End Date </th>\\r\\n                                            <th>Status </th>\\r\\n                                            <th *ngIf=\\\"(admin_level == 1)\\\">Actions</th>\\r\\n                                            <th> Edit </th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr *ngFor=\\\"let item of sessionData | paginate: { id: 'pager', itemsPerPage: pageSize, currentPage: pageNumber};let index = index\\\">\\r\\n                                            <td>{{index + 1}}</td>\\r\\n                                            <td [style.color]=\\\"item.status == 0 ? 'black' : 'green'\\\">{{item.session_name}}</td>\\r\\n                                            <td> {{ item.start_date * 1000 | date}} </td>\\r\\n                                            <td> {{ item.end_date * 1000 | date }}</td>\\r\\n\\r\\n                                            <td [style.color]=\\\"item.status == 0 ? 'brown' : 'green'\\\">\\r\\n                                                {{ item.status == '1' ? 'Active' : 'Inactive'}}\\r\\n                                            </td>\\r\\n\\r\\n                                            <td *ngIf=\\\"(admin_level == 1)\\\">\\r\\n                                                <span *ngIf=\\\"(item.status == 0)\\\" class=\\\"badge badge-primary\\\" (click)=setSessionActive(item.session_id) style=\\\"cursor: pointer;\\\">Set Active</span>\\r\\n                                                <span *ngIf=\\\"(item.status == 1)\\\" style=\\\"color: green\\\"><strong>Currently Running Session</strong></span>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <label class=\\\"badge badge-info\\\" (click)=\\\"openUpdateSessionModal(upd_SessionModal,index)\\\" style=\\\"cursor: pointer;\\\">Edit</label>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </ngb-tab>\\r\\n\\r\\n                    <ngb-tab>\\r\\n                        <ng-template ngbTabTitle>\\r\\n                            School Info\\r\\n                        </ng-template>\\r\\n                        <ng-template ngbTabContent>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-lg-12 col-md-12 \\\" style=\\\"margin-bottom: -2em;\\\">\\r\\n                                    <form class=\\\"form-group\\\" #schoolInfo=\\\"ngForm\\\" (ngSubmit)=\\\"schoolInfoUpdate(schoolInfo)\\\">\\r\\n                                        <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tSchool Name * <span style=\\\"color:red;\\\" *ngIf=\\\"!pickedSchhol.valid && pickedSchhol.touched\\\"><small> School Name Required</small> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n                                        <input type=\\\"text\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"school_name\\\" placeholder=\\\"name\\\" [(ngModel)]=\\\"school_name\\\" #pickedSchhol=\\\"ngModel\\\">\\r\\n                                        <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tSchool Phone Number * <span style=\\\"color:red;\\\" *ngIf=\\\"!pickedphon.valid && pickedphon.touched\\\"><small>Phone Number Required</small> </span></label>\\r\\n                                        <input type=\\\"number\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"school_phone\\\" placeholder=\\\"phone number\\\" [(ngModel)]=\\\"school_phone\\\" #pickedphon=\\\"ngModel\\\">\\r\\n                                        <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tSchool Address * <span style=\\\"color:red;\\\" *ngIf=\\\"!pickedaddress.valid && pickedaddress.touched\\\"><small>School Name Required</small> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n                                        <input type=\\\"text\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"school_address\\\" placeholder=\\\"Address\\\" [(ngModel)]=\\\"school_address\\\" #pickedaddress=\\\"ngModel\\\">\\r\\n                                        <div style=\\\"margin-top:1em ; text-align:right\\\">\\r\\n                                            <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" style=\\\"margin-top:0 em\\\" [disabled]=\\\"!schoolInfo.form.valid \\\" value=\\\"Update\\\">\\r\\n                                        </div>\\r\\n                                    </form>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </ngb-tab>\\r\\n\\t\\t\\t\\t\\t<ngb-tab>\\r\\n                        <ng-template ngbTabTitle>\\r\\n                            Promotional Message\\r\\n                        </ng-template>\\r\\n                        <ng-template ngbTabContent>\\r\\n\\t\\t\\t\\t\\t\\t\\t   <div class=\\\"table-responsive\\\">\\r\\n                                <div class=\\\"col-md-12 form-group\\\" style=\\\"text-align: center\\\">  <span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPromotional Messages\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<small style=\\\"color: brown\\\"></small></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!--\\r\\n                                <table class=\\\"table table-bordered table-hover\\\">\\r\\n                                    <thead class=\\\"thead-light\\\">\\r\\n                                        <tr>\\r\\n                                            <th># </th>\\r\\n                                            <th> Department </th>\\r\\n                                            <th> message </th>\\r\\n                                            <th> Start Date </th>\\r\\n                                            <th> End Date </th>\\r\\n                                            <th>Status </th>\\r\\n                                            <th> Edit </th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr *ngFor=\\\"let item of promotionalData | paginate: { id: 'pager', itemsPerPage: pageSize, currentPage: pageNumber};let index = index\\\">\\r\\n                                            <td>{{index + 1}}</td>\\r\\n                                            <td [style.color]=\\\"item.status == 0 ? 'black' : 'green'\\\">{{item.department}}</td>\\r\\n                                            <td [style.color]=\\\"item.status == 0 ? 'black' : 'green'\\\">{{item.message}}</td>\\r\\n                                            <td> {{ item.start_date * 1000 | date}} </td>\\r\\n                                            <td> {{ item.end_date * 1000 | date }}</td>\\r\\n                                            <td [style.color]=\\\"item.status == 0 ? 'brown' : 'green'\\\">\\r\\n                                                {{ item.status == '1' ? 'Active' : 'Inactive'}}\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <label class=\\\"badge badge-info\\\" (click)=\\\"openUpdateSessionModal(upd_SessionModal,index)\\\" style=\\\"cursor: pointer;\\\">Edit</label>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>-->\\r\\n                            </div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 col-md-12 \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form class=\\\"form-group\\\" #updatePromotionalMessag=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitUpdatePromotionalMessage(updatePromotionalMessag)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tMessage * <span style=\\\"color:red;\\\" *ngIf=\\\"!pickedUname.valid && pickedUname.touched\\\"><small> Required</small> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <textarea rows=\\\"4\\\" cols=\\\"50\\\" required class=\\\"form-control fm-control\\\" name=\\\"u_promotional_message\\\" [(ngModel)]=\\\"u_promotional_message\\\" #pickedUname=\\\"ngModel\\\"> </textarea>\\r\\n  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12 form-group modal_button\\\" style=\\\"text-align:right;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"submit\\\" class=\\\"btn btn-info\\\" style=\\\"margin-top:0 em\\\" [disabled]=\\\"!updatePromotionalMessag.form.valid \\\" value=\\\"Update Promotional Message\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n                    </ngb-tab>\\r\\n                </ngb-tabset>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- *********************************** Modals **************************************** -->\\r\\n\\r\\n<!-- ******** Add Session ************ -->\\r\\n\\r\\n<ng-template #addNewSession let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <div style=\\\"text-align: center; \\\">\\r\\n            <h3>Add New Session</h3>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-12 col-md-12 \\\">\\r\\n\\r\\n\\r\\n                <form class=\\\"form-group\\\" #addsession=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitAddSession(addsession)\\\">\\r\\n                    <div class=\\\"col-md-12 form-group\\\">\\r\\n                        <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tSession Name * <span style=\\\"color:red;\\\" *ngIf=\\\"!pickedUname.valid && pickedUname.touched\\\"><small> Session Name Required</small> </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n                        <input type=\\\"text\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"session_name\\\" placeholder=\\\"2018-2019\\\" [(ngModel)]=\\\"session_name\\\" #pickedUname=\\\"ngModel\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 form-group\\\">\\r\\n                        <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tStart Date * <span style=\\\"color:red;\\\" *ngIf=\\\"!pickedSDate.valid && pickedSDate.touched\\\"><small> Required</small> </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n                        <input type=\\\"date\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"s_date\\\" [(ngModel)]=\\\"s_date\\\" #pickedSDate=\\\"ngModel\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 form-group\\\">\\r\\n                        <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEnd Date * <span style=\\\"color:red;\\\"  *ngIf=\\\"!pickedEDate.valid && pickedEDate.touched\\\"><small>Required</small> </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n                        <input type=\\\"date\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"e_date\\\" [(ngModel)]=\\\"e_date\\\" #pickedEDate=\\\"ngModel\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 form-group modal_button\\\" style=\\\"text-align:right;\\\">\\r\\n                        <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" style=\\\"margin-top:0 em\\\" [disabled]=\\\"!addsession.form.valid \\\" value=\\\"Add New Session\\\">\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button class=\\\"btn btn-light\\\" (click)=\\\"modal.close()\\\">close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<!-- ******** Update Session ************ -->\\r\\n<ng-template #upd_SessionModal let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <div style=\\\"text-align: center; \\\">\\r\\n            <h3>Update Session</h3>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-12 col-md-12 \\\">\\r\\n\\r\\n\\r\\n                <form class=\\\"form-group\\\" #upsession=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitUpdateSession(upsession)\\\">\\r\\n                    <div class=\\\"col-md-12 form-group\\\">\\r\\n                        <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Session Name </label>\\r\\n                        <input type=\\\"text\\\"  style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"session_name\\\" [(ngModel)]=\\\"u_session_name\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 form-group\\\">\\r\\n                        <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tStart Date * <span style=\\\"color:red;\\\" *ngIf=\\\"!pickedUSDate.valid && pickedUSDate.touched\\\"><small>Required</small> </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n                        <input type=\\\"date\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"u_s_date\\\" [(ngModel)]=\\\"u_s_date\\\" #pickedUSDate=\\\"ngModel\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 form-group\\\">\\r\\n                        <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEnd Date * <span style=\\\"color:red;\\\" *ngIf=\\\"!pickedUEDate.valid && pickedUEDate.touched\\\"><small>Required</small> </span>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n                        <input type=\\\"date\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"u_e_date\\\" [(ngModel)]=\\\"u_e_date\\\" #pickedUEDate=\\\"ngModel\\\">\\r\\n                        <input type=\\\"hidden\\\" name=\\\"sess_id\\\" [(ngModel)]=\\\"sess_id\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12 form-group modal_button\\\" style=\\\"text-align:right;\\\">\\r\\n                        <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" style=\\\"margin-top:0 em\\\" [disabled]=\\\"!upsession.form.valid \\\" value=\\\"Update Session\\\">\\r\\n                    </div>\\r\\n                </form>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button class=\\\"btn btn-light\\\" (click)=\\\"modal.close()\\\">close</button>\\r\\n    </div>\\r\\n</ng-template>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport swal from 'sweetalert2';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SettingsService } from './settings.service';\r\nimport { GlobalService } from './../shared/services/global.service';\r\nimport { CommonService } from '../shared/services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n  providers: [SettingsService, CommonService]\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  // default\r\n  public loadData;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n\r\n  // school info update\r\n  public school_name = '';\r\n  public school_phone: number;\r\n  public school_address = '';\r\n  public school_id: number;\r\n\r\n  public s_date = '';\r\n  public e_date = '';\r\n\r\n  public u_session_name;\r\n  public u_s_date;\r\n  public u_e_date;\r\n  public session_id;\r\n  public sess_id;\r\n\r\n  public selected_session;\r\n\r\n  // array\r\n  public sessionData: Array<any> = [];\r\n  public promotionalData: Array<any> = [];\r\n  public u_promotional_message;\r\n  public activeSession = '';\r\n\r\n  public session_name = '';\r\n\r\n  public admin_level: any;\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private _globalService: GlobalService,\r\n    private _settingsService: SettingsService,\r\n    private _commonService: CommonService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // get admin level to set roles\r\n    this.admin_level = localStorage.getItem('admin_level');\r\n    this.get_sessionDetails();\r\n    this.get_activeSession();\r\n    this.get_schoolInfo();\r\n    this.get_promotionalData();\r\n  }\r\n\r\n  // *********************************************************************************************************************** */\r\n  /**********************************************************Read Data from DB Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  // ********************************************************** **********/\r\n  // ************************* get promotional message ***************************/\r\n  // ******************************************************************* */\r\n\t public get_promotionalData() {\r\n\t\tconst data = '';\r\n\t\tthis._settingsService.get_promotionalMessages(data).subscribe(result => {\r\n\t\t  if (result.status === 1) {\r\n\t\t\tthis.promotionalData = result.data;\r\n\t\t\tthis.u_promotional_message = this.promotionalData[0].message;\r\n\t\t\t//console.log(this.u_promotional_message);\r\n\t\t  } else if (result.status === 0) {\r\n\t\t\tthis._commonService.warningToaster(result.msg, 'Failed!');\r\n\t\t  } else {\r\n\t\t\tthis._commonService.errorToaster(result.msg, 'Error!');\r\n\t\t  }\r\n\t\t});\r\n\t  }\r\n   // ********************************************************** **********/\r\n  // *************************Update Promotional Message ***************************/\r\n  // ******************************************************************* */\r\n\tpublic onSubmitUpdatePromotionalMessage(submittedEvent) {\r\n\t\tconst updatedData = {\r\n\t\t  promotional_message_id: 1,\r\n\t\t  message: submittedEvent.value.u_promotional_message\r\n\t\t};\r\n\t\tthis._settingsService.update_promotionalMessages(updatedData).subscribe(result => {\r\n\t\t  if (result.status === 1) {\r\n\t\t\tthis._commonService.successToaster('Updated Successfully', 'Success!');\r\n\t\t\t//this.get_sessionDetails();\r\n\t\t  } else {\r\n\t\t\tthis._commonService.errorToaster('Some error try again', 'Failed!');\r\n\t\t  }\r\n\t\t});\r\n  }\r\n  \r\n\r\n  // ********************************************************** **********/\r\n  // ************************* get Session details ***************************/\r\n  // ******************************************************************* */\r\n  public get_sessionDetails() {\r\n    const data = 'all';\r\n    this._settingsService.get_sessionDetailsF(data).subscribe(result => {\r\n      if (result.status === 1) {\r\n        this.sessionData = result.data;\r\n      } else if (result.status === 0) {\r\n        this._commonService.warningToaster(result.msg, 'Failed!');\r\n      } else {\r\n        this._commonService.errorToaster(result.msg, 'Error!');\r\n      }\r\n    });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // ************************* get active session ***************************/\r\n  // ******************************************************************* */\r\n  public get_activeSession() {\r\n    this._settingsService.get_activeSessionF().subscribe(result => {\r\n      if (result.status === 1) {\r\n        this.activeSession = result.data[0].session_name;\r\n      } else if (result.status === 0) {\r\n        this._commonService.warningToaster(result.msg, 'Failed!');\r\n      } else {\r\n        this._commonService.errorToaster(result.msg, 'Error!');\r\n      }\r\n    });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // ************************* get School info  ***************************/\r\n  // ******************************************************************* */\r\n  public get_schoolInfo() {\r\n    this._settingsService.get_schoolInfoF().subscribe(result => {\r\n      if (result.status === 1) {\r\n        let schoolInfo = null;\r\n        schoolInfo = result.data[0];\r\n        this.school_name = schoolInfo.school_name;\r\n        this.school_phone = schoolInfo.school_num;\r\n        this.school_address = schoolInfo.school_address;\r\n        this.school_id = schoolInfo.school_id;\r\n      } else {\r\n        this._commonService.errorToaster(result.msg, 'Error!');\r\n      }\r\n    });\r\n  }\r\n\r\n  // *********************************************************************************************************************** */\r\n  /********************************************Add , Update , Delete  from DB Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  // ********************************************************** **********/\r\n  // *************************Add session ***************************/\r\n  // ******************************************************************* */\r\n\r\n  public onSubmitAddSession(submittedEvent) {\r\n    const data = {\r\n      session_name: submittedEvent.value.session_name.replace(/\\s+/g, ''),\r\n      start_date: new Date(submittedEvent.value.s_date).getTime() / 1000,\r\n      end_date: new Date(submittedEvent.value.e_date).getTime() / 1000\r\n    };\r\n    this._settingsService.add_newSession(data).subscribe(result => {\r\n      if (result.status === 1) {\r\n        this._commonService.successToaster('Added Successfully', 'Success!');\r\n        this.get_sessionDetails();\r\n        this.get_activeSession();\r\n      } else if (result.status === 3) {\r\n        this._commonService.warningToaster(result.msg, 'Failed!');\r\n      } else {\r\n        this._commonService.errorToaster(result.msg, 'Error!');\r\n      }\r\n    });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // *************************Set active session ***************************/\r\n  // ******************************************************************* */\r\n  public setSessionActive(session_id) {\r\n    const update_data = {\r\n      session_id: session_id,\r\n      status: 1\r\n    };\r\n\r\n    swal({\r\n      title: 'Are you sure to update active session?',\r\n      text: 'All new students will be registered against selected session ..! ',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Set New Session!'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        this._settingsService\r\n          .set_sessionActiveF(update_data)\r\n          .subscribe(respResult => {\r\n            if (respResult.status === 1) {\r\n              this._commonService.successToaster(\r\n                'Updated Successfully',\r\n                'Success!'\r\n              );\r\n              this.get_sessionDetails();\r\n              this.get_activeSession();\r\n              location.reload();\r\n            } else {\r\n              this._commonService.errorToaster(respResult.msg, 'Failed!');\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // *************************Update session info ***************************/\r\n  // ******************************************************************* */\r\n  public onSubmitUpdateSession(submittedEvent) {\r\n    const updatedData = {\r\n      session_id: submittedEvent.value.sess_id,\r\n      session_name: submittedEvent.value.session_name,\r\n      start_date: new Date(submittedEvent.value.u_s_date).getTime() / 1000,\r\n      end_date: new Date(submittedEvent.value.u_e_date).getTime() / 1000\r\n    };\r\n\t\r\n    this._settingsService.update_SessionInfo(updatedData).subscribe(result => {\r\n      if (result.status === 1) {\r\n        this._commonService.successToaster('Updated Successfully', 'Success!');\r\n        this.get_sessionDetails();\r\n      } else {\r\n        this._commonService.errorToaster('Some error try again', 'Failed!');\r\n      }\r\n    });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // *************************Update school Info ***************************/\r\n  // ******************************************************************* */\r\n\r\n  public schoolInfoUpdate(submittedEvent) {\r\n    const school_id = submittedEvent.value.school_id;\r\n    const update_data = {\r\n      school_name: submittedEvent.value.school_name,\r\n      school_num: submittedEvent.value.school_phone,\r\n      school_address: submittedEvent.value.school_address\r\n    };\r\n\r\n    this._settingsService\r\n      .update_schoolInfo(this.school_id, update_data)\r\n      .subscribe(result => {\r\n        if (result.status === 1) {\r\n          this._commonService.successToaster(\r\n            'Updated Successfully',\r\n            'Success!'\r\n          );\r\n          this.get_schoolInfo();\r\n        } else {\r\n          this._commonService.errorToaster(result.msg, 'Error!');\r\n        }\r\n      });\r\n  }\r\n\r\n  // * open modal for update session info\r\n\r\n  public openUpdateSessionModal(modalName, index) {\r\n    this.selected_session = this.sessionData[index];\r\n\r\n    this.u_session_name = this.selected_session['session_name'];\r\n    this.u_s_date = this._commonService.get_date_from_unix(\r\n      this.selected_session['start_date']\r\n    );\r\n\r\n    this.u_e_date = this._commonService.get_date_from_unix(\r\n      this.selected_session['end_date']\r\n    );\r\n\r\n    this.sess_id = this.selected_session['session_id'];\r\n    this.openNgModal(modalName, 'md');\r\n  }\r\n\r\n  // * pagination\r\n  public pageChanged(pN: number): void {\r\n    this.pageNumber = pN;\r\n  }\r\n\r\n  // new modal\r\n  public openNgModal(content, size) {\r\n    this.modalService.open(content, { size: size });\r\n  }\r\n\r\n  // close modal\r\n  public closeModal(modal) {\r\n    modal.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { routing } from './settings.routing';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { SelectModule } from 'ng2-select';\r\nimport { ModalModule } from 'ngx-modal';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n/* components */\r\nimport { SettingsComponent } from './settings.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    SelectModule,\r\n    ModalModule,\r\n    HttpModule,\r\n    routing\r\n  ],\r\n  declarations: [SettingsComponent]\r\n})\r\nexport class SettingsModule {}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { SettingsComponent } from './settings.component';\r\n\r\nconst childRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SettingsComponent\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(childRoutes);\r\n"],"sourceRoot":""}