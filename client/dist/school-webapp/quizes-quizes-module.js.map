{"version":3,"sources":["webpack:///./node_modules/ng2-search-filter/ng2-search-filter.es5.js","webpack:///./src/app/quizes/quizes.component.html","webpack:///./src/app/quizes/quizes.component.scss","webpack:///./src/app/quizes/quizes.component.ts","webpack:///./src/app/quizes/quizes.module.ts","webpack:///./src/app/quizes/quizes.routing.ts","webpack:///./src/app/quizes/quizes.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2D;AAC3D;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa,IAAI;AACjB,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA;AACA,4CAA4C,WAAW;AACvD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AAC8C;AAC9C;;;;;;;;;;;;ACnEA,0aAA0a,udAAud,uWAAuW,kBAAkB,+NAA+N,4SAA4S,iBAAiB,0TAA0T,kBAAkB,qOAAqO,oTAAoT,mBAAmB,+PAA+P,sFAAsF,kBAAkB,yOAAyO,mWAAmW,mBAAmB,iuBAAiuB,uKAAuK,mBAAmB,sFAAsF,oBAAoB,4JAA4J,8wBAA8wB,+DAA+D,sEAAsE,WAAW,mDAAmD,mBAAmB,mDAAmD,mBAAmB,mDAAmD,8BAA8B,mDAAmD,mBAAmB,yFAAyF,k1BAAk1B,oYAAoY,kBAAkB,qMAAqM,kFAAkF,yLAAyL,iBAAiB,kPAAkP,kBAAkB,2MAA2M,4RAA4R,mBAAmB,uMAAuM,sEAAsE,kBAAkB,+MAA+M,iTAAiT,mBAAmB,mNAAmN,wCAAwC,kNAAkN,kSAAkS,uCAAuC,8NAA8N,mSAAmS,yCAAyC,kNAAkN,2QAA2Q,g1BAAg1B,goBAAgoB,+DAA+D,0DAA0D,eAAe,mCAAmC,eAAe,mCAAmC,mBAAmB,6YAA6Y,k5BAAk5B,8WAA8W,+N;;;;;;;;;;;ACAl3c,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAiD;AACC;AACqB;AACL;AACQ;AACR;AACZ;AACvB;AAc/B;IAyCE,yBACU,cAA6B,EAC7B,iBAAmC,EACnC,mBAAuC,EACvC,oBAAyC,EACzC,YAA2B,EAE3B,YAAsB;QANtB,mBAAc,GAAd,cAAc,CAAe;QAC7B,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,iBAAY,GAAZ,YAAY,CAAe;QAE3B,iBAAY,GAAZ,YAAY,CAAU;QA/CzB,oBAAe,GAAG,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAoB1D,gBAAW,GAAG,KAAK,CAAC;QACpB,eAAU,GAAG,IAAI,CAAC;QAalB,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG,EAAE,CAAC;QAGrB,cAAS,GAAG,KAAK,CAAC;IAUf,CAAC;IAEJ,kCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,iBAAiB;IACxC,CAAC;IAED,6HAA6H;IAC7H,6HAA6H;IAC7H,6HAA6H;IAE7H,yEAAyE;IACzE,yEAAyE;IACzE,yEAAyE;IAElE,sCAAY,GAAnB;QAAA,iBAIC;QAHC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACnD,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4EAA4E;IAC5E,4EAA4E;IAC5E,2EAA2E;IAEpE,6CAAmB,GAA1B,UAA2B,QAAgB;QAA3C,iBAWC;QAVC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAC9B,0FAA0F;QAC1F,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC7D,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4EAA4E;IAC5E,4EAA4E;IAC5E,2EAA2E;IAEpE,gDAAsB,GAA7B,UAA8B,QAAQ,EAAE,UAAU,EAAE,aAAa;QAAjE,iBAyBC;QAxBC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,wBAAwB;QACxB,IAAM,IAAI,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,oBAAoB;aACtB,uBAAuB,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC;aACnE,SAAS,CAAC,gBAAM;YACf,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC;gBACjC,KAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBACnD,KAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;aACvD;YACD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,KAAI,CAAC,cAAc,CAAC,cAAc,CAChC,mCAAmC,EACnC,GAAG,CACJ,CAAC;aACH;YAED,IAAI,MAAM,CAAC,MAAM,KAAK,GAAG,EAAE;gBACzB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4EAA4E;IAC5E,yEAAyE;IACzE,2EAA2E;IAEpE,mCAAS,GAAhB,UAAiB,UAAU;QAA3B,iBAyBC;QAxBC,IAAM,IAAI,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,iBAAiB;YAChC,UAAU,EAAE,IAAI,CAAC,mBAAmB;YACpC,UAAU,EAAE,UAAU;YACtB,eAAe,EAAE,IAAI,CAAC,eAAe;SACtC,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;YACrD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC;aAE9B;YACD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,KAAI,CAAC,cAAc,CAAC,cAAc,CAChC,gCAAgC,EAChC,GAAG,CACJ,CAAC;aACH;YAED,IAAI,MAAM,CAAC,MAAM,KAAK,GAAG,EAAE;gBACzB,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;aACxE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4EAA4E;IAC5E,qEAAqE;IACrE,2EAA2E;IAEpE,+CAAqB,GAA5B,UAA6B,OAAO;QAApC,iBAqBC;QApBC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAM,IAAI,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,iBAAiB;YAChC,UAAU,EAAE,IAAI,CAAC,mBAAmB;YACpC,UAAU,EAAE,IAAI,CAAC,gBAAgB;YACjC,YAAY,EAAE,IAAI,CAAC,kBAAkB;YACrC,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,OAAO,EAAE,OAAO;SACjB,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;YAChE,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC;gBACnC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBACxD,KAAI,CAAC,qBAAqB,GAAG,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;aACnE;iBAAM;gBACL,kDAAI,CAAC,GAAG,EAAE,iCAAiC,EAAE,SAAS,CAAC,CAAC;gBACxD,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yEAAyE;IACzE,oEAAoE;IACpE,yEAAyE;IAElE,wCAAc,GAArB,UAAsB,WAAW;QAAjC,iBAwCC;QAvCC,YAAY;QACZ,IAAM,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC;QAEvC,IAAM,eAAe,GAAG,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1D,IAAM,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QACnC,IAAM,YAAY,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QAIxC,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QAChC,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC;QAEvC,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,SAAS,CAAC;QAClD,6CAA6C;QAE7C,IAAM,cAAc,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;QAExE,IAAM,aAAa,GAAG;YACpB,QAAQ,EAAE,IAAI,CAAC,iBAAiB;YAChC,UAAU,EAAE,IAAI,CAAC,mBAAmB;YACpC,UAAU,EAAE,OAAO;YACnB,KAAK,EAAE,YAAY,CAAC,KAAK;YACzB,SAAS,EAAE,cAAc;YACzB,YAAY,EAAE,YAAY,CAAC,YAAY;YACvC,IAAI,EAAE,IAAI,CAAC,eAAe;SAC3B,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC3D,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC;gBACrE,WAAW,CAAC,KAAK,EAAE,CAAC;gBACpB,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;aAEzB;iBAAM;gBACL,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC;aACtE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAID,yEAAyE;IACzE,uEAAuE;IACvE,yEAAyE;IAElE,4CAAkB,GAAzB,UAA0B,YAAoB,EAAE,OAAe,EAAE,MAAM;QAAvE,iBAoCC;QAlCC,IAAI,YAAY,GAAG,IAAI,CAAC,qBAAqB,EAAE;YAC7C,kDAAI,CACF,SAAS,EACT,+CAA+C;gBAC7C,IAAI,CAAC,qBAAqB;gBAC1B,GAAG,EACL,SAAS,CACV,CAAC;YACF,OAAO,KAAK,CAAC;SACd;QAED,IAAM,YAAY,GAAG;YAEnB,YAAY,EAAE,MAAM;YACpB,gBAAgB,EAAE,YAAY;YAC9B,SAAS,EAAE,OAAO;YAClB,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,0BAA0B,EAAE;SAEhE,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,gBAAM;YAErE,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBAExB,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC;aAEvE;iBAAM;gBAEN,kDAAI,CAAC,OAAO,EAAG,4BAA4B,EAAE,OAAO,CAAC,CAAC;aAEtD;QACF,CAAC,CAAC,CAAC;IAIL,CAAC;IAED,mHAAmH;IACnH,kHAAkH;IAClH,mHAAmH;IAE5G,yCAAe,GAAtB,UAAuB,WAAW;QAChC,IAAM,eAAe,GAAG,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClE,IAAM,UAAU,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QACtC,IAAM,YAAY,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QAExC,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC;QACtD,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC;QAE1D,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC;QACnC,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC;QACvC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAC7B,CAAC;IAED,4EAA4E;IAC5E,sEAAsE;IACtE,2EAA2E;IAEpE,yCAAe,GAAtB,UAAuB,KAAK,EAAE,OAAO;QACnC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,aAAa;IACN,mCAAS,GAAhB,UAAiB,KAAK;QACpB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,8CAA8C;IACvC,uCAAa,GAApB,UAAqB,QAAQ;QAC3B,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IACD,YAAY;IACZ,qCAAW,GAAX,UAAY,OAAO,EAAE,IAAI;QACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,mDAAmD;IAE5C,0CAAgB,GAAvB,UAAwB,UAAU;QAChC,IAAM,YAAY,GAAG,GAAG,CAAC;QACzB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;IAC5E,CAAC;IAED,0BAA0B;IACnB,wCAAc,GAArB,UAAsB,UAAU;QAC9B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;QAClC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,uDAAuD;IAChD,mCAAS,GAAhB;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,cAAc;IACP,oCAAU,GAAjB;QACE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IAvUU,eAAe;QAZ3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;YAGtB,SAAS,EAAE;gBACT,6EAAgB;gBAChB,kFAAkB;gBAClB,qFAAmB;gBACnB,6DAAa;gBACb,6EAAa;aACd;SACF,CAAC;yCA2C0B,6EAAa;YACV,6EAAgB;YACd,kFAAkB;YACjB,qFAAmB;YAC3B,6DAAa;YAEb,mEAAQ;OAhDrB,eAAe,CAwU3B;IAAD,sBAAC;CAAA;AAxU2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBa;AACM;AAEJ;AACA;AAEU;AACX;AACF;AACgB;AAEU;AAClE,gBAAgB;AACqC;AAiBrD;IAAA;IAA2B,CAAC;IAAf,YAAY;QAfxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAmB;gBACnB,kEAAmB;gBACnB,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBAEnB,uDAAY;gBACZ,qDAAW;gBACX,wDAAU;gBACV,uDAAO;aACR;YACD,YAAY,EAAE,CAAC,iEAAe,CAAC;SAChC,CAAC;OACW,YAAY,CAAG;IAAD,mBAAC;CAAA;AAAH;;;;;;;;;;;;;AC9BzB;AAAA;AAAA;AAAA;AAAuD;AACF;AAErD,IAAM,WAAW,GAAW;IAC1B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iEAAe;KAC3B;CACF,CAAC;AAEK,IAAM,OAAO,GAAG,4DAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVf;AACG;AACf;AACmC;AAGlE;IACE,uBAAoB,IAAU,EAAU,cAA6B;QAAjD,SAAI,GAAJ,IAAI,CAAM;QAAU,mBAAc,GAAd,cAAc,CAAe;QAE9D,eAAU,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC;QACtD,YAAO,GAAG,IAAI,qDAAO,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAHI,CAAC;IAKzE,8EAA8E;IAE9E,sCAAc,GAAd,UAAe,IAAI;QACjB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,kBAAkB,EAAE,IAAI,EAAE;YAChD,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;aACD,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACtC,CAAC;IAED,8EAA8E;IAC9E,mCAAW,GAAX,UAAY,IAAI;QACd,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,kBAAkB,EAAE,IAAI,EAAE;YAChD,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;aACD,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACtC,CAAC;IAED,kGAAkG;IAClG,iDAAyB,GAAzB,UAA0B,IAAI;QAC5B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,2BAA2B,EAAE,IAAI,EAAE;YACzD,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;aACD,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACtC,CAAC;IAEC,kGAAkG;IACpG,6CAAqB,GAArB,UAAsB,IAAI;QAExB,OAAO,IAAI,CAAC,IAAI;aACf,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,yBAAyB,EAAE,IAAI,EAAE;YACvD,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;aACD,GAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAGpC,CAAC;IA5CU,aAAa;QADzB,gEAAU,EAAE;yCAEe,kDAAI,EAA0B,6EAAa;OAD1D,aAAa,CA6CzB;IAAD,oBAAC;CAAA;AA7CyB","file":"quizes-quizes-module.js","sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\nvar Ng2SearchPipe = /** @class */ (function () {\n    function Ng2SearchPipe() {\n    }\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    Ng2SearchPipe.prototype.transform = function (items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    };\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    Ng2SearchPipe.filter = function (items, term) {\n        var /** @type {?} */ toCompare = term.toLowerCase();\n        return items.filter(function (item) {\n            for (var /** @type {?} */ property in item) {\n                if (item[property] === null) {\n                    continue;\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    return Ng2SearchPipe;\n}());\nNg2SearchPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filter',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = function () { return []; };\nvar Ng2SearchPipeModule = /** @class */ (function () {\n    function Ng2SearchPipeModule() {\n    }\n    return Ng2SearchPipeModule;\n}());\nNg2SearchPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            },] },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = function () { return []; };\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n//# sourceMappingURL=ng2-search-filter.es5.js.map\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 col-lg-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n\\r\\n                <h4 class=\\\"card-title\\\">Quizes Information</h4>\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"pull-right col-lg-12\\\">\\r\\n                        <div class=\\\"col-lg-3 pull-right \\\" style=\\\"padding-bottom: 1.5em;\\\">\\r\\n\\r\\n                            <button _ngcontent-c2=\\\"\\\" (click)=\\\"openNgModal(addQuizModel ,'lg')\\\" class=\\\"btn btn-success btn-block\\\">New\\r\\n                Quiz\\r\\n                <i _ngcontent-c2=\\\"\\\" class=\\\"mdi mdi-plus\\\"></i></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n                        <hr>\\r\\n                        <form style=\\\"margin-top:2em;\\\" class=\\\"form-group\\\" #Quizes=\\\"ngForm\\\" (ngSubmit)=\\\"submitgetQuizes(Quizes)\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n\\r\\n                                <div class=\\\"col-md-4 form-group\\\">\\r\\n                                    <label class=\\\"control-label\\\"> Class *</label>\\r\\n                                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedgCLass.valid && pickedgCLass.touched\\\"><small>Class\\r\\n                      Required</small></span>\\r\\n                                    <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" #pickedgCLass [(ngModel)]=\\\"g_class_id\\\" (change)=\\\"getSectionByClassID(pickedgCLass.value)\\\" name=\\\"g_class_id\\\">\\r\\n                    <option [ngValue]=\\\"undefined\\\" disabled>Select Class</option>\\r\\n                    <option *ngFor=\\\"let item of classdataList\\\" [value]=\\\"item.class_id\\\">{{item.class_name}}</option>\\r\\n                  </select>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-md-4 form-group\\\">\\r\\n                                    <label class=\\\"control-label\\\"> Section *</label>\\r\\n                                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedgSection.valid && pickedgSection.touched\\\"><small>Section\\r\\n                      Required</small></span>\\r\\n                                    <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" #pickedgSection [(ngModel)]=\\\"g_section_id\\\" (change)=\\\"sectionSelectedF(pickedgSection.value)\\\" name=\\\"g_section_id\\\">\\r\\n                    <option [ngValue]=\\\"undefined\\\" disabled>Select Section</option>\\r\\n                    <option *ngFor=\\\"let item of sectionsList\\\" [value]=\\\"item.section_id\\\">{{item.section_name}}</option>\\r\\n                  </select>\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-md-4 form-group\\\">\\r\\n                                    <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\"> Subject * </label>\\r\\n                                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedUSubject.valid && pickedUSubject.touched\\\"><small>Subject\\r\\n                      required</small></span>\\r\\n\\r\\n                                    <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" #pickedUSubject [(ngModel)]=\\\"g_subject_id\\\" (change)=funSelectedSub(pickedUSubject.value) name=\\\"g_subject_id\\\">\\r\\n                    <option [ngValue]=\\\"undefined\\\" disabled>Select Subject</option>\\r\\n                    <option *ngFor=\\\"let item of cSubjectsList\\\" [value]=\\\"item.subject_id + '-' + item.subject_type\\\">\\r\\n                      {{item.subject_name}}</option>\\r\\n                  </select>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-md-12 form-group\\\" style=\\\"text-align: center\\\">\\r\\n                                    <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" style=\\\"margin-top:1em\\\" [disabled]=\\\"!Quizes.form.valid || disableBtn\\\" value=\\\"List Quizes\\\">\\r\\n\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"showtable\\\">\\r\\n\\r\\n                    <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n\\r\\n                        <div style=\\\"text-align: center;\\\" class=\\\"mini-heading\\\">\\r\\n                            <h3> List Quiz Details</h3>\\r\\n                            <h4>\\r\\n                                Class : {{selectedClassName}}\\r\\n                            </h4>\\r\\n                            <h4> Section : {{selectedClsSection}}\\r\\n                            </h4>\\r\\n                        </div>\\r\\n                        <hr>\\r\\n                        <div style=\\\"height:50px;\\\">\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                        <table class=\\\"table table-bordered table-hover\\\">\\r\\n                            <thead class=\\\"thead-light\\\">\\r\\n                                <tr>\\r\\n                                    <th>S.No</th>\\r\\n                                    <th>Quiz Title</th>\\r\\n                                    <th>Subject </th>\\r\\n                                    <th> Quiz Date</th>\\r\\n                                    <th> Total Marks</th>\\r\\n                                    <th> Actions</th>\\r\\n\\r\\n\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of quiz_Data | paginate: { id: 'pager', itemsPerPage: pageSize, currentPage: pageNumber};let index = index\\\">\\r\\n\\r\\n                                    <td>{{index + 1}}</td>\\r\\n                                    <td>{{ item .quiz_title}}</td>\\r\\n                                    <td>{{item.subject_name}}</td>\\r\\n                                    <td>{{item.quiz_date * 1000 | date}}</td>\\r\\n                                    <td>{{item.quiz_t_marks}}</td>\\r\\n\\r\\n\\r\\n                                    <td> <label style=\\\"cursor: pointer;\\\" (click)=\\\"updateQuizModal(updateQuizModel,item.quiz_id)\\\" class=\\\"badge badge-info\\\">Update Marks </label></td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- *********************************** Modals **************************************** -->\\r\\n\\r\\n\\r\\n<!-- ******** Add Quiz ************ -->\\r\\n\\r\\n\\r\\n<ng-template #addQuizModel let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <div style=\\\"text-align: center\\\">\\r\\n            <h3>Add Quiz</h3>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    </div>\\r\\n\\r\\n    <form class=\\\"form-group\\\" #addQuiz=\\\"ngForm\\\" (ngSubmit)=\\\"onClickAddQuiz(addQuiz)\\\">'\\r\\n        <div class=\\\"modal-body\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\"> Class *</label>\\r\\n                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedCLass.valid && pickedCLass.touched\\\"><small>Class\\r\\n              Required</small></span>\\r\\n                    <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" #pickedCLass [(ngModel)]=\\\"classid\\\" (change)=classSelected(pickedCLass.value); name=\\\"classid\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\" disabled>Select Class</option>\\r\\n            <option *ngFor=\\\"let item of classdataList\\\" [value]=\\\"item.class_id\\\">{{item.class_name}}</option>\\r\\n          </select>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\"> Section *</label>\\r\\n                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedSection.valid && pickedSection.touched\\\"><small>Section\\r\\n              Required</small></span>\\r\\n                    <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" #pickedSection [(ngModel)]=\\\"sectionid\\\" (change)=\\\"sectionSelectedF(pickedSection.value)\\\" name=\\\"sectionid\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\" disabled>Select Section</option>\\r\\n            <option *ngFor=\\\"let item of sectionsList\\\" [value]=\\\"item.section_id\\\">{{item.section_name}}</option>\\r\\n          </select>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\"> Subject * </label>\\r\\n                    <span style=\\\"color:red; margin-left: 1em;\\\" *ngIf=\\\"!pickedSubject.valid && pickedSubject.touched\\\"><small>Subject\\r\\n              required</small></span>\\r\\n\\r\\n                    <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" #pickedSubject [(ngModel)]=\\\"subjectid\\\" (change)=funSelectedSub(pickedSubject.value) name=\\\"subjectid\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\" disabled>Select Subject</option>\\r\\n            <option *ngFor=\\\"let item of cSubjectsList\\\" [value]=\\\"item.subject_id + '-' + item.subject_type\\\">{{item.subject_name}}\\r\\n\\r\\n            </option>\\r\\n          </select>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Quiz Title * <span style=\\\"color:red;\\\"\\r\\n              *ngIf=\\\"!pickedassign.valid && pickedassign.touched\\\"><small>\\r\\n                Required</small> </span></label>\\r\\n                    <input type=\\\"text\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"title\\\" placeholder=\\\"Quiz Title\\\" [(ngModel)]=\\\"title\\\" #pickedassign=\\\"ngModel\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Quiz Date * <span style=\\\"color:red;\\\"\\r\\n              *ngIf=\\\"!pickeddueDate.valid && pickeddueDate.touched\\\"><small>\\r\\n                Quiz Date Required</small> </span></label>\\r\\n                    <input type=\\\"date\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"quizDate\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"quizDate\\\" #pickeddueDate=\\\"ngModel\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-4 form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Total Marks * <span style=\\\"color:red;\\\"\\r\\n              *ngIf=\\\"!pickedTM.valid && pickedTM.touched\\\"><small>\\r\\n                Marks Required</small> </span></label>\\r\\n                    <input type=\\\"number\\\" required style=\\\"margin-top:0em;\\\" class=\\\"form-control fm-control\\\" name=\\\"quiz_t_marks\\\" placeholder=\\\"Total Marks\\\" [(ngModel)]=\\\"quiz_t_marks\\\" #pickedTM=\\\"ngModel\\\">\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"col-md-12 form-group  modal_button\\\" style=\\\"text-align:right;\\\">\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"!addQuiz.form.valid || disableBtn\\\" value=\\\"Add Quiz\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<!-- ******** Update Student Quiz marks ************ -->\\r\\n\\r\\n\\r\\n<ng-template #updateQuizModel let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <div style=\\\"text-align: center\\\">\\r\\n            <h3>Update Quiz Marks </h3>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <table class=\\\"table table-bordered table-hover\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n                <tr>\\r\\n\\r\\n                    <th>Roll Num</th>\\r\\n                    <th>Name </th>\\r\\n                    <th>Total Marks</th>\\r\\n                    <th>Obtained Marks</th>\\r\\n                    <!-- <th> Quiz Pictures</th> -->\\r\\n                    <!-- <th>Upload Pictures</th> -->\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n\\r\\n                <tr *ngFor=\\\"let item of std_quizDetails | paginate: { id: 'pager', itemsPerPage: pageSize, currentPage: pageNumber};let index = index\\\">\\r\\n\\r\\n\\r\\n                    <td>{{item.roll_num}}</td>\\r\\n                    <td>{{item.std_name}}</td>\\r\\n                    <td>{{item.quiz_t_marks}}</td>\\r\\n                    <td><input type=\\\"number\\\" name=\\\"obt_marks\\\" #obtAssignMarks [(ngModel)]=\\\"item.obtained_marks\\\" (change)=\\\"updateStdQuizMarks(obtAssignMarks.value, item.quiz_id,item.std_id)\\\"></td>\\r\\n                    <!-- <td> -->\\r\\n                    <!-- <input type=\\\"file\\\" class=\\\"form-control fm-control\\\"> -->\\r\\n                    <!-- <label style=\\\"cursor: pointer;\\\" (click)=\\\"addStdAssignMarks(item.assign_id,item.std_id,obtAssignMarks.value , obtComment.value , submitDate.value)\\\" class=\\\"badge badge-info\\\">Update </label> -->\\r\\n                    <!-- </td> -->\\r\\n\\r\\n                </tr>\\r\\n\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- ******** Upload Quiz  ************ -->\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #uploadQuizModal let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <div style=\\\"text-align: center\\\">\\r\\n            <h3>Update Assignment Marks </h3>\\r\\n        </div>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <input id=\\\"cin\\\" name=\\\"cin\\\" type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" placeholder=\\\"Upload a file...\\\" multiple />\\r\\n\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"upload()\\\">\\r\\n      <i class=\\\"glyphicon glyphicon-open-file\\\"></i>&nbsp;Upload\\r\\n    </button>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\"","module.exports = \"\"","import { QuizesService } from './quizes.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SectionDataService } from '../sections/manageSection.service';\r\nimport { ClassDataService } from '../classes/manageClass.service';\r\nimport { SubjectsDataService } from '../subjects/manage-subjects.service';\r\nimport { CommonService } from '../shared/services/common.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-quizes',\r\n  templateUrl: './quizes.component.html',\r\n  styleUrls: ['./quizes.component.scss'],\r\n  providers: [\r\n    ClassDataService,\r\n    SectionDataService,\r\n    SubjectsDataService,\r\n    QuizesService,\r\n    CommonService\r\n  ]\r\n})\r\nexport class QuizesComponent implements OnInit {\r\n  public running_session = localStorage.getItem('running_session');\r\n  // Arrays\r\n  public classdataList: Array<any>;\r\n  public sectionsList: Array<any>;\r\n  public cSubjectsList: Array<any>;\r\n  public quiz_Data: Array<any>;\r\n  public std_quizDetails: Array<any>;\r\n\r\n  selected_class_id: number;\r\n  selected_section_id: number;\r\n\r\n  g_subject_id: number;\r\n  g_section_id: number;\r\n  g_class_id: number;\r\n\r\n  selected_subject;\r\n  selected_subj_type;\r\n  selected_quiz_t_marks;\r\n  selected_quiz_id;\r\n\r\n  public showHeading = false;\r\n  public disableBtn = true;\r\n  public selectedClass: number;\r\n\r\n  public selectedSubject: any;\r\n\r\n  public selectedClassName: string;\r\n  public selectedClsSection: string;\r\n\r\n  // add assignments variables\r\n\r\n  public classid: number;\r\n  public sectionid: number;\r\n  public subjectid: number;\r\n  public title = '';\r\n  public quizDate = '';\r\n  public quiz_t_marks: number;\r\n\r\n  showtable = false;\r\n\r\n  constructor(\r\n    private _commonService: CommonService,\r\n    private _classDataService: ClassDataService,\r\n    private _sectionDataService: SectionDataService,\r\n    private _subjectsDataService: SubjectsDataService,\r\n    private _quizService: QuizesService,\r\n\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getClassData(); // get class data\r\n  }\r\n\r\n  // *********************************************************************************************************************** */\r\n  /**********************************************************Read Data from DB Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  // ********************************************************** **********/\r\n  // *********************** Get all Classes data ************************/\r\n  // ******************************************************************* */\r\n\r\n  public getClassData() {\r\n    this._classDataService.getClassesF().subscribe(result => {\r\n      this.classdataList = result;\r\n    });\r\n  }\r\n\r\n  // ********************************************************************** */\r\n  // ************ Get Section Data Against Selected Class ***************** */\r\n  // ********************************************************************* */\r\n\r\n  public getSectionByClassID(class_id: number) {\r\n    this.selectedClass = class_id;\r\n    // * disbale btn untill section selcted and empty section array when selected class change\r\n    this.sectionsList = [];\r\n    this.cSubjectsList = [];\r\n\r\n    this.disableBtn = true;\r\n\r\n    this._sectionDataService.getSectionF(class_id).subscribe(result => {\r\n      this.sectionsList = result;\r\n    });\r\n  }\r\n\r\n  // ********************************************************************** */\r\n  // **** Get Elective And Core Subject Data by Class ID section ID ******* */\r\n  // ********************************************************************* */\r\n\r\n  public getSubjectByClassSecId(class_id, section_id, subjects_type) {\r\n    this.cSubjectsList = [];\r\n    this.disableBtn = true;\r\n    // *** get Core subjects\r\n    const type = 'all';\r\n    this._subjectsDataService\r\n      .getSubjectByClassSecIdF(class_id, section_id, this.running_session)\r\n      .subscribe(result => {\r\n        if (result.status === 1) {\r\n          this.disableBtn = false;\r\n          this.cSubjectsList = result.data;\r\n          this.selectedClassName = result.data[0].class_name;\r\n          this.selectedClsSection = result.data[0].section_name;\r\n        }\r\n        if (result.status === 0) {\r\n          this._commonService.warningToaster(\r\n            'No subject is added against class',\r\n            '!'\r\n          );\r\n        }\r\n\r\n        if (result.status === 403) {\r\n          console.log(result.msg);\r\n        }\r\n      });\r\n  }\r\n\r\n  // ********************************************************************** */\r\n  // ************************* Get Quizes details ********************** */\r\n  // ********************************************************************* */\r\n\r\n  public getQuizes(subject_id) {\r\n    const data = {\r\n      class_id: this.selected_class_id,\r\n      section_id: this.selected_section_id,\r\n      subject_id: subject_id,\r\n      running_session: this.running_session\r\n    };\r\n\r\n    this._quizService.get_quizesData(data).subscribe(result => {\r\n      if (result.status === 1) {\r\n        this.showtable = true;\r\n        this.quiz_Data = result.data;\r\n\r\n      }\r\n      if (result.status === 0) {\r\n        this._commonService.warningToaster(\r\n          'No Quiz is added against class',\r\n          '!'\r\n        );\r\n      }\r\n\r\n      if (result.status === 403) {\r\n        this._commonService.warningToaster('Server error try again', 'Error!');\r\n      }\r\n    });\r\n  }\r\n\r\n  // ********************************************************************** */\r\n  // ************* Get students for update quiz marks ************** */\r\n  // ********************************************************************* */\r\n\r\n  public getStudentQuizDetails(quiz_id) {\r\n    this.std_quizDetails = [];\r\n    const data = {\r\n      class_id: this.selected_class_id,\r\n      section_id: this.selected_section_id,\r\n      subject_id: this.selected_subject,\r\n      subject_type: this.selected_subj_type,\r\n      running_session: this.running_session,\r\n      quiz_id: quiz_id\r\n    };\r\n\r\n    this._quizService.get_students_quiz_details(data).subscribe(result => {\r\n      if (result.status === 1) {\r\n        this.std_quizDetails = result.data;\r\n        this.selected_quiz_id = this.std_quizDetails[0].quiz_id;\r\n        this.selected_quiz_t_marks = this.std_quizDetails[0].quiz_t_marks;\r\n      } else {\r\n        swal('!', 'No students added against class', 'warning');\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // ***************************** Add Quiz *************************/\r\n  // ******************************************************************* */\r\n\r\n  public onClickAddQuiz(submitEvent) {\r\n    // quiz data\r\n    const eventHandler = submitEvent.value;\r\n\r\n    const subject_id_type = eventHandler.subjectid.split('-');\r\n    const subj_id = subject_id_type[0];\r\n    const subject_type = subject_id_type[1];\r\n\r\n\r\n\r\n    this.selected_subject = subj_id;\r\n    this.selected_subj_type = subject_type;\r\n\r\n    this.selected_class_id = eventHandler.classid;\r\n    this.selected_section_id = eventHandler.sectionid;\r\n    // ** convert selected time to Unix timestamp\r\n\r\n    const unix_quiz_date = new Date(eventHandler.quizDate).getTime() / 1000;\r\n\r\n    const add_quiz_data = {\r\n      class_id: this.selected_class_id,\r\n      section_id: this.selected_section_id,\r\n      subject_id: subj_id,\r\n      title: eventHandler.title,\r\n      quiz_date: unix_quiz_date,\r\n      quiz_t_marks: eventHandler.quiz_t_marks,\r\n      year: this.running_session\r\n    };\r\n\r\n    this._quizService.add_newQuiz(add_quiz_data).subscribe(result => {\r\n      if (result.status === 1) {\r\n        this._commonService.successToaster('Added Successfully', 'Success!');\r\n        submitEvent.reset();\r\n        this.closeModal();\r\n        this.getQuizes(subj_id);\r\n\r\n      } else {\r\n        this._commonService.errorToaster('Server error try again', 'Error!');\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // ********************************************************** **********/\r\n  // ***************************** update Quiz *************************/\r\n  // ******************************************************************* */\r\n\r\n  public updateStdQuizMarks(obtQuizMarks: number, quiz_id: number, std_id) {\r\n\r\n    if (obtQuizMarks > this.selected_quiz_t_marks) {\r\n      swal(\r\n        'Oops...',\r\n        'Obtained marks must be less than total marks ' +\r\n          this.selected_quiz_t_marks +\r\n          '.',\r\n        'warning'\r\n      );\r\n      return false;\r\n    }\r\n\r\n    const quiz_dataObj = {\r\n\r\n      'student_id': std_id,\r\n      'obtained_marks': obtQuizMarks,\r\n      'quiz_id': quiz_id,\r\n      'marked_date': this._commonService.get_current_unix_timestamp()\r\n\r\n    };\r\n    this._quizService.upload_std_quiz_marks(quiz_dataObj).subscribe(result => {\r\n\r\n     if (result.status === 1) {\r\n\r\n      this._commonService.successToaster('Updated Successfully', 'Success!');\r\n\r\n     } else {\r\n\r\n      swal('Error' , 'Server Error, Try Again..!', 'error');\r\n\r\n     }\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  // ************************************************************************************************************* */\r\n  /*********************************************General   Methods************************************************ */\r\n  // ************************************************************************************************************* */\r\n\r\n  public submitgetQuizes(submitEvent) {\r\n    const subject_id_type = submitEvent.value.g_subject_id.split('-');\r\n    const subject_id = subject_id_type[0];\r\n    const subject_type = subject_id_type[1];\r\n\r\n    this.selected_class_id = submitEvent.value.g_class_id;\r\n    this.selected_section_id = submitEvent.value.g_section_id;\r\n\r\n    this.selected_subject = subject_id;\r\n    this.selected_subj_type = subject_type;\r\n    this.getQuizes(subject_id);\r\n  }\r\n\r\n  // ********************************************************************** */\r\n  // ************************* Update Quiz Marks Modal ************** */\r\n  // ********************************************************************* */\r\n\r\n  public updateQuizModal(modal, quiz_id) {\r\n    this.getStudentQuizDetails(quiz_id);\r\n    this.openModal(modal);\r\n  }\r\n\r\n  // open modal\r\n  public openModal(modal) {\r\n    this.openNgModal(modal, 'md');\r\n  }\r\n\r\n  // *** get sections against class for dropdown\r\n  public classSelected(class_id) {\r\n    this.getSectionByClassID(class_id);\r\n  }\r\n  // new modal\r\n  openNgModal(content, size) {\r\n    this.modalService.open(content, { size: size });\r\n  }\r\n\r\n  // *** Selected section class id to get subjects */\r\n\r\n  public sectionSelectedF(section_id) {\r\n    const subject_type = 'c';\r\n    this.getSubjectByClassSecId(this.selectedClass, section_id, subject_type);\r\n  }\r\n\r\n  // get selected subject id\r\n  public funSelectedSub(subject_id) {\r\n    this.selectedSubject = '';\r\n    this.selectedSubject = subject_id;\r\n    this.enableBtn();\r\n  }\r\n\r\n  // enable manage assignment btn when section isnt empty\r\n  public enableBtn() {\r\n    this.disableBtn = false;\r\n  }\r\n\r\n  // close modal\r\n  public closeModal() {\r\n    this.modalService.dismissAll();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { routing } from './quizes.routing';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { SelectModule } from 'ng2-select';\r\nimport { ModalModule } from 'ngx-modal';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n/* components */\r\nimport { QuizesComponent } from './quizes.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    SelectModule,\r\n    ModalModule,\r\n    HttpModule,\r\n    routing\r\n  ],\r\n  declarations: [QuizesComponent]\r\n})\r\nexport class QuizesModule {}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { QuizesComponent } from './quizes.component';\r\n\r\nconst childRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QuizesComponent\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(childRoutes);\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { GlobalService } from '../shared/services/global.service';\r\n\r\n@Injectable()\r\nexport class QuizesService {\r\n  constructor(private http: Http, private _globalService: GlobalService) {}\r\n\r\n  public serverLink = this._globalService.constants.serverLink;\r\n  public headers = new Headers(this._globalService.constants.headers);\r\n\r\n  // *********************** Call  API to get quiz *****************************\r\n\r\n  get_quizesData(data) {\r\n    return this.http\r\n      .post(this.serverLink + 'get/quiz/details', data, {\r\n        headers: this.headers\r\n      })\r\n      .map(response => response.json());\r\n  }\r\n\r\n  // *********************** Call  API to add quiz *****************************\r\n  add_newQuiz(data) {\r\n    return this.http\r\n      .post(this.serverLink + 'add/quiz/details', data, {\r\n        headers: this.headers\r\n      })\r\n      .map(response => response.json());\r\n  }\r\n\r\n  // *********************** Call  API to get students to update marks *****************************\r\n  get_students_quiz_details(data) {\r\n    return this.http\r\n      .post(this.serverLink + 'get/students/quiz_details', data, {\r\n        headers: this.headers\r\n      })\r\n      .map(response => response.json());\r\n  }\r\n\r\n    // *********************** Call  API to get students to update marks *****************************\r\n  upload_std_quiz_marks(data) {\r\n\r\n    return this.http\r\n    .post(this.serverLink + 'add/students/quiz_marks', data, {\r\n      headers: this.headers\r\n    })\r\n    .map(response => response.json());\r\n\r\n\r\n  }\r\n}\r\n"],"sourceRoot":""}