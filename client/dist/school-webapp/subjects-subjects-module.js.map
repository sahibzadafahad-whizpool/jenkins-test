{"version":3,"sources":["webpack:///./src/app/subjects/subjects.component.html","webpack:///./src/app/subjects/subjects.component.scss","webpack:///./src/app/subjects/subjects.component.ts","webpack:///./src/app/subjects/subjects.module.ts","webpack:///./src/app/subjects/subjects.routing.ts"],"names":[],"mappings":"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","file":"subjects-subjects-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"col-lg-12 grid-margin stretch-card\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <div class=\\\"col-lg-9 col-md-9\\\">\\r\\n\\t\\t\\t<h4 class=\\\"card-title text-center\\\">\\r\\n\\t\\t\\t\\tSubject Details\\r\\n\\t\\t\\t</h4>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-lg-3  \\\" style=\\\"padding-bottom: 1.5em;\\\">\\r\\n\\r\\n            <button _ngcontent-c2=\\\"\\\" (click)=\\\"openNgModal(addSubjectModal , 'md')\\\" class=\\\"btn btn-success btn-block\\\">New\\r\\n              Subject\\r\\n              <i _ngcontent-c2=\\\"\\\" class=\\\"mdi mdi-plus\\\"></i></button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-3\\\">\\r\\n              <div class=\\\"list-group\\\" style=\\\"padding-top: 0px; width: -webkit-fill-available;\\\">\\r\\n\\r\\n                <p class=\\\"list-group-item mini-sidebar\\\">\\r\\n                  <i class=\\\"fa fa-university\\\"></i>\\r\\n                  <span> Select Class</span>\\r\\n                </p>\\r\\n                <a *ngFor=\\\"let item of classData \\\" class=\\\"list-group-item\\\" style=\\\"cursor: pointer;\\\" class=\\\"list-group-item\\\" [style.background-color]=\\\"item.BackgroundColour\\\" [style.color]=\\\"item.color\\\"  (click)=\\\"onClickSideBar(item.class_id , item)\\\">\\r\\n                  <span>{{item.class_name}}</span>\\r\\n                </a>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-9 grid-margin \\\">\\r\\n\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <h4 class=\\\"card-title text-center\\\">\\r\\n\\t\\t\\t\\t\\t{{selectedClassName}} {{notAvailable}}\\r\\n\\t\\t\\t\\t   </h4>\\r\\n\\r\\n                  <ngb-tabset class=\\\"tab-solid tab-solid-primary\\\">\\r\\n                    <ngb-tab>\\r\\n                      <ng-template ngbTabTitle>\\r\\n                        Core Subjects\\r\\n                      </ng-template>\\r\\n                      <ng-template ngbTabContent>\\r\\n                        <table class=\\\"table table-bordered table-hover\\\">\\r\\n                          <thead class=\\\"thead-light\\\">\\r\\n                            <tr>\\r\\n\\r\\n                              <th>Section </th>\\r\\n                              <th>Subject </th>\\r\\n                              <th>Teacher </th>\\r\\n                              <th *ngIf=\\\"(admin_level == 1)\\\">Actions</th>\\r\\n\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr\\r\\n                              *ngFor=\\\"let item of coreSubjectsData | paginate: { id: 'pager', itemsPerPage: pageSize, currentPage: pageNumber};let index = index\\\">\\r\\n\\r\\n                              <td>{{item.section_name}}</td>\\r\\n                              <td>{{item.subject_name}}</td>\\r\\n\\r\\n                              <td>{{item.teacher_name}}</td>\\r\\n                              <td *ngIf=\\\"(admin_level == 1)\\\">\\r\\n\\r\\n                                <label class=\\\"badge badge-info\\\"\\r\\n                                  (click)=openEditSubjectModal(updateSubjectModal,item.subject_id,item.section_id,item.class_id)\\r\\n                                  style=\\\"cursor: pointer;\\\">Edit</label>\\r\\n                                <label class=\\\"badge badge-danger\\\"\\r\\n                                  (click)=deleteSubject(item.class_id,item.section_id,item.subject_id)\\r\\n                                  style=\\\"cursor: pointer; margin-left: 1em;\\\">Delete\\r\\n                                </label>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </ng-template>\\r\\n                    </ngb-tab>\\r\\n                    <ngb-tab>\\r\\n                      <ng-template ngbTabTitle>\\r\\n                        Elective Subjects\\r\\n                      </ng-template>\\r\\n                      <ng-template ngbTabContent>\\r\\n                        <table class=\\\"table table-bordered table-hover\\\">\\r\\n                          <thead class=\\\"thead-light\\\">\\r\\n                            <tr>\\r\\n                              <th>Section</th>\\r\\n                              <th>Subject</th>\\r\\n                              <th>Teacher</th>\\r\\n                              <th>Actions</th>\\r\\n\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr\\r\\n                              *ngFor=\\\"let item of electiveSubjectsData | paginate: { id: 'pager', itemsPerPage: pageSize, currentPage: pageNumber};let index = index\\\">\\r\\n                              <td>{{item.class_name}}</td>\\r\\n                              <td>{{item.section_name}}</td>\\r\\n                              <td>{{item.subject_name}}</td>\\r\\n\\r\\n                              <td>{{item.teacher_name}}</td>\\r\\n                              <td>\\r\\n\\r\\n\\r\\n                                <label class=\\\"badge badge-info\\\"\\r\\n                                  (click)=openEditSubjectModal(updateSubjectModal,item.subject_id,item.section_id,item.class_id)\\r\\n                                  style=\\\"cursor: pointer;\\\">Edit</label>\\r\\n                                <label class=\\\"badge badge-danger\\\"\\r\\n                                  (click)=deleteSubject(item.class_id,item.section_id,item.subject_id)\\r\\n                                  style=\\\"cursor: pointer; margin-left: 1em;\\\">Delete\\r\\n                                </label>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </ng-template>\\r\\n                    </ngb-tab>\\r\\n\\r\\n                  </ngb-tabset>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div style=\\\"text-align: center ; margin-top: 2em;\\\">\\r\\n            <form class=\\\"pagination-wrapper\\\">\\r\\n              <div class=\\\"form-group pages\\\">\\r\\n                <pagination-controls class=\\\"my-pagination\\\" id=\\\"pager\\\" (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"10\\\"\\r\\n                  directionLinks=\\\"true\\\" autoHide=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\"\\r\\n                  screenReaderPaginationLabel=\\\"Pagination\\\" screenReaderPageLabel=\\\"page\\\"\\r\\n                  screenReaderCurrentLabel=\\\"You're on page\\\">\\r\\n                </pagination-controls>\\r\\n              </div>\\r\\n\\r\\n            </form>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- add Subject modal  -->\\r\\n\\r\\n\\r\\n<ng-template #addSubjectModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <h3>Add New</h3>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n   <form class=\\\"form-group\\\" #addSubject=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitAddSubj(addSubject)\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-lg-6 form-group\\\">\\r\\n          <label class=\\\"control-label\\\"> Select Class *</label>\\r\\n          <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" #selectedClass [(ngModel)]=\\\"class_id\\\"\\r\\n            (change)=classSelected(selectedClass.value); name=\\\"class_id\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\" disabled>Select Class </option>\\r\\n            <option *ngFor=\\\"let item of classData\\\" [value]=\\\"item.class_id\\\">{{item.class_name}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Section *</label>\\r\\n          <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" [(ngModel)]=\\\"section_id\\\"\\r\\n            #selectedSection (change)=sectionSelected(selectedSection.value); name=\\\"section_id\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\" disabled>Select Section</option>\\r\\n            <option *ngFor=\\\"let item of sectionData\\\" [value]=\\\"item.section_id\\\">{{item.section_name}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 form-group\\\">\\r\\n          <label class=\\\"control-label\\\">Teacher</label>\\r\\n          <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" [(ngModel)]=\\\"teacher_id\\\" name=\\\"teacher_id\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\" disabled>Select Teacher </option>\\r\\n            <option *ngFor=\\\"let item of teachersData\\\" [value]=\\\"item.teacher_id\\\">{{item.teacher_name}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 form-group\\\">\\r\\n\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Subject Name *</label>\\r\\n          <span style=\\\"color:red;\\\" *ngIf=\\\"subjectCheckAlert\\\"><small style=\\\"margin-left: 1em;\\\"> Subject already\\r\\n              registred against class.</small> </span>\\r\\n          <input type=\\\"text\\\" style=\\\"margin-top:0em;\\\" required class=\\\"form-control fm-control\\\" name=\\\"subject_name\\\"\\r\\n            #subjName (change)=\\\"checkSubject(subjName.value)\\\" placeholder=\\\"Subject Name\\\" ngModel>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:.5em;\\\">Subject Type *</label>\\r\\n          <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" [(ngModel)]=\\\"subject_type\\\"\\r\\n            name=\\\"subject_type\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\" disabled>Select Type </option>\\r\\n            <option [value]=\\\"1\\\">Core</option>\\r\\n            <option [value]=\\\"2\\\">Elective</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n   <input type=\\\"submit\\\" class=\\\"btn btn-info\\\"\\r\\n            [disabled]=\\\"!addSubject.form.valid || disableBtn\\\" value=\\\"Add Subject\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n     </form>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- Update Subject  -->\\r\\n\\r\\n<ng-template #updateSubjectModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <h3>Update Subject Details</h3>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <form class=\\\"form-group\\\" #updateSubject=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitUpdateSubj(updateSubject)\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12 form-group\\\">\\r\\n          <label class=\\\"control-label\\\"> Class </label>\\r\\n          <input type=\\\"text\\\" [disabled]=\\\"true\\\" class=\\\"form-control fm-control\\\" name=\\\"className\\\" [(ngModel)]=\\\"className\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-12 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Section </label>\\r\\n          <input type=\\\"text\\\" [disabled]=\\\"true\\\" class=\\\"form-control fm-control\\\" name=\\\"sectionName\\\"\\r\\n            [(ngModel)]=\\\"sectionName\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-12 form-group\\\">\\r\\n          <label class=\\\"control-label\\\">Teacher</label>\\r\\n          <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" [(ngModel)]=\\\"teacherId\\\" name=\\\"teacherId\\\">\\r\\n            <option [ngValue]=\\\"undefined\\\" disabled>{{teacherName}}</option>\\r\\n            <option *ngFor=\\\"let item of teachersData\\\" [value]=\\\"item.teacher_id\\\">{{item.teacher_name}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-12 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Subject Name *</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control fm-control\\\" required name=\\\"subjectName\\\" [(ngModel)]=\\\"subjectName\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-12 form-group\\\">\\r\\n          <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\">Subject Type *</label>\\r\\n          <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" [(ngModel)]=\\\"subjectType\\\"\\r\\n            name=\\\"subjectType\\\">\\r\\n\\r\\n            <option [value]=\\\"1\\\">Core</option>\\r\\n            <option [value]=\\\"2\\\">Elective</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <input type=\\\"hidden\\\" name=\\\"classId\\\" [(ngModel)]=\\\"classId\\\">\\r\\n        <input type=\\\"hidden\\\" name=\\\"sectionId\\\" [(ngModel)]=\\\"sectionId\\\">\\r\\n        <input type=\\\"hidden\\\" name=\\\"subjectId\\\" [(ngModel)]=\\\"subjectId\\\">\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n  <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"!updateSubject.form.valid  \\\" value=\\\"Update Subject\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { TeachersDataService } from '../teachers/teachers.service';\r\nimport { ClassDataService } from '../classes/manageClass.service';\r\nimport { SectionDataService } from '../sections/manageSection.service';\r\nimport swal from 'sweetalert2';\r\nimport { SubjectsDataService } from './manage-subjects.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CommonService } from '../shared/services/common.service';\r\n\r\n// for using jquery\r\ndeclare var jquery: any;\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-subjects',\r\n  templateUrl: './subjects.component.html',\r\n  styleUrls: ['./subjects.component.scss'],\r\n  providers: [\r\n    SubjectsDataService,\r\n    TeachersDataService,\r\n    ClassDataService,\r\n    SectionDataService,\r\n    CommonService\r\n  ]\r\n})\r\nexport class SubjectsComponent implements OnInit {\r\n  public running_session = localStorage.getItem('running_session');\r\n\r\n  // Arrays\r\n  classData: Array<any>;\r\n  teachersData: Array<any>;\r\n  isSubjectPresentA: Array<any>;\r\n  sectionData: Array<any>;\r\n  electiveSubjectsData: Array<any>;\r\n  coreSubjectsData: Array<any>;\r\n  singleSubjectData: Array<any>;\r\n\r\n  // variables to store Update Info\r\n  subjectId;\r\n  subjectName;\r\n  classId;\r\n  teacherName;\r\n  teacherId;\r\n  sectionId;\r\n  sectionName;\r\n  className;\r\n  subjectType;\r\n\r\n  // variables to store add Info\r\n  subject_id;\r\n  subject_name;\r\n  class_id;\r\n  teacher_name;\r\n  teacher_id;\r\n  section_id;\r\n  section_name;\r\n  class_name;\r\n  subject_type;\r\n\r\n  selectedSection_id = 0;\r\n  selectedClass_id = 0;\r\n  // Notifications\r\n  successNotification = 0;\r\n  showNotiRequiredAll = 1;\r\n  subjectCheckAlert;\r\n  updateSuccessNotifi = 0;\r\n\r\n  selectedClassName = '* No Class Selected To Show ';\r\n  notAvailable;\r\n  disableBtn = false;\r\n\r\n  tabtitle = 'Add Subjects';\r\n  /* pagination Info */\r\n  pageSize = 10;\r\n  pageNumber = 1;\r\n\r\n  admin_level: any;\r\n\r\n  // creating object of Service's  to call methods  => 'this is called dependency injection'\r\n  constructor(\r\n    private _SubjectsDataService: SubjectsDataService,\r\n    private _classesDataService: ClassDataService,\r\n    private _teachersDataService: TeachersDataService,\r\n    private _sectionDataService: SectionDataService,\r\n    private modalService: NgbModal,\r\n    private _commonService: CommonService\r\n  ) {}\r\n\r\n  // ********************* auto run the function on page load *******************//\r\n  ngOnInit() {\r\n    // get admin level\r\n    this.admin_level = localStorage.getItem('admin_level');\r\n\r\n    // sidebar settings for select class\r\n    $('.list-group-item').click(function(e) {\r\n      e.preventDefault();\r\n      $('.list-group-item').removeClass('active');\r\n      $(this).addClass('active');\r\n    });\r\n\r\n    this.getClassData(); // call function to get class details for dropdown\r\n    this.getTeachersData(); // call function to get teachers details for dropdown\r\n  }\r\n\r\n  // ***************************************************************************************************************/\r\n  /******************************************Read Data from DB *********************************************/\r\n  // ***************************************************************************************************************/\r\n\r\n  // ********************************************************************** */\r\n  // *********************** Get Class Data ******************************* */\r\n  // ********************************************************************* */\r\n\r\n  public getClassData() {\r\n    this._classesDataService.getClassesF().subscribe(result => {\r\n      this.classData = result;\r\n    });\r\n  }\r\n\r\n  // ********************************************************************** */\r\n  // ************ Get Section Data Against Selected Class ***************** */\r\n  // ********************************************************************* */\r\n\r\n  public getSectionByClassID(class_id) {\r\n    // * disbale btn untill section selcted and empty section array when selected class change\r\n    this.sectionData = [];\r\n    this.section_id = null;\r\n    this.disableBtn = true;\r\n\r\n    this._sectionDataService.getSectionF(class_id).subscribe(result => {\r\n      this.sectionData = result;\r\n    });\r\n  }\r\n\r\n  // ********************************************************************** */\r\n  // *********************** Get Teachers Data ************************ */\r\n  // ********************************************************************* */\r\n\r\n  public getTeachersData() {\r\n    this._teachersDataService.getTeachersF().subscribe(result => {\r\n      this.teachersData = result;\r\n    });\r\n  }\r\n\r\n  // sidebar color change on click\r\n  onChildSelect(Child) {\r\n    // This would work but if you have the previously selected child stored\r\n    // it would be better to just turn that one white\r\n    for (const myChild of this.classData) {\r\n      myChild.BackgroundColour = 'white';\r\n      myChild.color = 'black';\r\n    }\r\n\r\n    Child.BackgroundColour = 'rgba(233, 233, 234, 0.48)';\r\n    Child.color = 'cornflowerblue';\r\n  }\r\n\r\n  public onClickSideBar(class_id, Child) {\r\n    this.getSubjectByClassId(class_id);\r\n    this.onChildSelect(Child);\r\n  }\r\n\r\n  // ********************************************************************** */\r\n  // ******* Get Elective And Core Subject Data by Class ID **************** */\r\n  // ********************************************************************* */\r\n\r\n  public getSubjectByClassId(class_id) {\r\n    // *** get elective subjects\r\n    this._SubjectsDataService\r\n      .getElectiveSubjectF(class_id, this.running_session)\r\n      .subscribe(result => {\r\n        this.electiveSubjectsData = result;\r\n        if (this.electiveSubjectsData.length) {\r\n          // if there is elective subject then store class name in variable to show in view heading\r\n\r\n          this.selectedClassName = this.electiveSubjectsData[0].class_name;\r\n          this.notAvailable = '';\r\n        } else {\r\n          this.selectedClassName = ' ';\r\n          this.notAvailable = 'Not Available';\r\n        }\r\n      });\r\n\r\n    // *** get Core subjects\r\n    this._SubjectsDataService\r\n      .getCoreSubjectF(class_id, this.running_session)\r\n      .subscribe(result => {\r\n        this.coreSubjectsData = result;\r\n        if (this.coreSubjectsData.length) {\r\n          this.selectedClassName = this.coreSubjectsData[0].class_name + \" Subject Details \";\r\n          this.notAvailable = '';\r\n        } else {\r\n          this.selectedClassName = ' ';\r\n          this.notAvailable = 'No Subject added';\r\n        }\r\n      });\r\n  }\r\n  // ********************************************************************** */\r\n  // ******* Get Single subject data against Class and Subject  *********** */\r\n  // ********************************************************************* */\r\n\r\n  public getSingleSubjectData(subject_id, section_id, class_id) {\r\n    let singleSubjectList = null;\r\n    this._SubjectsDataService\r\n      .getSingleSubjectF(subject_id, section_id, class_id, this.running_session)\r\n      .subscribe(result => {\r\n        this.singleSubjectData = result;\r\n        singleSubjectList = this.singleSubjectData[0];\r\n\r\n        this.subjectId = singleSubjectList.subject_id;\r\n        this.subjectName = singleSubjectList.subject_name;\r\n        this.classId = singleSubjectList.class_id;\r\n        this.teacherName = singleSubjectList.teacher_name;\r\n        this.teacherId = singleSubjectList.teacher_id;\r\n        this.sectionName = singleSubjectList.section_name;\r\n        this.className = singleSubjectList.class_name;\r\n        this.sectionId = singleSubjectList.section_id;\r\n        this.subjectType = singleSubjectList.subject_type;\r\n      });\r\n  }\r\n\r\n  // ***************************************************************************************************************/\r\n  /**************************************Write , Update , Delate Data  Methods*************************************/\r\n  // ***************************************************************************************************************/\r\n\r\n  // **************************************************************** */\r\n  // ******************* Add new subject event handler  ******************/\r\n  // ***************************************************************** */\r\n\r\n  public onSubmitAddSubj(submitEvent) {\r\n    const addSubjdata = submitEvent.value;\r\n    const class_id = addSubjdata.class_id;\r\n    const subject_type = Number(addSubjdata.subject_type);\r\n    const newSubjectData = {\r\n      class_id: Number(addSubjdata.class_id),\r\n      teacher_id: Number(addSubjdata.teacher_id),\r\n      section_id: Number(addSubjdata.section_id),\r\n      subject_name: addSubjdata.subject_name,\r\n      subject_type: subject_type,\r\n      year: this.running_session\r\n    };\r\n\r\n    this._SubjectsDataService.addSubjectF(newSubjectData).subscribe(result => {\r\n      this.getSubjectByClassId(class_id);\r\n      this.disableBtn = true;\r\n      if (result.status === 1) {\r\n        this._commonService.successToaster('Added Successfully', 'Success!');\r\n        this.closeModal();\r\n        submitEvent.reset(); // reset form after submission\r\n      } else {\r\n        this._commonService.errorToaster(result.msg, 'Error!');\r\n      }\r\n    });\r\n  }\r\n\r\n  // **************************************************************** */\r\n  // ******************* update subject event handler  ******************/\r\n  // ***************************************************************** */\r\n\r\n  public onSubmitUpdateSubj(submitEvent) {\r\n    const data = submitEvent.value;\r\n    const class_id = Number(data.classId);\r\n    const section_id = Number(data.sectionId);\r\n    const subject_id = Number(data.subjectId);\r\n    const updateSubjData = {\r\n      subject_name: data.subjectName,\r\n      subject_type: Number(data.subjectType),\r\n      teacher_id: Number(data.teacherId)\r\n    };\r\n\r\n    this._SubjectsDataService\r\n      .updateSubjectF(class_id, section_id, subject_id, updateSubjData)\r\n      .subscribe(result => {\r\n        if (result.status === 1) {\r\n          this.getSubjectByClassId(class_id); // load data after update\r\n          this._commonService.successToaster(\r\n            'Updated Successfully',\r\n            'Success!'\r\n          );\r\n          this.closeModal();\r\n        } else {\r\n          this._commonService.errorToaster(result.msg, 'Error!');\r\n        }\r\n      });\r\n  }\r\n\r\n  // *************************************************************** */\r\n  // *************** Delete Subject event handler  *****************/\r\n  // *************************************************************** */\r\n\r\n  public deleteSubject(class_id, section_id, subject_id) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'You wont be able to revert this!',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        const deleteStatus = {\r\n          status: 0\r\n        };\r\n        // if user confirm then call delete API\r\n        this._SubjectsDataService\r\n          .delSubjectF(class_id, section_id, subject_id, deleteStatus) // delete subject service calling\r\n          .subscribe(data => {\r\n            this.getSubjectByClassId(class_id); // load data after delete\r\n          });\r\n\r\n        this._commonService.successToaster('Deleted Successfully', 'Success!');\r\n      }\r\n    });\r\n  }\r\n\r\n  // ************************************************************************************************************* */\r\n  /*********************************************General   Methods************************************************ */\r\n  // ************************************************************************************************************* */\r\n\r\n  // new modal\r\n  openNgModal(content, size) {\r\n    this.modalService.open(content, { size: size });\r\n  }\r\n\r\n  public pageChanged(pN: number): void {\r\n    this.pageNumber = pN;\r\n  }\r\n\r\n  // show msg required all field newar submit button\r\n  public mouseOverButton(status) {\r\n    if (status === false) {\r\n      this.showNotiRequiredAll = 0;\r\n    } else {\r\n      this.showNotiRequiredAll = 1;\r\n    }\r\n  }\r\n\r\n  public mouseOutButton(status) {\r\n    this.showNotiRequiredAll = 1;\r\n  }\r\n\r\n  // *** get sections against class for dropdown\r\n  public classSelected(class_id) {\r\n    this.getSectionByClassID(class_id);\r\n    this.selectedClass_id = class_id;\r\n  }\r\n\r\n  // ***  get selected section id\r\n  public sectionSelected(section_id) {\r\n    // enable manage attendance btn when section isnt empty\r\n    this.disableBtn = false;\r\n    this.selectedSection_id = section_id;\r\n  }\r\n\r\n  // *** function to get subject name and check whether already added against selected class\r\n  public checkSubject(subject_name) {\r\n    let isSubjectPresent = 0;\r\n    const subjectDetails = {\r\n      subject_name: subject_name,\r\n      class_id: Number(this.selectedClass_id),\r\n      section_id: Number(this.selectedSection_id),\r\n      running_session: this.running_session\r\n    };\r\n\r\n    this._SubjectsDataService\r\n      .checkSubjectPresent(subjectDetails)\r\n      .subscribe(result => {\r\n        this.isSubjectPresentA = result;\r\n        isSubjectPresent = this.isSubjectPresentA[0].subject_present;\r\n        if (isSubjectPresent) {\r\n          this.subjectCheckAlert = 1;\r\n          isSubjectPresent = 1;\r\n          this.disableBtn = true;\r\n        } else {\r\n          this.subjectCheckAlert = 0;\r\n          isSubjectPresent = 0;\r\n          this.disableBtn = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  // * open model for edit subject details\r\n  public openEditSubjectModal(modal, subject_id, section_id, class_id) {\r\n    // call method to get single section data for updating\r\n    this.getSingleSubjectData(subject_id, section_id, class_id);\r\n\r\n    this.openNgModal(modal, 'md');\r\n  }\r\n\r\n  // close model\r\n  // close model\r\n  public closeModal() {\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  // open model\r\n  public openModal(modal) {\r\n    modal.open();\r\n  }\r\n\r\n  // hide update success alert after 2 secs\r\n  public FadeOutToaster() {\r\n    setTimeout(() => {\r\n      this.successNotification = 0;\r\n    }, 2000);\r\n  }\r\n\r\n  public FadeOutUpdateToaster() {\r\n    setTimeout(() => {\r\n      this.updateSuccessNotifi = 0;\r\n    }, 2000);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { routing } from './subjects.routing';\r\n\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { SelectModule } from 'ng2-select';\r\nimport { ModalModule } from 'ngx-modal';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n/* components */\r\nimport { SubjectsComponent } from './subjects.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgxPaginationModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    SelectModule,\r\n    ModalModule,\r\n    routing,\r\n    NgbModule.forRoot()\r\n  ],\r\n  declarations: [SubjectsComponent]\r\n})\r\nexport class SubjectsModule {}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { SubjectsComponent } from './subjects.component';\r\n\r\nconst childRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SubjectsComponent\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(childRoutes);\r\n"],"sourceRoot":""}