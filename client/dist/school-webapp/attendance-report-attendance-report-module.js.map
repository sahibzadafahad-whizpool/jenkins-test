{"version":3,"sources":["webpack:///./node_modules/ng2-search-filter/ng2-search-filter.es5.js","webpack:///./src/app/attendance-report/attendance-report.component.html","webpack:///./src/app/attendance-report/attendance-report.component.scss","webpack:///./src/app/attendance-report/attendance-report.component.ts","webpack:///./src/app/attendance-report/attendance-report.module.ts","webpack:///./src/app/attendance-report/attendance-report.routing.ts","webpack:///./src/app/attendance-report/attendance-report.service.ts","webpack:///./src/app/attendance-report/search.pipe.ts"],"names":[],"mappings":"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","file":"attendance-report-attendance-report-module.js","sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\nvar Ng2SearchPipe = /** @class */ (function () {\n    function Ng2SearchPipe() {\n    }\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    Ng2SearchPipe.prototype.transform = function (items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    };\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    Ng2SearchPipe.filter = function (items, term) {\n        var /** @type {?} */ toCompare = term.toLowerCase();\n        return items.filter(function (item) {\n            for (var /** @type {?} */ property in item) {\n                if (item[property] === null) {\n                    continue;\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    return Ng2SearchPipe;\n}());\nNg2SearchPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filter',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = function () { return []; };\nvar Ng2SearchPipeModule = /** @class */ (function () {\n    function Ng2SearchPipeModule() {\n    }\n    return Ng2SearchPipeModule;\n}());\nNg2SearchPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            },] },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = function () { return []; };\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n//# sourceMappingURL=ng2-search-filter.es5.js.map\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 \\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4 class=\\\"card-title\\\">Attendance Report</h4>\\r\\n        <form style=\\\"margin-top:2em;\\\" class=\\\"form-group\\\" #checkAttenReport=\\\"ngForm\\\"\\r\\n          (ngSubmit)=\\\"onSubmitCAttenRep(checkAttenReport)\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n              <label class=\\\"control-label\\\"> Class *</label>\\r\\n              <span style=\\\"color:red; margin-left: 1em;\\\"\\r\\n                *ngIf=\\\"!pickedStdCLass.valid && pickedStdCLass.touched\\\"><small>Class\\r\\n                  Required</small></span>\\r\\n              <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" #pickedStdCLass [(ngModel)]=\\\"std_classId\\\"\\r\\n                (change)=classSelected(pickedStdCLass.value); name=\\\"std_classId\\\">\\r\\n                <option [ngValue]=\\\"undefined\\\" disabled>Select Class</option>\\r\\n                <option *ngFor=\\\"let item of classDataList\\\" [value]=\\\"item.class_id\\\">{{item.class_name}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n              <label class=\\\"control-label\\\"> Section *</label>\\r\\n              <span style=\\\"color:red; margin-left: 1em;\\\"\\r\\n                *ngIf=\\\"!pickedStdSection.valid && pickedStdSection.touched\\\"><small>Section\\r\\n                  Required</small></span>\\r\\n              <select class=\\\"form-control fm-control\\\" style=\\\"margin-top:0em;\\\" #pickedStdSection\\r\\n                [(ngModel)]=\\\"std_sectionId\\\" (change)=enableBtn() name=\\\"std_sectionId\\\">\\r\\n                <option [ngValue]=\\\"undefined\\\" disabled>Select Section</option>\\r\\n                <option *ngFor=\\\"let item of sectionsDataList\\\" [value]=\\\"item.section_id\\\">{{item.section_name}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n              <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\"> Year * </label>\\r\\n              <span style=\\\"color:red; margin-left: 1em;\\\"\\r\\n                *ngIf=\\\"!pickedattendanceYear.valid && pickedattendanceYear.touched\\\"><small>Year\\r\\n                  required</small></span>\\r\\n\\r\\n              <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" #pickedattendanceYear\\r\\n                [(ngModel)]=\\\"attendance_year\\\" name=\\\"attendance_year\\\">\\r\\n                <option [ngValue]=\\\"undefined\\\" disabled>Select Year</option>\\r\\n                <option *ngFor=\\\"let year of years\\\" [ngValue]=\\\"year\\\">\\r\\n                  {{year}}\\r\\n                </option>\\r\\n\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n              <label class=\\\"control-label\\\" style=\\\"margin-top:0em;\\\"> Month * </label>\\r\\n              <span style=\\\"color:red; margin-left: 1em;\\\"\\r\\n                *ngIf=\\\"!pickedattendanceMonth.valid && pickedattendanceMonth.touched\\\"><small>Month\\r\\n                  required</small></span>\\r\\n\\r\\n              <select class=\\\"form-control fm-control\\\" required style=\\\"margin-top:0em;\\\" #pickedattendanceMonth\\r\\n                [(ngModel)]=\\\"attendance_month\\\" name=\\\"attendance_month\\\">\\r\\n                <option [ngValue]=\\\"undefined\\\" disabled>Select Month</option>\\r\\n                <option *ngFor=\\\"let month of months  let index = index\\\" [ngValue]=\\\"index+1\\\">\\r\\n                  {{month}}\\r\\n                </option>\\r\\n\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-12 form-group\\\" style=\\\"text-align: center\\\">\\r\\n              <input type=\\\"submit\\\" class=\\\"btn btn-info\\\" style=\\\"margin-top:2.5em\\\"\\r\\n                [disabled]=\\\"!checkAttenReport.form.valid || disableBtn\\\" value=\\\"Check Attendance Report\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-12 col-md-12\\\" style=\\\"text-align: center\\\">\\r\\n              <h5 style=\\\"color: red;\\\"> {{ studentAvailabe }}</h5>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"showTable\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"mini-heading\\\" style=\\\"text-align: center ; margin-top :-2.5em ; margin-bottom:2em;\\\">\\r\\n          <h3> Attendance Report For </h3>\\r\\n          <h4> {{selectedMonth}} - {{selectedYear}}</h4>\\r\\n\\r\\n          <h4>\\r\\n            Class : {{selectedClass}} | Section : {{selectedSection}}\\r\\n          </h4>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top: 1em; margin-bottom: 0em; padding-bottom: 1.5em; padding-top: 0em;\\\">\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n            <input class=\\\"form-control fm-control\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Roll Num / Student Name\\\">\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n           <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table table-bordered table-hover tbl_report\\\">\\r\\n          <thead class=\\\"thead-light\\\">\\r\\n            <tr>\\r\\n              <th>R.No</th>\\r\\n              <th> Name <span class=\\\"fa fa-arrow-down\\\"></span> |\\r\\n                Date <span class=\\\"fa fa-arrow-right\\\">\\r\\n                </span>{{index}}</th>\\r\\n              <th *ngFor=\\\"let day of daysArray  let index = index\\\">{{day}}</th>\\r\\n            </tr>\\r\\n\\r\\n            <tr *ngFor=\\\"let student of studentsAttendreport | filter : searchText\\\">\\r\\n              <td> {{student.roll_num}}</td>\\r\\n              <td> {{student.std_name}}</td>\\r\\n              <td *ngFor=\\\"let day of daysArray  let indexA = index\\\">\\r\\n                <span *ngFor=\\\"let attend of student.attendance\\\">\\r\\n                  <span *ngIf=\\\"attend.date == day\\\" [style.color]=\\\"attend.attend_status == 'A' ? 'red' : 'green'\\\">\\r\\n                    {{attend.attend_status}}\\r\\n                  </span>\\r\\n\\r\\n\\r\\n                </span>\\r\\n              </td>\\r\\n\\r\\n            </tr>\\r\\n\\r\\n          </thead>\\r\\n          <tbody>\\r\\n\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { StudentsInfoService } from '../students/student-information.service';\r\nimport { DailyAttendanceService } from '../attendance/daily-attendance.service';\r\nimport { SectionDataService } from '../sections/manageSection.service';\r\nimport { ClassDataService } from '../classes/manageClass.service';\r\nimport { AttendanceReportService } from './attendance-report.service';\r\n\r\n@Component({\r\n  selector: 'app-attendance-report',\r\n  templateUrl: './attendance-report.component.html',\r\n  styleUrls: ['./attendance-report.component.scss'],\r\n  providers: [\r\n    StudentsInfoService,\r\n    ClassDataService,\r\n    SectionDataService,\r\n    DailyAttendanceService,\r\n    AttendanceReportService\r\n  ]\r\n})\r\nexport class AttendanceReportComponent implements OnInit {\r\n  /* active session */\r\n  public running_session = localStorage.getItem('running_session');\r\n  showTable = false;\r\n  public searchText;\r\n  // Arrays\r\n  classDataList: Array<any>;\r\n  sectionsDataList: Array<any>;\r\n  studentsDataList: Array<any>;\r\n  studentAttendance: Array<any>;\r\n  studentsAttendreport: Array<any>;\r\n  years: Array<any> = [];\r\n  months: Array<any>;\r\n\r\n  /* List student data variables */\r\n\r\n  class_id: number;\r\n  class_name: string;\r\n  enroll_id: number;\r\n  std_rollNum: number;\r\n  std_sectionId: string;\r\n  section_name: string;\r\n  status: number;\r\n  std_address: string;\r\n  std_dob: string;\r\n  std_email: string;\r\n  std_gender: string;\r\n  std_id: number;\r\n  std_name: string;\r\n  std_parentId: number;\r\n  std_password: string;\r\n  std_phonenum: number;\r\n  std_prevSchool: string;\r\n  std_username: string;\r\n  std_classId: number;\r\n  attendance_date: string;\r\n  sectionId: number;\r\n  attend_status = 'Undefined';\r\n\r\n  attendance_year;\r\n  attendance_month;\r\n  index;\r\n  selectedClass: string = null;\r\n  selectedSection: string = null;\r\n  selectedYear: number = null;\r\n  selectedMonth: any = null;\r\n\r\n  attendanceUnixTime: any;\r\n  daysInMonth: number;\r\n  daysArray: Array<any> = [];\r\n\r\n  // notofication\r\n\r\n  studentAvailabe = '';\r\n  disableBtn = true;\r\n  markAttendRespMsg: string;\r\n  attendanceNotifiction = 0;\r\n  showHeading = false;\r\n\r\n  // create instance of services to access method from services\r\n  constructor(\r\n    private _StudentsInfoService: StudentsInfoService,\r\n    private _classDataService: ClassDataService,\r\n    private _sectionDataService: SectionDataService,\r\n    private _dailyAttendanceService: DailyAttendanceService,\r\n    private _attendanceReportService: AttendanceReportService\r\n  ) {}\r\n\r\n  // this function auto called when component loads\r\n  ngOnInit() {\r\n    this.getClassData();\r\n    this.getMonthYears();\r\n  }\r\n\r\n  // *********************************************************************************************************************** */\r\n  /**********************************************************Read Data from DB Methods************************************** */\r\n  // *********************************************************************************************************************** */\r\n\r\n  // ********************************************************** **********/\r\n  // *********************** Get all Classes data ************************/\r\n  // ******************************************************************* */\r\n\r\n  public getClassData() {\r\n    this._classDataService.getClassesF().subscribe(result => {\r\n      this.classDataList = result;\r\n    });\r\n  }\r\n\r\n  // ********************************************************************** */\r\n  // ************ Get Section Data Against Selected Class ***************** */\r\n  // ********************************************************************* */\r\n\r\n  public getSectionByClassID(class_id) {\r\n    // * disbale btn untill section selcted and empty section array when selected class change\r\n    this.sectionsDataList = [];\r\n    this.std_sectionId = null;\r\n    this.disableBtn = true;\r\n\r\n    this._sectionDataService.getSectionF(class_id).subscribe(result => {\r\n      this.sectionsDataList = result;\r\n    });\r\n  }\r\n\r\n  // ********************************************************** **********/\r\n  // ******************* Get student attendance report  *****************/\r\n  // ******************************************************************* */\r\n\r\n  public getStudentsAttendReport(\r\n    class_id,\r\n    section_id,\r\n    attendStartDate,\r\n    attendEndDate\r\n  ) {\r\n    /* get all students against selected class and Section*/\r\n\r\n    this._attendanceReportService\r\n      .getStdAttendReport(\r\n        class_id,\r\n        section_id,\r\n        attendStartDate,\r\n        attendEndDate,\r\n        this.running_session\r\n      )\r\n      .subscribe(result => {\r\n        this.studentsAttendreport = result.data; // get monthly student attendace report\r\n\r\n        if (this.studentsAttendreport.length) {\r\n          this.selectedClass = this.studentsAttendreport[0].class_name;\r\n          this.selectedSection = this.studentsAttendreport[0].section_name;\r\n          this.studentAvailabe = ' ';\r\n          this.showTable = true;\r\n        } else {\r\n          this.studentAvailabe =\r\n            '* No Student Data available for selected class..!  ';\r\n          this.selectedClass = ' ';\r\n          this.selectedSection = ' ';\r\n        }\r\n      });\r\n  }\r\n\r\n  // ************************************************************************************************************* */\r\n  /*********************************************General   Methods************************************************ */\r\n  // ************************************************************************************************************* */\r\n\r\n  // *** selected class , section and date for attendance ****/\r\n\r\n  public onSubmitCAttenRep(submitEvent) {\r\n    const manageAttendData = submitEvent.value;\r\n\r\n    this.selectedYear = manageAttendData.attendance_year;\r\n    this.selectedMonth = manageAttendData.attendance_month;\r\n\r\n    // add 0 at start if month is les than 10\r\n    if (this.selectedMonth < 10) {\r\n      this.selectedMonth = '0' + this.selectedMonth;\r\n    }\r\n\r\n    // get days in a month\r\n    this.daysInMonth = new Date(\r\n      this.selectedYear,\r\n      this.selectedMonth,\r\n      0\r\n    ).getDate();\r\n\r\n    // set days of selected month\r\n    this.daysArray = [];\r\n    for (let i = 1; i <= this.daysInMonth; i++) {\r\n      this.daysArray.push(i);\r\n    }\r\n\r\n    const startDate = this.selectedYear + '-' + this.selectedMonth + '-' + '01';\r\n    const endDate =\r\n      this.selectedYear + '-' + this.selectedMonth + '-' + this.daysInMonth;\r\n\r\n    // convert to unix timestamp\r\n    const attendStartDate = new Date(startDate).getTime() / 1000;\r\n    const attendEndDate = new Date(endDate).getTime() / 1000;\r\n\r\n    const classId = manageAttendData.std_classId;\r\n    const sectionId = manageAttendData.std_sectionId;\r\n\r\n    // call function to get student attendance details against selected month\r\n    this.getStudentsAttendReport(\r\n      classId,\r\n      sectionId,\r\n      attendStartDate,\r\n      attendEndDate\r\n    );\r\n  }\r\n\r\n  // *** get sections against class for dropdown\r\n  public classSelected(class_id) {\r\n    this.getSectionByClassID(class_id);\r\n  }\r\n\r\n  // enable manage attendance btn when section isnt empty\r\n  public enableBtn() {\r\n    this.disableBtn = false;\r\n  }\r\n\r\n  // hide success toaster after 2 secs\r\n  FadeOutToaster() {\r\n    setTimeout(() => {\r\n      this.attendanceNotifiction = 0;\r\n    }, 1000);\r\n  }\r\n\r\n  // get list of YEars for dropdown\r\n  public getMonthYears() {\r\n    const currentYear = 2010;\r\n\r\n    // set values for year dropdown\r\n    for (let i = 0; i <= 100; i++) {\r\n      this.years.push(currentYear + i);\r\n    }\r\n\r\n    this.months = [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec'\r\n    ];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { routing } from './attendance-report.routing';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { SearchPipe } from './search.pipe';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n/* components */\r\nimport { AttendanceReportComponent } from './attendance-report.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    routing\r\n  ],\r\n  declarations: [AttendanceReportComponent, SearchPipe]\r\n})\r\nexport class AttendanceReportModule {}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { AttendanceReportComponent } from './attendance-report.component';\r\n\r\nconst childRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AttendanceReportComponent\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(childRoutes);\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { GlobalService } from '../shared/services/global.service';\r\n@Injectable()\r\nexport class AttendanceReportService {\r\n  constructor(private http: Http, private _globalService: GlobalService) {}\r\n  public headers = new Headers(this._globalService.constants.headers);\r\n  public serverLink = this._globalService.constants.serverLink;\r\n\r\n  // ********************* Call  API to get students Attendance report **********************\r\n\r\n  getStdAttendReport(\r\n    class_id,\r\n    section_id,\r\n    attendStartDate,\r\n    attendEndDate,\r\n    running_session\r\n  ) {\r\n    return this.http\r\n      .get(\r\n        this.serverLink +\r\n          'get/stdAttendReport/' +\r\n          class_id +\r\n          '/' +\r\n          section_id +\r\n          '/' +\r\n          attendStartDate +\r\n          '/' +\r\n          attendEndDate +\r\n          '/' +\r\n          running_session,\r\n        {\r\n          headers: this.headers\r\n        }\r\n      )\r\n      .map(response => response.json());\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"filter\"\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(items: any[], filterdata: string): any[] {\r\n    if (!items) return [];\r\n    if (!filterdata) return items;\r\n\r\n    filterdata = filterdata.toString();\r\n    return items.filter(searchValue => {\r\n      let rVal =\r\n        JSON.stringify(searchValue.roll_num).includes(filterdata) ||\r\n        JSON.stringify(searchValue.std_name).includes(filterdata);\r\n      return rVal;\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}